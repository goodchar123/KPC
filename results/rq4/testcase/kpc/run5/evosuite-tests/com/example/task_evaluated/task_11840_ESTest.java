/*
 * This file was automatically generated by EvoSuite
 * Fri May 05 02:11:52 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_11840;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_11840_ESTest extends task_11840_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_11840 task_11840_0 = new task_11840();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      // Undeclared exception!
      try { 
        task_11840_0.skipBytes(pipedInputStream0, 2340);
      } catch(IndexOutOfBoundsException e) {
         //
         // invalid offset or length
         //
         verifyException("com.example.task_evaluated.task_11840", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      task_11840 task_11840_0 = new task_11840();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 4994);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0);
      task_11840_0.skipBytes(pushbackInputStream0, (byte)1);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      task_11840 task_11840_0 = new task_11840();
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)106, (byte)0);
      try { 
        task_11840_0.skipBytes(byteArrayInputStream0, (byte)1);
      } catch(IOException e) {
         //
         // could not read from input stream
         //
         verifyException("com.example.task_evaluated.task_11840", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      task_11840 task_11840_0 = new task_11840();
      // Undeclared exception!
      try { 
        task_11840_0.skipBytes((InputStream) null, 401);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.task_evaluated.task_11840", e);
      }
  }
}
