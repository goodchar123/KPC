/*
 * This file was automatically generated by EvoSuite
 * Fri May 05 02:29:58 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_14007;
import java.awt.Desktop;
import java.security.KeyRep;
import java.util.EnumSet;
import javax.tools.DocumentationTool;
import javax.tools.StandardLocation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_14007_ESTest extends task_14007_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_14007 task_14007_0 = new task_14007();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        task_14007.createEnumSet((DocumentationTool.Location[]) null);
      } catch(NullPointerException e) {
         //
         // Elements cannot be null or empty
         //
         verifyException("com.example.task_evaluated.task_14007", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StandardLocation[] standardLocationArray0 = new StandardLocation[3];
      // Undeclared exception!
      try { 
        task_14007.createEnumSet(standardLocationArray0);
      } catch(NullPointerException e) {
         //
         // Element cannot be null
         //
         verifyException("com.example.task_evaluated.task_14007", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Desktop.Action[] desktop_ActionArray0 = new Desktop.Action[0];
      // Undeclared exception!
      try { 
        task_14007.createEnumSet(desktop_ActionArray0);
      } catch(NullPointerException e) {
         //
         // Elements cannot be null or empty
         //
         verifyException("com.example.task_evaluated.task_14007", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StandardLocation[] standardLocationArray0 = new StandardLocation[3];
      StandardLocation standardLocation0 = StandardLocation.CLASS_PATH;
      standardLocationArray0[0] = standardLocation0;
      standardLocationArray0[1] = standardLocationArray0[0];
      standardLocationArray0[2] = standardLocation0;
      EnumSet<StandardLocation> enumSet0 = task_14007.createEnumSet(standardLocationArray0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KeyRep.Type[] keyRep_TypeArray0 = new KeyRep.Type[1];
      KeyRep.Type keyRep_Type0 = KeyRep.Type.PUBLIC;
      keyRep_TypeArray0[0] = keyRep_Type0;
      EnumSet<KeyRep.Type> enumSet0 = task_14007.createEnumSet(keyRep_TypeArray0);
  }
}
