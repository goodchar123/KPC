/*
 * This file was automatically generated by EvoSuite
 * Thu May 04 10:22:56 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_6693;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.Instant;
import java.time.OffsetDateTime;
import java.time.ZoneOffset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockOffsetDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_6693_ESTest extends task_6693_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_6693 task_6693_0 = new task_6693();
      Instant instant0 = MockInstant.ofEpochMilli((-2572L));
      ZoneOffset zoneOffset0 = ZoneOffset.ofHours(0);
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.ofInstant(instant0, zoneOffset0);
      // Undeclared exception!
      try { 
        task_6693_0.changeNanoOfSecond(offsetDateTime0, (-1));
      } catch(DateTimeException e) {
         //
         // Invalid nano-of-second value: -1
         //
         verifyException("com.example.task_evaluated.task_6693", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      task_6693 task_6693_0 = new task_6693();
      Clock clock0 = MockClock.systemUTC();
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now(clock0);
      // Undeclared exception!
      try { 
        task_6693_0.changeNanoOfSecond(offsetDateTime0, 1000000000);
      } catch(DateTimeException e) {
         //
         // Invalid nano-of-second value: 1000000000
         //
         verifyException("com.example.task_evaluated.task_6693", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      task_6693 task_6693_0 = new task_6693();
      // Undeclared exception!
      try { 
        task_6693_0.changeNanoOfSecond((OffsetDateTime) null, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.task_evaluated.task_6693", e);
      }
  }
}
