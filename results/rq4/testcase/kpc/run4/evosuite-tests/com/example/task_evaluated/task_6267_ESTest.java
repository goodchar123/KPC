/*
 * This file was automatically generated by EvoSuite
 * Thu May 04 10:11:15 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_6267;
import java.time.Clock;
import java.time.DateTimeException;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.time.ZonedDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.MockLocalDateTime;
import org.evosuite.runtime.mock.java.time.MockZonedDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_6267_ESTest extends task_6267_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Instant instant0 = MockInstant.ofEpochSecond(0L);
      ZoneOffset zoneOffset0 = ZoneOffset.UTC;
      Clock clock0 = MockClock.fixed(instant0, zoneOffset0);
      LocalDateTime localDateTime0 = MockLocalDateTime.now(clock0);
      ZonedDateTime zonedDateTime0 = MockZonedDateTime.ofLocal(localDateTime0, zoneOffset0, zoneOffset0);
      // Undeclared exception!
      try { 
        task_6267.withDayOfYear(zonedDateTime0, 0);
      } catch(DateTimeException e) {
         //
         // Invalid day of year value or day of year is invalid for the year
         //
         verifyException("com.example.task_evaluated.task_6267", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      task_6267 task_6267_0 = new task_6267();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        task_6267.withDayOfYear((ZonedDateTime) null, (-440));
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.task_evaluated.task_6267", e);
      }
  }
}
