/*
 * This file was automatically generated by EvoSuite
 * Wed May 03 21:45:46 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_2912;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_2912_ESTest extends task_2912_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_2912 task_2912_0 = new task_2912();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockFile mockFile0 = new MockFile(".class");
      try { 
        task_2912.inferBinaryName(mockFile0, "");
      } catch(IndexOutOfBoundsException e) {
         //
         // Invalid substring indices: String index out of range: -7
         //
         verifyException("com.example.task_evaluated.task_2912", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockFile mockFile0 = new MockFile("");
      // Undeclared exception!
      try { 
        task_2912.inferBinaryName(mockFile0, ": 3&1YmQE,");
      } catch(IllegalArgumentException e) {
         //
         // File is not in package : 3&1YmQE,
         //
         verifyException("com.example.task_evaluated.task_2912", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockFile mockFile0 = new MockFile("SRF}lcM{", "SRF}lcM{");
      // Undeclared exception!
      try { 
        task_2912.inferBinaryName(mockFile0, "SRF}lcM{");
      } catch(IllegalArgumentException e) {
         //
         // File is not a class file
         //
         verifyException("com.example.task_evaluated.task_2912", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockFile mockFile0 = new MockFile("/FMFcqxKwV)/!Ct|,It");
      // Undeclared exception!
      try { 
        task_2912.inferBinaryName(mockFile0, (String) null);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.task_evaluated.task_2912", e);
      }
  }
}
