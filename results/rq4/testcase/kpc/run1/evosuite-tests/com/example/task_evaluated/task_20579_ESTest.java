/*
 * This file was automatically generated by EvoSuite
 * Tue May 02 17:25:32 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_20579;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_20579_ESTest extends task_20579_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_20579 task_20579_0 = new task_20579();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      int int0 = (-2346);
      PreparedStatement preparedStatement1 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      int int1 = 1;
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      task_20579 task_20579_0 = new task_20579();
      ResultSet resultSet0 = mock(ResultSet.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(resultSet0).isClosed();
      doReturn(false).when(resultSet0).next();
      PreparedStatement preparedStatement0 = mock(PreparedStatement.class, new ViolatedAssumptionAnswer());
      doReturn(resultSet0).when(preparedStatement0).executeQuery();
      doReturn(true).when(preparedStatement0).isClosed();
      try { 
        task_20579_0.getTinyIntParameter(preparedStatement0, 0, (-4332));
      } catch(SQLException e) {
         //
         // Statement is closed.
         //
         verifyException("com.example.task_evaluated.task_20579", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      task_20579 task_20579_0 = new task_20579();
      // Undeclared exception!
      try { 
        task_20579_0.getTinyIntParameter((PreparedStatement) null, 2398, 0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
