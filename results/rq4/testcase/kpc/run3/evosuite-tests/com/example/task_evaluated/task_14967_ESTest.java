/*
 * This file was automatically generated by EvoSuite
 * Thu May 04 07:24:18 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_14967;
import java.util.AbstractMap;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_14967_ESTest extends task_14967_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_14967 task_14967_0 = new task_14967();
      AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry0 = new AbstractMap.SimpleEntry<String, String>("com.example.task_evaluated.task_14967", (String) null);
      AbstractMap.SimpleEntry<String, String> abstractMap_SimpleEntry1 = new AbstractMap.SimpleEntry<String, String>(abstractMap_SimpleEntry0);
      HashMap<Object, Object> hashMap0 = new HashMap<Object, Object>();
      Object object0 = hashMap0.put(abstractMap_SimpleEntry0, (Object) null);
      // Undeclared exception!
      try { 
        task_14967_0.getKey((Map<Object, Object>) hashMap0, (Object) abstractMap_SimpleEntry1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.task_evaluated.task_14967", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      task_14967 task_14967_0 = new task_14967();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = hashMap0.put("CKLHv9q-;&", "CKLHv9q-;&");
      AbstractMap.SimpleEntry<AbstractMap.SimpleEntry, String> abstractMap_SimpleEntry0 = task_14967_0.getKey((Map<AbstractMap.SimpleEntry<AbstractMap.SimpleEntry, String>, Object>) hashMap0, (Object) hashMap0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      task_14967 task_14967_0 = new task_14967();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      String string0 = hashMap0.put("CKLHv9q-;&", "CKLHv9q-;&");
      String string1 = task_14967_0.getKey((Map<String, String>) hashMap0, "CKLHv9q-;&");
  }
}
