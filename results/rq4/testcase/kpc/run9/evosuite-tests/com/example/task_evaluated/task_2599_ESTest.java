/*
 * This file was automatically generated by EvoSuite
 * Fri May 05 14:59:05 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_2599;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_2599_ESTest extends task_2599_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_2599 task_2599_0 = new task_2599();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      // Undeclared exception!
      try { 
        task_2599.storeVectorIntoArray((Vector<Float>) null, (float[]) null, 1126);
      } catch(NullPointerException e) {
         //
         // Vector or array is null
         //
         verifyException("com.example.task_evaluated.task_2599", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Vector<Float> vector0 = new Vector<Float>();
      // Undeclared exception!
      try { 
        task_2599.storeVectorIntoArray(vector0, (float[]) null, (-116));
      } catch(NullPointerException e) {
         //
         // Vector or array is null
         //
         verifyException("com.example.task_evaluated.task_2599", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Vector<Float> vector0 = new Vector<Float>();
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        task_2599.storeVectorIntoArray(vector0, floatArray0, (-1));
      } catch(IndexOutOfBoundsException e) {
         //
         // Offset is out of range: -1
         //
         verifyException("com.example.task_evaluated.task_2599", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Vector<Float> vector0 = new Vector<Float>();
      float[] floatArray0 = new float[0];
      // Undeclared exception!
      try { 
        task_2599.storeVectorIntoArray(vector0, floatArray0, 2660);
      } catch(IndexOutOfBoundsException e) {
         //
         // Offset is out of range: 2660
         //
         verifyException("com.example.task_evaluated.task_2599", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Vector<Float> vector0 = new Vector<Float>();
      float[] floatArray0 = new float[2];
      Float float0 = new Float(0.0);
      boolean boolean0 = vector0.add(float0);
      boolean boolean1 = vector0.add((Float) (-733.8382F));
      boolean boolean2 = vector0.add((Float) (-733.8382F));
      // Undeclared exception!
      try { 
        task_2599.storeVectorIntoArray(vector0, floatArray0, 0);
      } catch(IndexOutOfBoundsException e) {
         //
         // Copying would cause access of data outside array bounds
         //
         verifyException("com.example.task_evaluated.task_2599", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      float[] floatArray0 = new float[1];
      Vector<Float> vector0 = new Vector<Float>();
      Float float0 = new Float((float) 0);
      boolean boolean0 = vector0.add(float0);
      task_2599.storeVectorIntoArray(vector0, floatArray0, 0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Vector<Float> vector0 = new Vector<Float>();
      float[] floatArray0 = new float[8];
      boolean boolean0 = vector0.add((Float) null);
      // Undeclared exception!
      try { 
        task_2599.storeVectorIntoArray(vector0, floatArray0, 1);
      } catch(ArrayStoreException e) {
         //
         // Type mismatch: null
         //
         verifyException("com.example.task_evaluated.task_2599", e);
      }
  }
}
