/*
 * This file was automatically generated by EvoSuite
 * Fri May 05 08:07:53 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_13733;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_13733_ESTest extends task_13733_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_13733 task_13733_0 = new task_13733();
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      String string0 = hashMap0.putIfAbsent(task_13733_0, (String) null);
      task_13733.removeMapping((Map<Object, String>) hashMap0, (Object) task_13733_0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HashMap<Integer, Object> hashMap0 = new HashMap<Integer, Object>();
      Integer integer0 = new Integer(2883);
      task_13733.removeMapping((Map<Integer, Object>) hashMap0, integer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        task_13733.removeMapping((Map<String, Object>) null, "");
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<Object, Integer> hashMap0 = new HashMap<Object, Integer>();
      HashMap<Object, Integer> hashMap1 = new HashMap<Object, Integer>();
      Integer integer0 = new Integer((-1));
      Integer integer1 = hashMap1.put(hashMap0, integer0);
      hashMap0.putAll(hashMap1);
      // Undeclared exception!
      try { 
        task_13733.removeMapping((Map<Object, Integer>) hashMap0, (Object) hashMap0);
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
