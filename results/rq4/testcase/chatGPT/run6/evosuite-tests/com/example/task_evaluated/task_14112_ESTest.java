/*
 * This file was automatically generated by EvoSuite
 * Fri May 05 05:07:08 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_14112;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_14112_ESTest extends task_14112_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_14112 task_14112_0 = new task_14112();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      task_14112.addIfNotPresent((Set<Object>) linkedHashSet0, (Object) linkedHashSet0);
      task_14112.addIfNotPresent((Set<Object>) linkedHashSet0, (Object) linkedHashSet0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Integer integer0 = new Integer(0);
      // Undeclared exception!
      try { 
        task_14112.addIfNotPresent((Set<Integer>) null, integer0);
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LinkedHashSet<Object> linkedHashSet0 = new LinkedHashSet<Object>();
      task_14112.addIfNotPresent((Set<Object>) linkedHashSet0, (Object) linkedHashSet0);
      LinkedHashSet<Integer> linkedHashSet1 = new LinkedHashSet<Integer>();
      Object object0 = new Object();
      Integer integer0 = new Integer(0);
      boolean boolean0 = linkedHashSet1.add(integer0);
      task_14112.addIfNotPresent((Set<Object>) linkedHashSet0, object0);
      task_14112.addIfNotPresent((Set<Integer>) linkedHashSet1, (Integer) null);
      // Undeclared exception!
      try { 
        task_14112.addIfNotPresent((Set<Object>) linkedHashSet0, (Object) linkedHashSet1);
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
