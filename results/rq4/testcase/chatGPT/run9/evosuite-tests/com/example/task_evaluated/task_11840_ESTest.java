/*
 * This file was automatically generated by EvoSuite
 * Fri May 05 13:52:39 GMT 2023
 */

package com.example.task_evaluated;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.example.task_evaluated.task_11840;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class task_11840_ESTest extends task_11840_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      task_11840 task_11840_0 = new task_11840();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(mockFileInputStream0);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pushbackInputStream0);
      task_11840_0.skipBytes(bufferedInputStream0, (-1768));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      task_11840 task_11840_0 = new task_11840();
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      task_11840_0.skipBytes(dataInputStream0, 265);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      task_11840 task_11840_0 = new task_11840();
      PipedInputStream pipedInputStream0 = new PipedInputStream(842);
      try { 
        task_11840_0.skipBytes(pipedInputStream0, 842);
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      task_11840 task_11840_0 = new task_11840();
      // Undeclared exception!
      try { 
        task_11840_0.skipBytes((InputStream) null, 79);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.example.task_evaluated.task_11840", e);
      }
  }
}
