Please write a java method that remove one array from another array in Java
Here's a Java method that removes one array from another array:

```java
public static int[] removeArray(int[] arr1, int[] arr2) {
    List<Integer> list1 = new ArrayList<Integer>();
    List<Integer> list2 = new ArrayList<Integer>();
    
    // Convert arrays to lists
    for (int i : arr1) {
        list1.add(i);
    }
    for (int i : arr2) {
        list2.add(i);
    }
    
    // Remove elements from list1 that are in list2
    list1.removeAll(list2);
    
    // Convert list1 back to an array
    int[] result = new int[list1.size()];
    for (int i = 0; i < list1.size(); i++) {
        result[i] = list1.get(i);
    }
    
    return result;
}
```

This method takes two integer arrays as input and returns a new integer array that contains all the elements from the first array that are not in the second array. It does this by converting the arrays to lists, removing the elements from the first list that are in the second list, and then converting the resulting list back to an array.
------------------------------------------------------
Please check if the index is out of range         (index < 0 || index >= size()) for java.util.ArrayList.get(int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException.
Sure, here's the updated Java method that checks if the index is out of range and throws an `IndexOutOfBoundsException` if it is:

```java
public static int getElementAtIndex(ArrayList<Integer> list, int index) throws IndexOutOfBoundsException {
    if (index < 0 || index >= list.size()) {
        throw new IndexOutOfBoundsException("Index is out of range");
    }
    return list.get(index);
}
```

This method takes an `ArrayList` of integers and an index as input, and returns the element at the specified index. It first checks if the index is out of range using the condition `index < 0 || index >= list.size()`. If the index is out of range, it throws an `IndexOutOfBoundsException` with the message "Index is out of range". If the index is within range, it returns the element at the specified index using the `list.get(index)` method.
------------------------------------------------------
