
Sure, here's an updated version of the Java method that includes the checks you requested:

```java
public void setThreadPriority(Thread thread, int priority) throws IllegalArgumentException, SecurityException {
    if (priority < Thread.MIN_PRIORITY || priority > Thread.MAX_PRIORITY) {
        throw new IllegalArgumentException("Priority value must be between " + Thread.MIN_PRIORITY + " and " + Thread.MAX_PRIORITY);
    }
    SecurityManager securityManager = System.getSecurityManager();
    if (securityManager != null) {
        securityManager.checkAccess(thread);
    }
    thread.setPriority(priority);
}
```

This updated method first checks if the priority value is within the valid range of `MIN_PRIORITY` and `MAX_PRIORITY`. If it's not, it throws an `IllegalArgumentException` with a message indicating the valid range.

Next, it checks if the current thread has permission to modify the priority of the specified thread. If not, it throws a `SecurityException`.

Finally, if both checks pass, it sets the priority of the specified thread using the `setPriority()` method.
------------------------------------------------------
