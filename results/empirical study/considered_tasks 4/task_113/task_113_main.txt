Please write a java method that set the priority of a thread in Java
Sure, here's an example Java method that sets the priority of a thread:

```java
public void setThreadPriority(Thread thread, int priority) {
    thread.setPriority(priority);
}
```

This method takes in a `Thread` object and an integer value for the priority. It then calls the `setPriority()` method on the `Thread` object, passing in the priority value to set the thread's priority. 

Note that the priority value should be between 1 and 10, with 1 being the lowest priority and 10 being the highest priority.
------------------------------------------------------
Please check If the priority is not in the               range MIN_PRIORITY to               MAX_PRIORITY. for java.lang.Thread.setPriority(int) in the code snippet you provided, otherwise throw IllegalArgumentException.
Please check if the current thread cannot modify               this thread. for java.lang.Thread.setPriority(int) in the code snippet you provided, otherwise throw SecurityException.
Sure, here's an updated version of the Java method that includes the checks you requested:

```java
public void setThreadPriority(Thread thread, int priority) throws IllegalArgumentException, SecurityException {
    if (priority < Thread.MIN_PRIORITY || priority > Thread.MAX_PRIORITY) {
        throw new IllegalArgumentException("Priority value must be between " + Thread.MIN_PRIORITY + " and " + Thread.MAX_PRIORITY);
    }
    SecurityManager securityManager = System.getSecurityManager();
    if (securityManager != null) {
        securityManager.checkAccess(thread);
    }
    thread.setPriority(priority);
}
```

This updated method first checks if the priority value is within the valid range of `MIN_PRIORITY` and `MAX_PRIORITY`. If it's not, it throws an `IllegalArgumentException` with a message indicating the valid range.

Next, it checks if the current thread has permission to modify the priority of the specified thread. If not, it throws a `SecurityException`.

Finally, if both checks pass, it sets the priority of the specified thread using the `setPriority()` method.
------------------------------------------------------
