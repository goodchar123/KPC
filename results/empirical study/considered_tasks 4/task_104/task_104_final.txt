
Sure, here's an updated version of the `isPortInUse` method that checks for an I/O error when closing the `ServerSocket` and throws an `IOException` if one occurs:

```java
import java.io.IOException;
import java.net.ServerSocket;

public class PortChecker {
    public static boolean isPortInUse(int port) throws IOException {
        try (ServerSocket serverSocket = new ServerSocket(port)) {
            return false;
        } catch (IOException e) {
            return true;
        }
    }
}
```

This version of the method uses a try-with-resources block to automatically close the `ServerSocket` after it's created. If an I/O error occurs during the close operation, it will be thrown and propagated up to the calling method.
------------------------------------------------------
