{"loop_id": 0, "unhandled_api_list": ["java.time.LocalDate.get(java.time.temporal.TemporalField)", "java.time.LocalDate.get(java.time.temporal.TemporalField)", "java.time.LocalDate.get(java.time.temporal.TemporalField)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if a value for the field cannot be obtained or         the value is outside the range of valid values for the field for java.time.LocalDate.get(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the field is not supported or         the range of values exceeds an int for java.time.LocalDate.get(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw UnsupportedTemporalTypeException.", "Please check if numeric overflow occurs for java.time.LocalDate.get(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw ArithmeticException."], "num_of_unhandled_exception": 3}
{"loop_id": 1, "unhandled_api_list": ["java.time.LocalDate.get(java.time.temporal.TemporalField)", "java.time.LocalDate.get(java.time.temporal.TemporalField)", "java.time.LocalDate.get(java.time.temporal.TemporalField)", "java.lang.String.format(java.lang.String,java.lang.Object...)"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if a value for the field cannot be obtained or         the value is outside the range of valid values for the field for java.time.LocalDate.get(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the field is not supported or         the range of values exceeds an int for java.time.LocalDate.get(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw UnsupportedTemporalTypeException.", "Please check if numeric overflow occurs for java.time.LocalDate.get(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw ArithmeticException.", "Please check If a format string contains an illegal syntax, a format          specifier that is incompatible with the given arguments,          insufficient arguments given the format string, or other          illegal conditions.  For specification of all possible          formatting errors, see the Details section of the          formatter class specification. for java.lang.String.format(java.lang.String,java.lang.Object...) in the code snippet you provided, otherwise throw IllegalFormatException."], "num_of_unhandled_exception": 4}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
