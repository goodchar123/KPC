Please write a java method that find current working directory in Java
Sure, here's a Java method that finds the current working directory:

```java
public static String getCurrentWorkingDirectory() {
    String currentWorkingDirectory = System.getProperty("user.dir");
    return currentWorkingDirectory;
}
```

This method uses the `System.getProperty()` method to retrieve the current working directory. The `"user.dir"` argument specifies that we want to retrieve the system property for the current working directory. The method then returns the current working directory as a string.
------------------------------------------------------
Please check if a security manager exists and its             checkPropertyAccess method doesn't allow             access to the specified system property. for java.lang.System.getProperty(java.lang.String) in the code snippet you provided, otherwise throw SecurityException.
Please check if key is null. for java.lang.System.getProperty(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.
Please check if key is empty. for java.lang.System.getProperty(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.
Sure, here's the updated Java method that includes the security manager and input validation checks:

```java
public static String getCurrentWorkingDirectory() throws SecurityException, NullPointerException, IllegalArgumentException {
    SecurityManager securityManager = System.getSecurityManager();
    if (securityManager != null) {
        securityManager.checkPropertyAccess("user.dir");
    }
    String key = "user.dir";
    if (key == null) {
        throw new NullPointerException("Key cannot be null");
    }
    if (key.isEmpty()) {
        throw new IllegalArgumentException("Key cannot be empty");
    }
    String currentWorkingDirectory = System.getProperty(key);
    return currentWorkingDirectory;
}
```

This updated method first checks if a security manager exists and if it does, it checks if the `checkPropertyAccess()` method allows access to the `"user.dir"` system property. If access is not allowed, a `SecurityException` is thrown.

Next, the method checks if the `key` argument is null. If it is, a `NullPointerException` is thrown.

Finally, the method checks if the `key` argument is empty. If it is, an `IllegalArgumentException` is thrown.

If all checks pass, the method retrieves the current working directory using the `System.getProperty()` method and returns it as a string.
------------------------------------------------------
