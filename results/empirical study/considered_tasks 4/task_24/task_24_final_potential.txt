Please pay attention to potential exceptions.
You're right, it's important to handle potential exceptions in the code. Here's an updated version of the `extendArray` method that includes exception handling:

```java
public static int[] extendArray(int[] arr, int size) throws IllegalArgumentException {
    if (size < 0) {
        throw new IllegalArgumentException("Size must be non-negative.");
    }
    int[] newArr = new int[arr.length + size];
    System.arraycopy(arr, 0, newArr, 0, arr.length);
    return newArr;
}
```

In this version, we've added an `IllegalArgumentException` to handle the case where `size` is negative. If `size` is negative, the method will throw an exception with a message indicating that the size must be non-negative.

To use this updated method, you can call it like this:

```java
try {
    int[] arr = {1, 2, 3};
    int[] extendedArr = extendArray(arr, -2);
} catch (IllegalArgumentException e) {
    System.out.println(e.getMessage());
}
```

In this example, we're calling the `extendArray` method with a negative `size` value, which will trigger the exception. We're catching the exception and printing the error message to the console.

------------------------------------------------------
