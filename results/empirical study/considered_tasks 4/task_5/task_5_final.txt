
Sure, here's the updated code that checks for invalid regular expression syntax and throws a `PatternSyntaxException` if necessary:

```
import java.util.regex.PatternSyntaxException;

public static boolean searchWord(String str, String word) throws PatternSyntaxException {
    // Check for invalid regular expression syntax
    try {
        str.split(word);
    } catch (PatternSyntaxException e) {
        throw new PatternSyntaxException("Invalid regular expression syntax", e.getPattern(), e.getIndex());
    }
    
    // Split the string into an array of words
    String[] words = str.split(" ");
    
    // Loop through each word in the array
    for (String w : words) {
        // If the word matches the search word, return true
        if (w.equals(word)) {
            return true;
        }
    }
    
    // If the search word was not found, return false
    return false;
}
```

This code uses a try-catch block to check for invalid regular expression syntax when calling `str.split(word)`. If an exception is thrown, it is caught and a new `PatternSyntaxException` is thrown with a more descriptive error message.
------------------------------------------------------
