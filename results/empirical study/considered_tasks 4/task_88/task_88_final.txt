
You're right, it's important to check if the index is out of range before calling `list.get(i)` in the for loop. Here's the updated code snippet with the check and the `IndexOutOfBoundsException` thrown if the index is out of range:

```
public static void findMinMax(List<Integer> list) {
    if (list == null || list.isEmpty()) {
        System.out.println("List is empty or null");
        return;
    }
    
    int min = list.get(0);
    int max = list.get(0);
    
    for (int i = 1; i < list.size(); i++) {
        try {
            int value = list.get(i);
            if (value < min) {
                min = value;
            }
            if (value > max) {
                max = value;
            }
        } catch (IndexOutOfBoundsException e) {
            System.out.println("Index out of range: " + e.getMessage());
            return;
        }
    }
    
    System.out.println("Minimum value: " + min);
    System.out.println("Maximum value: " + max);
}
```

Now, if the index is out of range, it catches the `IndexOutOfBoundsException` and prints a message indicating the index is out of range.
------------------------------------------------------
