Please pay attention to potential exceptions.
You're right, it's important to handle potential exceptions when working with collections in Java. Here's an updated version of the `swap()` method that includes exception handling:

```java
public static void swap(Vector<Integer> vector, int index1, int index2) throws IndexOutOfBoundsException {
    try {
        int temp = vector.get(index1);
        vector.set(index1, vector.get(index2));
        vector.set(index2, temp);
    } catch (IndexOutOfBoundsException e) {
        throw new IndexOutOfBoundsException("Invalid index specified");
    }
}
```

In this version of the method, we've added a `try-catch` block to catch the `IndexOutOfBoundsException` that could be thrown if the specified indices are out of bounds for the vector. If an exception is caught, we throw a new `IndexOutOfBoundsException` with a more descriptive error message.

Note that we've also added the `throws` keyword to the method signature to indicate that this method can throw an `IndexOutOfBoundsException`. This is important for other developers who may be using this method, as it lets them know that they need to handle this exception when calling the method.

------------------------------------------------------
