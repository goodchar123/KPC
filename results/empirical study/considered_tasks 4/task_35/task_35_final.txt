
Sure, here's the updated code that checks for invalid pattern and error during printing:

```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class DateTimeExample {
    public static void main(String[] args) {
        try {
            LocalDateTime now = LocalDateTime.now();
            String pattern = "invalid pattern"; // replace with your desired pattern
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(pattern);
            String formattedDateTime = now.format(formatter);
            System.out.println("Current date and time: " + formattedDateTime);
        } catch (IllegalArgumentException e) {
            System.out.println("Invalid pattern: " + e.getMessage());
        } catch (DateTimeException e) {
            System.out.println("Error during printing: " + e.getMessage());
        }
    }
}
```

This code uses a try-catch block to catch the `IllegalArgumentException` and `DateTimeException` that may occur. If an invalid pattern is provided, an `IllegalArgumentException` will be thrown and the error message will be printed. If an error occurs during printing, a `DateTimeException` will be thrown and the error message will be printed.
------------------------------------------------------
