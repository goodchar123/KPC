Please write a java method that display current date and time in Java
Sure, here's a Java method that displays the current date and time:

```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class DateTimeExample {
    public static void main(String[] args) {
        LocalDateTime now = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String formattedDateTime = now.format(formatter);
        System.out.println("Current date and time: " + formattedDateTime);
    }
}
```

This code uses the `LocalDateTime` class to get the current date and time, and the `DateTimeFormatter` class to format it as a string. The resulting string is then printed to the console. The output will look something like this:

```
Current date and time: 2021-10-20 14:30:00
```
------------------------------------------------------
Please check if the pattern is invalid for java.time.format.DateTimeFormatter.ofPattern(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.
Please check if an error occurs during printing for java.time.LocalDateTime.format(java.time.format.DateTimeFormatter) in the code snippet you provided, otherwise throw DateTimeException.
Sure, here's the updated code that checks for invalid pattern and error during printing:

```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public class DateTimeExample {
    public static void main(String[] args) {
        try {
            LocalDateTime now = LocalDateTime.now();
            String pattern = "invalid pattern"; // replace with your desired pattern
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(pattern);
            String formattedDateTime = now.format(formatter);
            System.out.println("Current date and time: " + formattedDateTime);
        } catch (IllegalArgumentException e) {
            System.out.println("Invalid pattern: " + e.getMessage());
        } catch (DateTimeException e) {
            System.out.println("Error during printing: " + e.getMessage());
        }
    }
}
```

This code uses a try-catch block to catch the `IllegalArgumentException` and `DateTimeException` that may occur. If an invalid pattern is provided, an `IllegalArgumentException` will be thrown and the error message will be printed. If an error occurs during printing, a `DateTimeException` will be thrown and the error message will be printed.
------------------------------------------------------
