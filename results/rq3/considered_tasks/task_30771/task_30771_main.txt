Please write a java method that If necessary paints the currently selected item.
Here's a Java method that will paint the currently selected item:

```
public void paintSelected(Graphics g, int selectedIndex, List<String> items) {
    if (selectedIndex >= 0 && selectedIndex < items.size()) {
        g.setColor(Color.BLUE);
        g.fillRect(0, selectedIndex * 20, getWidth(), 20);
        g.setColor(Color.WHITE);
        g.drawString(items.get(selectedIndex), 10, selectedIndex * 20 + 15);
    }
}
```

This method takes in a `Graphics` object, the index of the currently selected item, and a list of items. It first checks if the selected index is within the bounds of the list. If it is, it sets the color to blue and fills a rectangle at the appropriate position to highlight the selected item. It then sets the color to white and draws the text of the selected item on top of the blue rectangle.
------------------------------------------------------
Please check if str is null. for java.awt.Graphics.drawString(java.lang.String,int,int) in the code snippet you provided, otherwise throw NullPointerException.
Please check if the index is out of range         (index < 0 || index >= size()) for java.util.List.get(int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException.
Here's the updated Java method that checks for null `str` and out of range index:

```
public void paintSelected(Graphics g, int selectedIndex, List<String> items) {
    if (selectedIndex < 0 || selectedIndex >= items.size()) {
        throw new IndexOutOfBoundsException("Selected index is out of range");
    }
    String str = items.get(selectedIndex);
    if (str == null) {
        throw new NullPointerException("Selected item is null");
    }
    g.setColor(Color.BLUE);
    g.fillRect(0, selectedIndex * 20, getWidth(), 20);
    g.setColor(Color.WHITE);
    g.drawString(str, 10, selectedIndex * 20 + 15);
}
```

This method now checks if the selected index is out of range and throws an `IndexOutOfBoundsException` if it is. It also checks if the selected item is null and throws a `NullPointerException` if it is. This ensures that the method will not attempt to paint a null item or an item that is out of range.
------------------------------------------------------
