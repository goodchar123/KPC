List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.String.split(java.lang.String)`
2. `java.lang.Integer.parseInt(java.lang.String)`
3. `java.io.PrintStream.println(java.lang.String)`

 + From response, we get: ['java.lang.String.split(java.lang.String)', 'java.lang.Integer.parseInt(java.lang.String)', 'java.io.PrintStream.println(java.lang.String)']
------------------------------------------------------
Is the PatternSyntaxException handled or caught for java.lang.String.split(java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NumberFormatException handled or caught for java.lang.Integer.parseInt(java.lang.String) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.util.regex.PatternSyntaxException` - used as a thrown exception
2. `java.lang.String.split(java.lang.String)` - used to split the `counterReset` string into parts
3. `java.lang.Integer.parseInt(java.lang.String)` - used to parse the initial value of the counter from the parts array

 + From response, we get: ['java.util.regex.PatternSyntaxException', 'java.lang.String.split(java.lang.String)', 'java.lang.Integer.parseInt(java.lang.String)']
------------------------------------------------------
Is the PatternSyntaxException handled or caught for java.lang.String.split(java.lang.String) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the NumberFormatException handled or caught for java.lang.Integer.parseInt(java.lang.String) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
