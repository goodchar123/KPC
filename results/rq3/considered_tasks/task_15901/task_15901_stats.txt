{"loop_id": 0, "unhandled_api_list": ["java.io.File.toPath()"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if a Path object cannot be constructed from the abstract          path (see FileSystem.getPath) for java.io.File.toPath() in the code snippet you provided, otherwise throw InvalidPathException."], "num_of_unhandled_exception": 1}
{"loop_id": 1, "unhandled_api_list": ["java.io.File.toPath()", "java.nio.file.Paths.get(java.net.URI)", "java.nio.file.Paths.get(java.net.URI)", "java.nio.file.Paths.get(java.net.URI)", "java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set)", "java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set)", "java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set)", "java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set)"], "num_of_unhandled_api": 8, "unhandled_exception_list": ["Please check if a Path object cannot be constructed from the abstract          path (see FileSystem.getPath) for java.io.File.toPath() in the code snippet you provided, otherwise throw InvalidPathException.", "Please check if preconditions on the uri parameter do not hold. The          format of the URI is provider specific. for java.nio.file.Paths.get(java.net.URI) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check The file system, identified by the URI, does not exist and          cannot be created automatically, or the provider identified by          the URI's scheme component is not installed for java.nio.file.Paths.get(java.net.URI) in the code snippet you provided, otherwise throw FileSystemNotFoundException.", "Please check if a security manager is installed and it denies an unspecified          permission to access the file system for java.nio.file.Paths.get(java.net.URI) in the code snippet you provided, otherwise throw SecurityException.", "Please check if the associated file system does not support the           PosixFileAttributeView for java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the sets contains elements that are not of type           PosixFilePermission for java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if an I/O error occurs for java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set) in the code snippet you provided, otherwise throw IOException.", "Please check In the case of the default provider, and a security manager is          installed, it denies          RuntimePermission(\"accessUserInformation\")          or its checkWrite          method denies write access to the file. for java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set) in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 8}
{"loop_id": 2, "unhandled_api_list": ["java.nio.file.Path.toUri()"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if an I/O error occurs obtaining the absolute path, or where a          file system is constructed to access the contents of a file as          a file system, and the URI of the enclosing file system cannot be          obtained for java.nio.file.Path.toUri() in the code snippet you provided, otherwise throw IOError."], "num_of_unhandled_exception": 1}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
