
Sure, here's the updated code snippet that includes the error handling you requested:

```java
import java.sql.*;

public int getDatabaseMinorVersion(Connection conn) throws SQLException {
    if (conn.isClosed()) {
        throw new SQLException("Connection is closed");
    }
    
    DatabaseMetaData metaData = null;
    try {
        metaData = conn.getMetaData();
    } catch (SQLException e) {
        throw new SQLException("Database access error", e);
    }
    
    try {
        return metaData.getDatabaseMinorVersion();
    } catch (SQLException e) {
        throw new SQLException("Database access error", e);
    }
}
```

This updated method first checks if the connection is closed using the `isClosed()` method of the `Connection` object. If the connection is closed, a `SQLException` is thrown with an appropriate message.

Next, the `getMetaData()` method is called on the `Connection` object to retrieve the `DatabaseMetaData` object. If a `SQLException` occurs during this step, it is caught and re-thrown with an appropriate message.

Finally, the `getDatabaseMinorVersion()` method is called on the `DatabaseMetaData` object to retrieve the minor version number. If a `SQLException` occurs during this step, it is caught and re-thrown with an appropriate message.

This should ensure that any database access errors or closed connection errors are properly handled and reported.
------------------------------------------------------
