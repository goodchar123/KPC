
Sure, here's an updated version of the code snippet that includes the requested checks:

```java
public void reportBooleanPropertyUpdate(String propertyName, boolean newValue) {
    // Check if there are any listeners registered to track updates of all properties
    if (allPropertyListeners != null) {
        // Notify all listeners that a property update has occurred
        for (PropertyChangeListener listener : allPropertyListeners) {
            listener.propertyChange(new PropertyChangeEvent(this, propertyName, null, newValue));
        }
    }
    
    // Check if the specified property name is null
    if (propertyName == null) {
        throw new NullPointerException("Property name cannot be null");
    }
    
    // Check if the specified property name is of an inappropriate type for this map
    if (!(propertyListeners instanceof Map<?, ?>) || !((Map<?, ?>) propertyListeners).containsKey(propertyName)) {
        throw new ClassCastException("Property name is of an inappropriate type for this map");
    }
    
    // Check if the specified property name is null and this map does not permit null keys
    if (propertyListeners.containsKey(null) && propertyName == null && !propertyListeners.containsKey(propertyName)) {
        throw new NullPointerException("This map does not permit null keys");
    }
    
    // Check if the specified property name is of an inappropriate type for this map
    if (!(propertyListeners instanceof Map<?, ?>) || !((Map<?, ?>) propertyListeners).containsKey(propertyName)) {
        throw new ClassCastException("Property name is of an inappropriate type for this map");
    }
    
    // Check if the specified property name is null and this map does not permit null keys
    if (propertyListeners.get(null) != null && propertyName == null && propertyListeners.get(propertyName) == null) {
        throw new NullPointerException("This map does not permit null keys");
    }
    
    // Check if there are any listeners registered to track updates of the specified property
    if (propertyListeners.containsKey(propertyName)) {
        // Notify all listeners that a property update has occurred
        for (PropertyChangeListener listener : propertyListeners.get(propertyName)) {
            // Check if the specified class parameter is null
            if (listener != null && PropertyChangeListener.class.is
------------------------------------------------------
