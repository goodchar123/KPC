List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.security.cert.PKIXRevocationChecker.getInstance()`
2. `java.security.cert.PKIXRevocationChecker.setOptions(java.util.Set<java.security.cert.PKIXRevocationChecker.Option>)`
3. `java.security.cert.PKIXRevocationChecker.init(boolean)`
4. `java.security.cert.PKIXRevocationChecker.isForwardCheckingSupported()`
5. `java.security.cert.PKIXRevocationChecker.getSupportedExtensions()`
6. `java.security.cert.PKIXRevocationChecker.check(java.security.cert.Certificate, java.util.Collection<java.lang.String>)`
7. `java.security.cert.CertPathChecker.init(boolean)`
8. `java.security.cert.CertPathChecker.isForwardCheckingSupported()`
9. `java.security.cert.CertPathChecker.getSupportedExtensions()`
10. `java.security.cert.CertPathValidatorException.CertPathValidatorException(String, Throwable)`

 + From response, we get: ['java.security.cert.PKIXRevocationChecker.getInstance()', 'java.security.cert.PKIXRevocationChecker.setOptions(java.util.Set<java.security.cert.PKIXRevocationChecker.Option>)', 'java.security.cert.PKIXRevocationChecker.init(boolean)', 'java.security.cert.PKIXRevocationChecker.isForwardCheckingSupported()', 'java.security.cert.PKIXRevocationChecker.getSupportedExtensions()', 'java.security.cert.PKIXRevocationChecker.check(java.security.cert.Certificate,java.util.Collection<java.lang.String>)', 'java.security.cert.CertPathChecker.init(boolean)', 'java.security.cert.CertPathChecker.isForwardCheckingSupported()', 'java.security.cert.CertPathChecker.getSupportedExtensions()', 'java.security.cert.CertPathValidatorException.CertPathValidatorException(String,Throwable)']
------------------------------------------------------
Is the CertPathValidatorException handled or caught for java.security.cert.CertPathChecker.init(boolean) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.security.cert.CertPathChecker.init(boolean)`
2. `java.security.cert.PKIXRevocationChecker.getInstance()`
3. `java.security.cert.PKIXRevocationChecker.setOptions(java.util.Set<java.security.cert.PKIXRevocationChecker.Option>)`
4. `java.security.cert.PKIXRevocationChecker.getSupportedExtensions()`
5. `java.security.cert.PKIXRevocationChecker.isForwardCheckingSupported()`
6. `java.security.cert.PKIXRevocationChecker.check(java.security.cert.Certificate, java.util.Collection<java.lang.String>)`
7. `java.security.cert.CertPathValidatorException`

 + From response, we get: ['java.security.cert.CertPathChecker.init(boolean)', 'java.security.cert.PKIXRevocationChecker.getInstance()', 'java.security.cert.PKIXRevocationChecker.setOptions(java.util.Set<java.security.cert.PKIXRevocationChecker.Option>)', 'java.security.cert.PKIXRevocationChecker.getSupportedExtensions()', 'java.security.cert.PKIXRevocationChecker.isForwardCheckingSupported()', 'java.security.cert.PKIXRevocationChecker.check(java.security.cert.Certificate,java.util.Collection<java.lang.String>)', 'java.security.cert.CertPathValidatorException']
------------------------------------------------------
Is the CertPathValidatorException handled or caught for java.security.cert.CertPathChecker.init(boolean) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
