
Sure, here's an updated version of the `writeSubstring` method that checks for the conditions you mentioned and throws an `IndexOutOfBoundsException` if any of them are true:

```java
public static void writeSubstring(String str, int startIndex, int endIndex) {
    if (startIndex < 0 || endIndex > str.length() || startIndex > endIndex) {
        throw new IndexOutOfBoundsException();
    }
    String substring = str.substring(startIndex, endIndex);
    System.out.println(substring);
}
```

This version of the method first checks if `startIndex` is negative, if `endIndex` is larger than the length of the string, or if `startIndex` is larger than `endIndex`. If any of these conditions are true, it throws an `IndexOutOfBoundsException`.

If none of the conditions are true, it proceeds to extract the substring and print it to the console
------------------------------------------------------
