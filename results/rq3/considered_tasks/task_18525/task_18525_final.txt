
Sure, here's the updated code snippet that checks for the conditions you mentioned and throws an `IndexOutOfBoundsException` if any of them are true:

```
public String getMarginRight(String cssRule) {
    String marginRight = "";
    int marginRightIndex = cssRule.indexOf("margin-right:");
    if (marginRightIndex != -1) {
        int semicolonIndex = cssRule.indexOf(";", marginRightIndex);
        if (semicolonIndex != -1) {
            try {
                marginRight = cssRule.substring(marginRightIndex + 13, semicolonIndex).trim();
            } catch (IndexOutOfBoundsException e) {
                throw new IndexOutOfBoundsException("Invalid substring indices: " + e.getMessage());
            }
        }
    }
    return marginRight;
}
```

This code uses a `try-catch` block to catch any `IndexOutOfBoundsException` that may be thrown by the `substring()` method. If an exception is caught, it is re-thrown with a custom error message that includes the original exception message. This way, the caller of the method can be informed of the specific error that occurred.
------------------------------------------------------
