{"loop_id": 0, "unhandled_api_list": ["java.time.YearMonth.of(int,int)", "java.time.YearMonth.getLong(java.time.temporal.TemporalField)", "java.time.YearMonth.getLong(java.time.temporal.TemporalField)", "java.time.YearMonth.getLong(java.time.temporal.TemporalField)"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if either field value is invalid for java.time.YearMonth.of(int,int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if a value for the field cannot be obtained for java.time.YearMonth.getLong(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the field is not supported for java.time.YearMonth.getLong(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw UnsupportedTemporalTypeException.", "Please check if numeric overflow occurs for java.time.YearMonth.getLong(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw ArithmeticException."], "num_of_unhandled_exception": 4}
{"loop_id": 1, "unhandled_api_list": ["java.time.YearMonth.of(int,int)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if either field value is invalid for java.time.YearMonth.of(int,int) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 1}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
