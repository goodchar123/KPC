List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.invoke.MethodHandles.lookup()`
2. `java.lang.invoke.MethodType.methodType(java.lang.Class, java.lang.Class...)`
3. `java.lang.invoke.MethodHandles.Lookup.findSpecial(java.lang.Class, java.lang.String, java.lang.invoke.MethodType, java.lang.Class)` 
4. `java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object...)`

 + From response, we get: ['java.lang.invoke.MethodHandles.lookup()', 'java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class...)', 'java.lang.invoke.MethodHandles.Lookup.findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class)', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...)']
------------------------------------------------------
Is the NoSuchMethodException handled or caught for java.lang.invoke.MethodHandles.Lookup.findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class) in the code snippet? Answer in Yes or No only.
No. The `NoSuchMethodException` is not handled or caught in the code snippet.
------------------------------------------------------
Is the IllegalAccessException handled or caught for java.lang.invoke.MethodHandles.Lookup.findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class) in the code snippet? Answer in Yes or No only.
No. The `IllegalAccessException` is not handled or caught in the code snippet.
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.invoke.MethodHandles.Lookup.findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class) in the code snippet? Answer in Yes or No only.
No. The `SecurityException` is not handled or caught in the code snippet.
------------------------------------------------------
Is the NullPointerException handled or caught for java.lang.invoke.MethodHandles.Lookup.findSpecial(java.lang.Class,java.lang.String,java.lang.invoke.MethodType,java.lang.Class) in the code snippet? Answer in Yes or No only.
No. The `NullPointerException` is not handled or caught in the code snippet.
------------------------------------------------------
Is the IllegalAccessException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
No. The `IllegalAccessException` is not handled or caught in the code snippet.
------------------------------------------------------
Is the IllegalArgumentException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
No. The `IllegalArgumentException` is not handled or caught in the code snippet.
------------------------------------------------------
Is the InvocationTargetException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes. The `InvocationTargetException` is not explicitly caught in the code snippet, but it is a checked exception that is declared to be thrown by the `invoke` method. Therefore, it must be handled or caught by the caller of the `invoke` method. In this case, the `main` method declares that it throws `Throwable`, which includes `InvocationTargetException`.
------------------------------------------------------
Is the NullPointerException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
No. The `NullPointerException` is not handled or caught in the code snippet.
------------------------------------------------------
Is the ExceptionInInitializerError handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
No. The `ExceptionInInitializerError` is not handled or caught in the code snippet.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.invoke.MethodHandles.lookup()`
2. `java.lang.invoke.MethodType.methodType(void.class, java.lang.String.class)`
3. `java.lang.invoke.MethodHandles.Lookup.findSpecial(MyClass.class, "myMethod", methodType, MyClass.class)`
4. `java.lang.reflect.Method.invoke(obj, "Hello World")`

 + From response, we get: ['java.lang.invoke.MethodHandles.lookup()', 'java.lang.invoke.MethodType.methodType(void.class,java.lang.String.class)', 'java.lang.invoke.MethodHandles.Lookup.findSpecial(MyClass.class,"myMethod",methodType,MyClass.class)', 'java.lang.reflect.Method.invoke(obj,"HelloWorld")']
------------------------------------------------------
