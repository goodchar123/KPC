{"loop_id": 0, "unhandled_api_list": ["java.time.LocalDate.with(java.time.temporal.TemporalAdjuster)", "java.time.LocalDate.with(java.time.temporal.TemporalAdjuster)", "java.time.LocalDateTime.with(java.time.temporal.TemporalAdjuster)", "java.time.LocalDateTime.with(java.time.temporal.TemporalAdjuster)", "java.time.ZonedDateTime.with(java.time.temporal.TemporalAdjuster)", "java.time.ZonedDateTime.with(java.time.temporal.TemporalAdjuster)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check if the adjustment cannot be made for java.time.LocalDate.with(java.time.temporal.TemporalAdjuster) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.LocalDate.with(java.time.temporal.TemporalAdjuster) in the code snippet you provided, otherwise throw ArithmeticException.", "Please check if the adjustment cannot be made for java.time.LocalDateTime.with(java.time.temporal.TemporalAdjuster) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.LocalDateTime.with(java.time.temporal.TemporalAdjuster) in the code snippet you provided, otherwise throw ArithmeticException.", "Please check if the adjustment cannot be made for java.time.ZonedDateTime.with(java.time.temporal.TemporalAdjuster) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.ZonedDateTime.with(java.time.temporal.TemporalAdjuster) in the code snippet you provided, otherwise throw ArithmeticException."], "num_of_unhandled_exception": 6}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
