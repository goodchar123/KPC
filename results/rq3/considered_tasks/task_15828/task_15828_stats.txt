{"loop_id": 0, "unhandled_api_list": ["java.nio.file.Path.resolve(java.lang.String)", "java.nio.file.Files.newByteChannel(java.nio.file.Path,java.nio.file.OpenOption...)", "java.nio.file.Files.newByteChannel(java.nio.file.Path,java.nio.file.OpenOption...)", "java.nio.file.Files.newByteChannel(java.nio.file.Path,java.nio.file.OpenOption...)", "java.nio.file.Files.newByteChannel(java.nio.file.Path,java.nio.file.OpenOption...)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if the path string cannot be converted to a Path. for java.nio.file.Path.resolve(java.lang.String) in the code snippet you provided, otherwise throw InvalidPathException.", "Please check if the set contains an invalid combination of options for java.nio.file.Files.newByteChannel(java.nio.file.Path,java.nio.file.OpenOption...) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an unsupported open option is specified for java.nio.file.Files.newByteChannel(java.nio.file.Path,java.nio.file.OpenOption...) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check If a file of that name already exists and the CREATE_NEW option is specified          and the file is being opened for writing (optional specific          exception) for java.nio.file.Files.newByteChannel(java.nio.file.Path,java.nio.file.OpenOption...) in the code snippet you provided, otherwise throw FileAlreadyExistsException.", "Please check In the case of the default provider, and a security manager is          installed, the checkRead          method is invoked to check read access to the path if the file is          opened for reading. The checkWrite method is invoked to check write access to the path          if the file is opened for writing. The checkDelete method is          invoked to check delete access if the file is opened with the          DELETE_ON_CLOSE option. for java.nio.file.Files.newByteChannel(java.nio.file.Path,java.nio.file.OpenOption...) in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 5}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
