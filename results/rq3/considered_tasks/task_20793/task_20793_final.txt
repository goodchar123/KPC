
Here's the updated code snippet that includes the requested error handling:

```java
import java.sql.*;

public class DatabaseHelper {
    private Connection connection;

    public DatabaseHelper(String url, String username, String password) throws SQLException {
        connection = DriverManager.getConnection(url, username, password);
    }

    public Statement createStatement() throws SQLException {
        if (connection == null || connection.isClosed()) {
            throw new SQLException("Connection is closed");
        }
        return connection.createStatement();
    }

    public void close() throws SQLException {
        if (connection != null) {
            connection.close();
        }
    }
}
```

This updated method checks for a closed connection before creating a new `Statement` object. If the connection is closed, it throws a `SQLException`. Otherwise, it returns a new `Statement` object.

Note that this method does not close the `Statement` object. The caller is responsible for closing the `Statement` object when it is no longer needed.
------------------------------------------------------
