
Sure, here's the updated code snippet that checks for null input and throws a `NullPointerException` if the input string is null:

```java
public static Number parseNumber(String text) throws NumberFormatException, NullPointerException {
    if (text == null) {
        throw new NullPointerException("Input string cannot be null");
    }
    Number number = null;
    try {
        number = Integer.parseInt(text);
    } catch (NumberFormatException e1) {
        try {
            number = Long.parseLong(text);
        } catch (NumberFormatException e2) {
            try {
                number = Double.parseDouble(text);
            } catch (NumberFormatException e3) {
                throw new NumberFormatException("Unable to parse number from text: " + text);
            }
        }
    }
    return number;
}
```

Now, if the input string is null, the method will throw a `NullPointerException` with a message indicating that the input string cannot be null.
------------------------------------------------------
