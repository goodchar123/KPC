Please write a java method that Replaces the text of the current node and all logically-adjacent text nodes with the specified text.
Here's a Java method that replaces the text of the current node and all logically-adjacent text nodes with the specified text:

```java
public void replaceText(Node node, String text) {
    if (node.getNodeType() == Node.TEXT_NODE) {
        node.setTextContent(text);
    } else {
        NodeList children = node.getChildNodes();
        for (int i = 0; i < children.getLength(); i++) {
            replaceText(children.item(i), text);
        }
    }
}
```

This method takes in a `Node` object and a `String` object as parameters. If the node is a text node, it sets the text content of the node to the specified text. Otherwise, it recursively calls itself on all child nodes of the current node. This ensures that all logically-adjacent text nodes are also replaced with the specified text.
------------------------------------------------------
Please check NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly. for org.w3c.dom.Node.setTextContent(java.lang.String) in the code snippet you provided, otherwise throw DOMException.
Sure, here's an updated version of the Java method that checks for the `NO_MODIFICATION_ALLOWED_ERR` exception and throws a `DOMException` if necessary:

```java
public void replaceText(Node node, String text) throws DOMException {
    if (node.getNodeType() == Node.TEXT_NODE) {
        try {
            node.setTextContent(text);
        } catch (DOMException e) {
            if (e.code == DOMException.NO_MODIFICATION_ALLOWED_ERR) {
                throw e;
            }
        }
    } else {
        NodeList children = node.getChildNodes();
        for (int i = 0; i < children.getLength(); i++) {
            replaceText(children.item(i), text);
        }
    }
}
```

This updated method now throws a `DOMException` with the `NO_MODIFICATION_ALLOWED_ERR` code if the node is read-only and cannot be modified.
------------------------------------------------------
