
Sure, here's the updated Java method that checks for the conditions you mentioned:

```java
import javax.crypto.KeyGenerator;
import java.security.NoSuchAlgorithmException;
import java.util.Objects;

public class KeyGeneratorHelper {
    public static KeyGenerator getKeyGenerator(String algorithm) throws NoSuchAlgorithmException {
        Objects.requireNonNull(algorithm, "Algorithm cannot be null");
        KeyGenerator keyGenerator = null;
        try {
            keyGenerator = KeyGenerator.getInstance(algorithm);
        } catch (NoSuchAlgorithmException e) {
            throw new NoSuchAlgorithmException("No Provider supports a KeyGeneratorSpi implementation for the specified algorithm: " + algorithm);
        }
        return keyGenerator;
    }
}
```

This updated method first checks if the `algorithm` parameter is null using the `Objects.requireNonNull` method. If it is null, a `NullPointerException` is thrown with a message indicating that the algorithm cannot be null.

Next, the method attempts to create a new instance of the KeyGenerator object for the specified algorithm using the `getInstance` method. If no Provider supports a KeyGeneratorSpi implementation for the specified algorithm, a `NoSuchAlgorithmException` is thrown with a message indicating the algorithm that was specified.

If the KeyGenerator object is successfully created, it is returned by the method.
------------------------------------------------------
