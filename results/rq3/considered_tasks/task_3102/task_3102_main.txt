Please write a java method that Tests whether one type is assignable to another.
Here's a Java method that tests whether one type is assignable to another:

```java
public static boolean isAssignable(Class<?> type1, Class<?> type2) {
    return type2.isAssignableFrom(type1);
}
```

This method takes two `Class` objects as parameters and returns a boolean value indicating whether the first type is assignable to the second type. It uses the `isAssignableFrom` method of the second type to check if the first type can be assigned to it. If it can, the method returns `true`; otherwise, it returns `false`.
------------------------------------------------------
Please check if the specified Class parameter is            null. for java.lang.Class.isAssignableFrom(java.lang.Class) in the code snippet you provided, otherwise throw NullPointerException.
Sure, here's the updated Java method that checks if the specified `Class` parameter is null before calling `isAssignableFrom` method and throws a `NullPointerException` if it is null:

```java
public static boolean isAssignable(Class<?> type1, Class<?> type2) {
    Objects.requireNonNull(type2, "type2 must not be null");
    return type2.isAssignableFrom(type1);
}
```

This method uses the `Objects.requireNonNull` method to check if the `type2` parameter is null. If it is null, it throws a `NullPointerException` with the specified error message. If `type2` is not null, it calls the `isAssignableFrom` method of `type2` to check if `type1` can be assigned to it. If it can, the method returns `true`; otherwise, it returns `false`.
------------------------------------------------------
