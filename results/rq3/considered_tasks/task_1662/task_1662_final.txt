
Here is the updated code snippet that includes the requested checks:

```
public class MyNotificationEmitter implements NotificationEmitter {

    private NotificationBroadcasterSupport broadcaster = new NotificationBroadcasterSupport();

    @Override
    public void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback) throws IllegalArgumentException {
        if (listener == null) {
            throw new IllegalArgumentException("Listener cannot be null");
        }
        broadcaster.addNotificationListener(listener, filter, handback);
    }

    @Override
    public void removeNotificationListener(NotificationListener listener) throws ListenerNotFoundException {
        if (!broadcaster.getNotificationListeners().contains(listener)) {
            throw new ListenerNotFoundException("Listener is not registered with the MBean");
        }
        broadcaster.removeNotificationListener(listener);
    }

    @Override
    public void removeNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback) throws ListenerNotFoundException {
        if (!broadcaster.getNotificationListeners(filter, handback).contains(listener)) {
            throw new ListenerNotFoundException("Listener is not registered with the MBean, or it is not registered with the given filter and handback");
        }
        broadcaster.removeNotificationListener(listener, filter, handback);
    }

    @Override
    public MBeanNotificationInfo[] getNotificationInfo() {
        return broadcaster.getNotificationInfo();
    }

    public void sendNotification(Notification notification) {
        broadcaster.sendNotification(notification);
    }
}
```

Now, when adding a notification listener, the method checks if the listener is null and throws an IllegalArgumentException if it is. When removing a notification listener, the method checks if the listener is registered with the MBean and throws a ListenerNotFoundException if it is not. Similarly, when removing a notification listener with a filter and handback, the method checks if the listener is registered with the MBean and with the given filter and handback, and throws a ListenerNotFoundException if it is not.
------------------------------------------------------
