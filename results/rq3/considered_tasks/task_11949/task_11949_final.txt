
Sure, here's an updated version of the method that checks for I/O errors and throws an `IOException` if one occurs:

```java
public void closeStreams(ZipOutputStream zipOutputStream, FilterOutputStream filterOutputStream) throws IOException {
    try {
        if (filterOutputStream != null) {
            filterOutputStream.close();
        }
        if (zipOutputStream != null) {
            zipOutputStream.close();
            if (zipOutputStream.getFinish() && zipOutputStream.getDef().finished()) {
                throw new ZipException("ZIP file error occurred");
            }
        }
    } catch (IOException e) {
        throw e;
    }
}
```

This updated method checks if an I/O error occurred during the closing of the streams. If an `IOException` occurs, it is re-thrown. If the ZIP output stream has finished writing and the underlying `Deflater` has finished compressing, it throws a `ZipException` with the message "ZIP file error occurred".
------------------------------------------------------
