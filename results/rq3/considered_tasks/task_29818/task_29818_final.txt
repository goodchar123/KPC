
Sure, here's the updated Java method that checks if the index argument is negative or not less than the length of the string before calling the `charAt` method. If the index is out of bounds, it throws an `IndexOutOfBoundsException`:

```java
public static int getStartOfPrevWord(String text, int location) {
    if (location < 0 || location >= text.length()) {
        throw new IndexOutOfBoundsException();
    }
    int start = location - 1;
    while (start >= 0 && !Character.isWhitespace(text.charAt(start))) {
        start--;
    }
    while (start >= 0 && Character.isWhitespace(text.charAt(start))) {
        start--;
    }
    return start + 1;
}
```

This method first checks if the `location` argument is negative or greater than or equal to the length of the `text` string. If it is, it throws an `IndexOutOfBoundsException`.

If the `location` argument is valid, the method proceeds to find the start of the previous word as before.
------------------------------------------------------
