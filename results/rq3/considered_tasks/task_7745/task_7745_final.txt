
You're right, it's important to add null and index bounds checks to the code. Here's the updated Java method that includes these checks:

```java
public static int countCodePoints(CharSequence seq, int start, int end) {
    if (seq == null) {
        throw new NullPointerException("CharSequence cannot be null");
    }
    if (start < 0 || end > seq.length() || start > end) {
        throw new IndexOutOfBoundsException("Invalid text range");
    }
    int count = 0;
    for (int i = start; i < end; ) {
        int codePoint = Character.codePointAt(seq, i);
        count++;
        i += Character.charCount(codePoint);
    }
    return count;
}
```

This updated method first checks if the `CharSequence` is null, and throws a `NullPointerException` if it is. It also checks if the start and end indices are within the bounds of the `CharSequence`, and throws an `IndexOutOfBoundsException` if they are not. 

If the checks pass, the method proceeds to count the number of Unicode code points in the specified text range using the same logic as before.
------------------------------------------------------
