
You're right, it's important to check for these conditions to avoid throwing `IndexOutOfBoundsException`. Here's the updated code snippet with the necessary checks:

```
public static void parseAuthority(URI uri) {
    String authority = uri.getAuthority();
    if (authority != null) {
        int userInfoEndIndex = authority.indexOf('@');
        if (userInfoEndIndex != -1) {
            String userInfo = authority.substring(0, userInfoEndIndex);
            System.out.println("User Information: " + userInfo);
        }
        String host = authority.substring(userInfoEndIndex != -1 ? userInfoEndIndex + 1 : 0);
        int portIndex = host.indexOf(':');
        if (portIndex != -1) {
            String port = host.substring(portIndex + 1);
            host = host.substring(0, portIndex);
            System.out.println("Port: " + port);
        }
        System.out.println("Host: " + host);
    }
}

// Updated method with checks for IndexOutOfBoundsException
public static void parseAuthority(URI uri) {
    String authority = uri.getAuthority();
    if (authority != null) {
        int userInfoEndIndex = authority.indexOf('@');
        if (userInfoEndIndex != -1) {
            String userInfo = authority.substring(0, Math.min(userInfoEndIndex, authority.length()));
            System.out.println("User Information: " + userInfo);
        }
        String host = authority.substring(userInfoEndIndex != -1 ? userInfoEndIndex + 1 : 0);
        int portIndex = host.indexOf(':');
        if (portIndex != -1) {
            String port = host.substring(Math.min(portIndex + 1, host.length()));
            host = host.substring(0, Math.min(portIndex, host.length()));
            System.out.println("Port: " + port);
        }
        System.out.println("Host:
------------------------------------------------------
