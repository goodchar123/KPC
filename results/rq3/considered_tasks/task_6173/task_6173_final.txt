
Sure, here's the updated code snippet that checks for both the `UnknownHostException` and `SecurityException`:

```java
import java.net.*;

public class MulticastJoiner {
    public static void joinMulticastGroup(String groupAddress, int port) throws UnknownHostException, SecurityException {
        SecurityManager security = System.getSecurityManager();
        if (security != null) {
            try {
                InetAddress group = InetAddress.getByName(groupAddress);
                security.checkConnect(group.getHostAddress(), port);
            } catch (SecurityException se) {
                throw new SecurityException("Permission denied for multicast group join", se);
            } catch (UnknownHostException uhe) {
                throw new UnknownHostException("Could not find IP address for host: " + groupAddress);
            } catch (Exception e) {
                System.err.println("Error joining multicast group: " + e.getMessage());
                return;
            }
        }
        
        try {
            InetAddress group = InetAddress.getByName(groupAddress);
            MulticastSocket socket = new MulticastSocket(port);
            socket.joinGroup(group);
            System.out.println("Joined multicast group " + groupAddress + ":" + port);
        } catch (UnknownHostException uhe) {
            throw new UnknownHostException("Could not find IP address for host: " + groupAddress);
        } catch (Exception e) {
            System.err.println("Error joining multicast group: " + e.getMessage());
        }
    }
}
```

This code first checks if a security manager is present using `System.getSecurityManager()`. If one is present, it calls `InetAddress.getByName()` and then `security.checkConnect()` with the host address and port number as arguments. If the security manager denies permission, a `SecurityException` is thrown with the original exception as the cause. If there is no security manager, the code proceeds as before.

If `InetAddress.getByName()` throws an `UnknownHostException`, a new `UnknownHostException` is thrown with a custom message. If there are any other exceptions, they are caught and printed to the console. If there are no exceptions, the code proceeds to join the multicast group as before.
------------------------------------------------------
