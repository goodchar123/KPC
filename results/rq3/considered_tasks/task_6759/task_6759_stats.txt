{"loop_id": 0, "unhandled_api_list": ["java.time.Instant.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)", "java.time.Instant.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)", "java.time.Instant.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if the amount cannot be calculated, or the end  temporal cannot be converted to an Instant for java.time.Instant.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the unit is not supported for java.time.Instant.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit) in the code snippet you provided, otherwise throw UnsupportedTemporalTypeException.", "Please check if numeric overflow occurs for java.time.Instant.until(java.time.temporal.Temporal,java.time.temporal.TemporalUnit) in the code snippet you provided, otherwise throw ArithmeticException."], "num_of_unhandled_exception": 3}
{"loop_id": 1, "unhandled_api_list": ["java.time.Instant.plusSeconds(long)", "java.time.Instant.plusSeconds(long)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if the result exceeds the maximum or minimum instant for java.time.Instant.plusSeconds(long) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.Instant.plusSeconds(long) in the code snippet you provided, otherwise throw ArithmeticException."], "num_of_unhandled_exception": 2}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
