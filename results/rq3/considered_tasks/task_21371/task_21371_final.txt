
Sure, here's the updated code snippet that checks for database access errors and closed result sets:

```java
public static boolean isColumnSignedNumbers(ResultSet rs, String columnName) throws SQLException {
    if (rs.isClosed()) {
        throw new SQLException("Result set is closed");
    }
    try {
        ResultSetMetaData metaData = rs.getMetaData();
        int columnType = metaData.getColumnType(rs.findColumn(columnName));
        return columnType == Types.INTEGER || columnType == Types.BIGINT || columnType == Types.FLOAT || columnType == Types.DOUBLE || columnType == Types.DECIMAL;
    } catch (SQLException e) {
        throw new SQLException("Database access error", e);
    }
}
```

In this updated version, we first check if the result set is closed using the `isClosed()` method. If it is closed, we throw a `SQLException` with an appropriate message.

Next, we wrap the `getMetaData()` and `findColumn()` calls in a try-catch block to catch any `SQLException` that might occur due to a database access error. If such an error occurs, we throw a new `SQLException` with the original exception as the cause.

By doing these checks, we ensure that the method behaves correctly and throws meaningful exceptions in case of errors.
------------------------------------------------------
