{"loop_id": 0, "unhandled_api_list": ["java.io.File.toPath()", "java.nio.file.Files.getFileStore(java.nio.file.Path)", "java.nio.file.Files.getFileStore(java.nio.file.Path)", "java.nio.file.FileStore.getUnallocatedSpace()"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if a Path object cannot be constructed from the abstract          path (see FileSystem.getPath) for java.io.File.toPath() in the code snippet you provided, otherwise throw InvalidPathException.", "Please check if an I/O error occurs for java.nio.file.Files.getFileStore(java.nio.file.Path) in the code snippet you provided, otherwise throw IOException.", "Please check In the case of the default provider, and a security manager is          installed, the checkRead          method is invoked to check read access to the file, and in          addition it checks          RuntimePermission(\"getFileStoreAttributes\") for java.nio.file.Files.getFileStore(java.nio.file.Path) in the code snippet you provided, otherwise throw SecurityException.", "Please check if an I/O error occurs for java.nio.file.FileStore.getUnallocatedSpace() in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 4}
{"loop_id": 1, "unhandled_api_list": ["java.io.File.toPath()", "java.nio.file.Files.getFileStore(java.nio.file.Path)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a Path object cannot be constructed from the abstract          path (see FileSystem.getPath) for java.io.File.toPath() in the code snippet you provided, otherwise throw InvalidPathException.", "Please check In the case of the default provider, and a security manager is          installed, the checkRead          method is invoked to check read access to the file, and in          addition it checks          RuntimePermission(\"getFileStoreAttributes\") for java.nio.file.Files.getFileStore(java.nio.file.Path) in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 2}
{"loop_id": 2, "unhandled_api_list": ["java.io.File.toPath()", "java.nio.file.Files.getFileStore(java.nio.file.Path)", "java.nio.file.Files.getFileStore(java.nio.file.Path)", "java.nio.file.FileStore.getUnallocatedSpace()"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if a Path object cannot be constructed from the abstract          path (see FileSystem.getPath) for java.io.File.toPath() in the code snippet you provided, otherwise throw InvalidPathException.", "Please check if an I/O error occurs for java.nio.file.Files.getFileStore(java.nio.file.Path) in the code snippet you provided, otherwise throw IOException.", "Please check In the case of the default provider, and a security manager is          installed, the checkRead          method is invoked to check read access to the file, and in          addition it checks          RuntimePermission(\"getFileStoreAttributes\") for java.nio.file.Files.getFileStore(java.nio.file.Path) in the code snippet you provided, otherwise throw SecurityException.", "Please check if an I/O error occurs for java.nio.file.FileStore.getUnallocatedSpace() in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 4}
{"loop_id": 3, "unhandled_api_list": ["java.nio.file.Files.getFileStore(java.nio.file.Path)", "java.nio.file.FileSystem.getUserPrincipalLookupService()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check In the case of the default provider, and a security manager is          installed, the checkRead          method is invoked to check read access to the file, and in          addition it checks          RuntimePermission(\"getFileStoreAttributes\") for java.nio.file.Files.getFileStore(java.nio.file.Path) in the code snippet you provided, otherwise throw SecurityException.", "Please check If this FileSystem does not does have a lookup service for java.nio.file.FileSystem.getUserPrincipalLookupService() in the code snippet you provided, otherwise throw UnsupportedOperationException."], "num_of_unhandled_exception": 2}
{"loop_id": 4, "unhandled_api_list": ["java.nio.file.Files.getFileStore(java.nio.file.Path)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check In the case of the default provider, and a security manager is          installed, the checkRead          method is invoked to check read access to the file, and in          addition it checks          RuntimePermission(\"getFileStoreAttributes\") for java.nio.file.Files.getFileStore(java.nio.file.Path) in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 1}
{"loop_id": 5, "unhandled_api_list": ["java.nio.file.Files.getFileStore(java.nio.file.Path)", "java.nio.file.FileSystem.getUserPrincipalLookupService()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check In the case of the default provider, and a security manager is          installed, the checkRead          method is invoked to check read access to the file, and in          addition it checks          RuntimePermission(\"getFileStoreAttributes\") for java.nio.file.Files.getFileStore(java.nio.file.Path) in the code snippet you provided, otherwise throw SecurityException.", "Please check If this FileSystem does not does have a lookup service for java.nio.file.FileSystem.getUserPrincipalLookupService() in the code snippet you provided, otherwise throw UnsupportedOperationException."], "num_of_unhandled_exception": 2}
{"loop_id": 6, "unhandled_api_list": ["java.nio.file.Files.getFileStore(java.nio.file.Path)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check In the case of the default provider, and a security manager is          installed, the checkRead          method is invoked to check read access to the file, and in          addition it checks          RuntimePermission(\"getFileStoreAttributes\") for java.nio.file.Files.getFileStore(java.nio.file.Path) in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 1}
{"loop_id": 7, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
