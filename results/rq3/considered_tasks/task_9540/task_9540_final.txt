
Sure, here's the updated Java method that checks for errors during printing and throws a `DateTimeException` if an error occurs:

```java
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

public class DateTimeConverter {
    public static String getIsoLocalDateTime(LocalDateTime dateTime) {
        DateTimeFormatter formatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME;
        try {
            return formatter.format(dateTime);
        } catch (DateTimeParseException e) {
            throw new DateTimeException("Error printing date-time: " + e.getMessage(), e);
        }
    }
}
```

This updated method uses a try-catch block to catch any `DateTimeParseException` that may occur during printing. If an exception is caught, a new `DateTimeException` is thrown with a message that includes the original exception's message and the original exception as the cause. This ensures that the caller of the method is aware of the error that occurred during printing.
------------------------------------------------------
