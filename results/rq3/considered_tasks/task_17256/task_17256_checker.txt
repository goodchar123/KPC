List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.sql.Connection`
2. `java.sql.DatabaseMetaData`
3. `java.sql.ResultSet`
4. `java.sql.SQLException`
5. `java.sql.DatabaseMetaData.getColumns(java.lang.String, java.lang.String, java.lang.String, java.lang.String)`
6. `java.sql.ResultSet.getInt(java.lang.String)`
7. `java.sql.DatabaseMetaData.modifyColumn(java.lang.String, java.lang.String, int, java.lang.String)`

 + From response, we get: ['java.sql.Connection', 'java.sql.DatabaseMetaData', 'java.sql.ResultSet', 'java.sql.SQLException', 'java.sql.DatabaseMetaData.getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String)', 'java.sql.ResultSet.getInt(java.lang.String)', 'java.sql.DatabaseMetaData.modifyColumn(java.lang.String,java.lang.String,int,java.lang.String)']
------------------------------------------------------
Is the SQLException handled or caught for java.sql.DatabaseMetaData.getColumns(java.lang.String,java.lang.String,java.lang.String,java.lang.String) in the code snippet? Answer in Yes or No only.
No. The `SQLException` is not handled or caught in the code snippet. It is declared to be thrown in the method signature.
------------------------------------------------------
Is the SQLException handled or caught for java.sql.ResultSet.getInt(java.lang.String) in the code snippet? Answer in Yes or No only.
No. The `SQLException` is not handled or caught in the code snippet. It is declared to be thrown in the method signature.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. java.sql.Connection.getMetaData()
2. java.sql.DatabaseMetaData.getColumns(java.lang.String catalog, java.lang.String schemaPattern, java.lang.String tableName, java.lang.String columnNamePattern)
3. java.sql.ResultSet.next()
4. java.sql.ResultSet.getInt(java.lang.String columnLabel)
5. java.sql.DatabaseMetaData.modifyColumn(java.lang.String tableName, java.lang.String columnName, int columnType, java.lang.String columnTypeName)
6. java.sql.SQLException(java.lang.String message)

 + From response, we get: []
------------------------------------------------------
