
Sure, here's an updated version of the `parseTime` method that checks for parsing and formatting errors and throws the appropriate exceptions:

```java
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

public class TimeFormatter {
    public static LocalTime parseTime(String timeString, String formatString) {
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(formatString);
            return LocalTime.parse(timeString, formatter);
        } catch (DateTimeParseException e) {
            throw new IllegalArgumentException("Invalid time string: " + timeString, e);
        } catch (IllegalArgumentException e) {
            throw new IllegalArgumentException("Invalid format string: " + formatString, e);
        }
    }
}
```

In this updated version, the `parseTime` method uses a try-catch block to catch any `DateTimeParseException` or `IllegalArgumentException` that might be thrown by the `ofPattern` or `parse` methods, respectively. If a `DateTimeParseException` is caught, the method throws a new `IllegalArgumentException` with a message indicating that the time string is invalid. If an `IllegalArgumentException` is caught, the method throws a new `IllegalArgumentException` with a message indicating that the format string is invalid.

Here's an example of how you could use this updated method:

```java
try {
    LocalTime time = TimeFormatter.parseTime("10:30:00", "HH:mm:ss");
    System.out.println(time); // prints "10:30"
} catch (IllegalArgumentException e) {
    System.out.println(e.getMessage()); // prints nothing, since the time and format strings are valid
}
```

In this example, the `parseTime` method is called with the time string "10:30:00" and the format string "HH:mm:ss". Since both strings are valid, the method returns a `LocalTime` instance representing 10:30 AM, which is then printed to the console. If either the time or format string were invalid, the method would throw an exception with an appropriate error message.
------------------------------------------------------
