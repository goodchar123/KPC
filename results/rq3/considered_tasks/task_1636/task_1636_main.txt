Please write a java method that Sets associated Descriptor (full replace) for the ModelMBeanNotificationInfo If the new Descriptor is null, then the associated Descriptor reverts to a default descriptor.
Here's a possible implementation of the method:

```java
public void setNotificationInfoDescriptor(ModelMBeanNotificationInfo notificationInfo, Descriptor newDescriptor) {
    if (newDescriptor == null) {
        // Revert to default descriptor
        newDescriptor = new DescriptorSupport();
    }
    notificationInfo.setDescriptor(newDescriptor);
}
```

This method takes a `ModelMBeanNotificationInfo` object and a `Descriptor` object as parameters. If the `newDescriptor` parameter is null, it creates a default descriptor using the `DescriptorSupport` class. Then, it sets the `newDescriptor` as the associated descriptor for the `notificationInfo` object using the `setDescriptor` method.
------------------------------------------------------
Please check Wraps an IllegalArgumentException for invalid Descriptor. for javax.management.modelmbean.ModelMBeanNotificationInfo.setDescriptor(javax.management.Descriptor) in the code snippet you provided, otherwise throw RuntimeOperationsException.
Sure, here's an updated implementation that checks for an `IllegalArgumentException` and wraps it in a `RuntimeOperationsException` if it occurs:

```java
public void setNotificationInfoDescriptor(ModelMBeanNotificationInfo notificationInfo, Descriptor newDescriptor) {
    if (newDescriptor == null) {
        // Revert to default descriptor
        newDescriptor = new DescriptorSupport();
    }
    try {
        notificationInfo.setDescriptor(newDescriptor);
    } catch (IllegalArgumentException e) {
        // Wrap the exception in a RuntimeOperationsException
        throw new RuntimeOperationsException(e, "Failed to set descriptor for notification info");
    }
}
```

This implementation is similar to the previous one, but it now includes a try-catch block around the `setDescriptor` method call. If an `IllegalArgumentException` is thrown, it catches it and wraps it in a `RuntimeOperationsException` with a custom error message. This ensures that any errors related to setting the descriptor are properly handled and reported.
------------------------------------------------------
