{"loop_id": 0, "unhandled_api_list": ["java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object)", "java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object)", "java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object)", "java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)", "java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if the type argument is null for java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the value cannot be converted to the required return type for java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the given type is void.class for java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if any argument is null for java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if test does not return boolean,          or if all three method types do not match (with the return          type of test changed to match that of the target). for java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 5}
{"loop_id": 1, "unhandled_api_list": ["java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[])", "java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[])", "java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object)", "java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object)", "java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object)", "java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)", "java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)"], "num_of_unhandled_api": 7, "unhandled_exception_list": ["Please check if rtype or ptypes or any element of ptypes is null for java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[]) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if any element of ptypes is void.class for java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[]) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the type argument is null for java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the value cannot be converted to the required return type for java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the given type is void.class for java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if any argument is null for java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if test does not return boolean,          or if all three method types do not match (with the return          type of test changed to match that of the target). for java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 7}
{"loop_id": 2, "unhandled_api_list": ["java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object)", "java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object)", "java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object)", "java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)", "java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if the type argument is null for java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the value cannot be converted to the required return type for java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the given type is void.class for java.lang.invoke.MethodHandles.constant(java.lang.Class,java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if any argument is null for java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if test does not return boolean,          or if all three method types do not match (with the return          type of test changed to match that of the target). for java.lang.invoke.MethodHandles.guardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 5}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
