{"loop_id": 0, "unhandled_api_list": ["java.sql.ResultSet.getStatement()", "java.sql.Statement.getConnection()", "java.sql.Connection.getMetaData()", "javax.sql.rowset.RowSetProvider.newFactory()", "javax.sql.rowset.CachedRowSet.populate(java.sql.ResultSet)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed result set for java.sql.ResultSet.getStatement() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed connection for java.sql.Connection.getMetaData() in the code snippet you provided, otherwise throw SQLException.", "Please check if the default factory class cannot be loaded, instantiated. The cause will be set to actual Exception for javax.sql.rowset.RowSetProvider.newFactory() in the code snippet you provided, otherwise throw SQLException.", "Please check if a null ResultSet object is supplied or this CachedRowSet object cannot retrieve the associated ResultSetMetaData object for javax.sql.rowset.CachedRowSet.populate(java.sql.ResultSet) in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 5}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
