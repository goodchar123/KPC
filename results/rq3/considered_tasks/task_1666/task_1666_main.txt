Please write a java method that Description copied from interface:Â ModelMBeanNotificationBroadcaster
Here is an example Java method that implements the ModelMBeanNotificationBroadcaster interface:

```
import javax.management.Notification;
import javax.management.NotificationBroadcasterSupport;
import javax.management.NotificationFilter;
import javax.management.NotificationListener;
import javax.management.modelmbean.ModelMBeanNotificationBroadcaster;

public class MyModelMBeanNotificationBroadcaster extends NotificationBroadcasterSupport implements ModelMBeanNotificationBroadcaster {

    @Override
    public void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback) {
        super.addNotificationListener(listener, filter, handback);
    }

    @Override
    public void removeNotificationListener(NotificationListener listener) {
        super.removeNotificationListener(listener);
    }

    @Override
    public void removeNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback) {
        super.removeNotificationListener(listener, filter, handback);
    }

    @Override
    public void sendNotification(Notification notification) {
        super.sendNotification(notification);
    }
}
```

This class extends the `NotificationBroadcasterSupport` class and implements the `ModelMBeanNotificationBroadcaster` interface. It provides implementations for the four methods defined in the interface: `addNotificationListener`, `removeNotificationListener`, `removeNotificationListener`, and `sendNotification`. These methods allow listeners to be added and removed, and notifications to be sent to those listeners.
------------------------------------------------------
Please check thrown if the listener is null. for javax.management.NotificationBroadcasterSupport.addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.
Please check The listener is not registered with the MBean. for javax.management.NotificationBroadcasterSupport.removeNotificationListener(javax.management.NotificationListener) in the code snippet you provided, otherwise throw ListenerNotFoundException.
Please check The listener is not registered with the MBean, or it is not registered with the given filter and handback. for javax.management.NotificationBroadcasterSupport.removeNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object) in the code snippet you provided, otherwise throw ListenerNotFoundException.
Here is the updated code snippet that includes the requested exception handling:

```
import javax.management.ListenerNotFoundException;
import javax.management.Notification;
import javax.management.NotificationBroadcasterSupport;
import javax.management.NotificationFilter;
import javax.management.NotificationListener;
import javax.management.modelmbean.ModelMBeanNotificationBroadcaster;

public class MyModelMBeanNotificationBroadcaster extends NotificationBroadcasterSupport implements ModelMBeanNotificationBroadcaster {

    @Override
    public void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback) {
        if (listener == null) {
            throw new IllegalArgumentException("Listener cannot be null");
        }
        super.addNotificationListener(listener, filter, handback);
    }

    @Override
    public void removeNotificationListener(NotificationListener listener) throws ListenerNotFoundException {
        if (!super.getNotificationListeners().contains(listener)) {
            throw new ListenerNotFoundException("Listener is not registered with the MBean");
        }
        super.removeNotificationListener(listener);
    }

    @Override
    public void removeNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback) throws ListenerNotFoundException {
        if (!super.getNotificationListeners(filter, handback).contains(listener)) {
            throw new ListenerNotFoundException("Listener is not registered with the MBean, or it is not registered with the given filter and handback");
        }
        super.removeNotificationListener(listener, filter, handback);
    }

    @Override
    public void sendNotification(Notification notification) {
        super.sendNotification(notification);
    }
}
```

In the `addNotificationListener` method, an `IllegalArgumentException` is thrown if the listener is null.

In the `removeNotificationListener` method, a `ListenerNotFoundException` is thrown if the listener is not registered with the MBean.

In the `removeNotificationListener` method with filter and handback parameters, a `ListenerNotFoundException` is thrown if the listener is not registered with the MBean, or if it is not registered with the given filter and handback.
------------------------------------------------------
