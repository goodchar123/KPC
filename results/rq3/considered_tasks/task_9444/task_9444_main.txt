Please write a java method that Obtains a local date in Thai Buddhist calendar system from the proleptic-year, month-of-year and day-of-month fields.
Here's a Java method that obtains a local date in Thai Buddhist calendar system from the proleptic-year, month-of-year and day-of-month fields:

```java
import java.time.LocalDate;
import java.time.chrono.ThaiBuddhistChronology;
import java.time.chrono.ThaiBuddhistDate;

public class ThaiBuddhistDateConverter {
    public static ThaiBuddhistDate getThaiBuddhistDate(int year, int month, int day) {
        LocalDate localDate = LocalDate.of(year, month, day);
        ThaiBuddhistDate thaiBuddhistDate = ThaiBuddhistChronology.INSTANCE.date(localDate);
        return thaiBuddhistDate;
    }
}
```

You can call this method by passing the proleptic-year, month-of-year and day-of-month fields as arguments:

```java
ThaiBuddhistDate thaiBuddhistDate = ThaiBuddhistDateConverter.getThaiBuddhistDate(2021, 10, 13);
System.out.println(thaiBuddhistDate);
```

This will output:

```
Buddhist Thai BE 2564-10-13
```
------------------------------------------------------
Please check if the value of any field is out of range,  or if the day of month is invalid for the month year for java.time.LocalDate.of(int,int,int) in the code snippet you provided, otherwise throw DateTimeException.
You are correct. It is important to validate the input values to ensure that they are within the valid range for the `LocalDate` class. Here's an updated version of the `getThaiBuddhistDate` method that includes input validation and throws a `DateTimeException` if any of the input values are out of range:

```java
import java.time.DateTimeException;
import java.time.LocalDate;
import java.time.chrono.ThaiBuddhistChronology;
import java.time.chrono.ThaiBuddhistDate;

public class ThaiBuddhistDateConverter {
    public static ThaiBuddhistDate getThaiBuddhistDate(int year, int month, int day) {
        try {
            LocalDate localDate = LocalDate.of(year, month, day);
            ThaiBuddhistDate thaiBuddhistDate = ThaiBuddhistChronology.INSTANCE.date(localDate);
            return thaiBuddhistDate;
        } catch (DateTimeException e) {
            throw new DateTimeException("Invalid input values: " + e.getMessage());
        }
    }
}
```

Now, if any of the input values are out of range or if the day of month is invalid for the month year, a `DateTimeException` will be thrown with a descriptive error message.
------------------------------------------------------
