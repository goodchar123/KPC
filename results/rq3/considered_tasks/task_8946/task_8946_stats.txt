{"loop_id": 0, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)", "java.util.concurrent.ExecutorService.shutdown()", "java.util.concurrent.ExecutorService.shutdownNow()", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.get()"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdown() in the code snippet you provided, otherwise throw SecurityException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdownNow() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the computation was cancelled for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw CancellationException.", "Please check if the computation threw an exception for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw ExecutionException."], "num_of_unhandled_exception": 5}
{"loop_id": 1, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 1}
{"loop_id": 2, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)", "java.util.concurrent.ExecutorService.shutdown()", "java.util.concurrent.ExecutorService.shutdownNow()", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.get()"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdown() in the code snippet you provided, otherwise throw SecurityException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdownNow() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the computation was cancelled for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw CancellationException.", "Please check if the computation threw an exception for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw ExecutionException."], "num_of_unhandled_exception": 5}
{"loop_id": 3, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 1}
{"loop_id": 4, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)", "java.util.concurrent.ExecutorService.shutdown()", "java.util.concurrent.ExecutorService.shutdownNow()", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.get()"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdown() in the code snippet you provided, otherwise throw SecurityException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdownNow() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the computation was cancelled for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw CancellationException.", "Please check if the computation threw an exception for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw ExecutionException."], "num_of_unhandled_exception": 5}
{"loop_id": 5, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 1}
{"loop_id": 6, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)", "java.util.concurrent.ExecutorService.shutdown()", "java.util.concurrent.ExecutorService.shutdownNow()", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.get()"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdown() in the code snippet you provided, otherwise throw SecurityException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdownNow() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the computation was cancelled for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw CancellationException.", "Please check if the computation threw an exception for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw ExecutionException."], "num_of_unhandled_exception": 5}
{"loop_id": 7, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
