
Sure, here's the updated Java method that checks if the epoch day count exceeds the supported date range for `java.time.LocalDate.ofEpochDay(long)` and throws a `DateTimeException` if it does:

```java
import java.time.DateTimeException;
import java.time.LocalDate;

public class EpochDayToDate {
    public static LocalDate epochDayToDate(long epochDay) {
        try {
            return LocalDate.ofEpochDay(epochDay);
        } catch (DateTimeException e) {
            throw new DateTimeException("Epoch day count " + epochDay + " exceeds supported date range for LocalDate", e);
        }
    }
}
```

Now, if you call this method with an epoch day count that exceeds the supported date range for `LocalDate`, it will throw a `DateTimeException` with a helpful error message. For example:

```java
long epochDay = -50000;
LocalDate date = EpochDayToDate.epochDayToDate(epochDay);
```

This will throw a `DateTimeException` with the message "Epoch day count -50000 exceeds supported date range for LocalDate".
------------------------------------------------------
