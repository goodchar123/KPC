
Here is the updated code snippet that includes the requested security and input validations:

```java
import java.net.ProxySelector;
import java.net.URI;
import java.security.AccessController;
import java.security.PrivilegedAction;

public static void setSystemProxySelector(ProxySelector selector) {
    SecurityManager sm = System.getSecurityManager();
    if (sm != null) {
        sm.checkPermission(new java.net.NetPermission("setProxySelector"));
    }
    AccessController.doPrivileged(new PrivilegedAction<Void>() {
        public Void run() {
            ProxySelector.setDefault(selector);
            System.setProperty("java.net.useSystemProxies", "true");
            return null;
        }
    });
    // Test the proxy selector by making a sample request
    try {
        URI uri = new URI("http://www.example.com");
        selector.select(uri);
    } catch (Exception e) {
        e.printStackTrace();
    }
}

public static void unsetSystemProxySelector() {
    ProxySelector.setDefault(ProxySelector.getDefault());
    System.setProperty("java.net.useSystemProxies", "false");
}

public static void setSystemProperty(String key, String value) {
    if (key == null || value == null) {
        throw new NullPointerException("Key or value cannot be null");
    }
    SecurityManager sm = System.getSecurityManager();
    if (sm != null) {
        sm.checkPermission(new java.util.PropertyPermission(key, "write"));
    }
    System.setProperty(key, value);
}

public static void selectProxy(ProxySelector selector, URI uri) {
    if (uri == null || uri.getHost() == null) {
        throw new IllegalArgumentException("URI is null or host cannot be determined");
    }
    selector.select(uri);
}
```

Note that the `setSystemProperty` method now includes security validation for setting system properties, and
------------------------------------------------------
