{"loop_id": 0, "unhandled_api_list": ["java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check If this channel is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If the selector is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedSelectorException.", "Please check If this channel is in blocking mode for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalBlockingModeException.", "Please check If this channel was not created by the same provider          as the given selector for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalSelectorException.", "Please check If this channel is currently registered with the given selector          but the corresponding key has already been cancelled for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If a bit in ops does not correspond to an operation          that is supported by this channel, that is, if set &          ~validOps() != 0 for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 6}
{"loop_id": 1, "unhandled_api_list": ["java.nio.channels.SelectionKey.interestOps()", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)"], "num_of_unhandled_api": 7, "unhandled_exception_list": ["Please check If this key has been cancelled for java.nio.channels.SelectionKey.interestOps() in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If this channel is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If the selector is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedSelectorException.", "Please check If this channel is in blocking mode for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalBlockingModeException.", "Please check If this channel was not created by the same provider          as the given selector for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalSelectorException.", "Please check If this channel is currently registered with the given selector          but the corresponding key has already been cancelled for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If a bit in ops does not correspond to an operation          that is supported by this channel, that is, if set &          ~validOps() != 0 for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 7}
{"loop_id": 2, "unhandled_api_list": ["java.nio.channels.SelectionKey.interestOps()", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check If this key has been cancelled for java.nio.channels.SelectionKey.interestOps() in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If this channel is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If the selector is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedSelectorException.", "Please check If this channel is in blocking mode for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalBlockingModeException.", "Please check If this channel is currently registered with the given selector          but the corresponding key has already been cancelled for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If a bit in ops does not correspond to an operation          that is supported by this channel, that is, if set &          ~validOps() != 0 for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 6}
{"loop_id": 3, "unhandled_api_list": ["java.nio.channels.SelectionKey.interestOps()", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check If this key has been cancelled for java.nio.channels.SelectionKey.interestOps() in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If this channel is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If the selector is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedSelectorException.", "Please check If this channel is in blocking mode for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalBlockingModeException.", "Please check If this channel is currently registered with the given selector          but the corresponding key has already been cancelled for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If a bit in ops does not correspond to an operation          that is supported by this channel, that is, if set &          ~validOps() != 0 for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 6}
{"loop_id": 4, "unhandled_api_list": ["java.nio.channels.SelectionKey.interestOps()", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)", "java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check If this key has been cancelled for java.nio.channels.SelectionKey.interestOps() in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If this channel is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If the selector is closed for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw ClosedSelectorException.", "Please check If this channel is in blocking mode for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalBlockingModeException.", "Please check If this channel is currently registered with the given selector          but the corresponding key has already been cancelled for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If a bit in ops does not correspond to an operation          that is supported by this channel, that is, if set &          ~validOps() != 0 for java.nio.channels.SelectableChannel.register(java.nio.channels.Selector,int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 6}
{"loop_id": 5, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
