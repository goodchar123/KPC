
Sure, here's the updated Java method that checks if the epoch day exceeds the supported date range for `java.time.LocalDate.ofEpochDay(long)` and throws a `DateTimeException` if it does:

```java
import java.time.LocalDate;
import java.time.chrono.ThaiBuddhistChronology;
import java.time.chrono.ThaiBuddhistDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

public class ThaiBuddhistDateConverter {
    public static ThaiBuddhistDate getThaiBuddhistDateFromEpochDay(long epochDay) {
        try {
            LocalDate localDate = LocalDate.ofEpochDay(epochDay);
            if (localDate.isBefore(LocalDate.MIN) || localDate.isAfter(LocalDate.MAX)) {
                throw new DateTimeException("Epoch day " + epochDay + " exceeds supported date range");
            }
            ThaiBuddhistDate thaiBuddhistDate = ThaiBuddhistChronology.INSTANCE.date(localDate);
            return thaiBuddhistDate;
        } catch (DateTimeException e) {
            throw new DateTimeException("Invalid epoch day " + epochDay, e);
        }
    }
}

------------------------------------------------------
