
Here's the updated Java method that includes the requested checks:

```java
public static Temporal adjustToMonth(Temporal temporal, Month month) {
    if (temporal.isSupported(ChronoField.MONTH_OF_YEAR)) {
        try {
            return temporal.with(ChronoField.MONTH_OF_YEAR, month.getValue());
        } catch (DateTimeException e) {
            throw new DateTimeException("Unable to set month-of-year for " + temporal.getClass(), e);
        } catch (UnsupportedTemporalTypeException e) {
            throw new UnsupportedTemporalTypeException("Month-of-year is not supported by " + temporal.getClass(), e);
        } catch (ArithmeticException e) {
            throw new ArithmeticException("Numeric overflow occurred while setting month-of-year for " + temporal.getClass());
        }
    } else {
        throw new UnsupportedTemporalTypeException("Month-of-year is not supported by " + temporal.getClass());
    }
}
```

This updated method includes the requested checks:

- It catches a `DateTimeException` if the field cannot be set and throws a new `DateTimeException` with a more descriptive error message.
- It catches an `UnsupportedTemporalTypeException` if the field is not supported and throws a new `UnsupportedTemporalTypeException` with a more descriptive error message.
- It catches an `ArithmeticException` if numeric overflow occurs and throws a new `ArithmeticException` with a more descriptive error message.
------------------------------------------------------
