
Sure, here's an updated version of the `createAndBindContext` method that checks for the conditions you specified:

```
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NameAlreadyBoundException;
import javax.naming.NamingException;
import javax.naming.directory.Attributes;
import javax.naming.directory.BasicAttributes;
import javax.naming.directory.DirContext;
import java.util.Hashtable;

public class ContextHelper {

    public static void createAndBindContext(String name, Object obj, Attributes attrs) throws NamingException {
        // Create a new context with associated attributes
        Hashtable<String, String> env = new Hashtable<>();
        env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.fscontext.RefFSContextFactory");
        env.put(Context.PROVIDER_URL, "file:/tmp");
        Context context = new InitialContext(env);

        // Check if name is already bound
        try {
            context.bind(name, obj);
        } catch (NameAlreadyBoundException e) {
            throw new NameAlreadyBoundException("Name " + name + " is already bound.");
        }

        // Check if object supplied all mandatory attributes
        if (attrs != null) {
            DirContext dirContext = (DirContext) context.lookup("");
            Attributes mandatoryAttrs = dirContext.getAttributes("", new String[]{"objectClass"}).get("objectClass");
            for (int i = 0; i < mandatoryAttrs.size(); i++) {
                String attr = (String) mandatoryAttrs.get(i);
                if (!attrs.containsKey(attr)) {
                    throw new InvalidAttributesException("Object does not supply all mandatory attributes.");
                }
            }
        }

        // Bind the context to a name
        context.bind(name, obj);
    }
}
```

In this updated version, we've added three parameters to the method: `name`, `obj`, and `attrs`. `name` is the name to bind the context to, `obj` is the object to bind, and `attrs` is a set of attributes for the object.

We've also added two checks before binding the context. The first check uses a try-catch block to catch the `NameAlreadyBoundException` that is thrown if the name is already bound. If the exception is caught, we throw a new `NameAlreadyBoundException` with a custom message.

The second check uses the `DirContext` class to get the mandatory attributes for the object and checks if the object supplies all of them. If any mandatory attributes are missing, we throw a new `InvalidAttributesException` with a custom message.

If both checks pass, we bind the context to the name using the `bind` method.
------------------------------------------------------
