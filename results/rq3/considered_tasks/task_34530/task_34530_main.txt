Please write a java method that Returns an array of all the objects currently registered as FooListeners upon this Window.
Assuming that the `FooListener` interface is defined, and that the `Window` class has a `getListeners` method that returns an array of listeners of a given type, the following Java method should work:

```java
public FooListener[] getFooListeners() {
    return (FooListener[]) getWindow().getListeners(FooListener.class);
}
```

This method calls the `getListeners` method on the `Window` object, passing in the `FooListener.class` argument to indicate that we want to retrieve all listeners of that type. The method then casts the returned array to an array of `FooListener` objects and returns it.
------------------------------------------------------
Please check if listenerType          doesn't specify a class or interface that implements          java.util.EventListener for java.awt.Window.getListeners(java.lang.Class) in the code snippet you provided, otherwise throw ClassCastException.
Please check if listenerType is null for java.awt.Window.getListeners(java.lang.Class) in the code snippet you provided, otherwise throw NullPointerException.
Here's the updated Java method that includes the requested checks:

```java
public FooListener[] getFooListeners() {
    Class<FooListener> listenerType = FooListener.class;
    EventListener[] listeners = getWindow().getListeners(listenerType);
    if (listenerType != null && !EventListener.class.isAssignableFrom(listenerType)) {
        throw new ClassCastException("Listener type " + listenerType + " does not implement java.util.EventListener");
    }
    if (listenerType == null) {
        throw new NullPointerException("Listener type cannot be null");
    }
    return Arrays.copyOf(listeners, listeners.length, listenerType);
}
```

This method first declares the `listenerType` variable and retrieves the listeners from the `Window` object using the `getListeners` method. It then checks if `listenerType` is null and throws a `NullPointerException` if it is. It also checks if `listenerType` is a class or interface that implements `java.util.EventListener` and throws a `ClassCastException` if it doesn't.

Finally, the method returns a copy of the `listeners` array, cast to an array of `FooListener` objects using the `Arrays.copyOf` method.
------------------------------------------------------
