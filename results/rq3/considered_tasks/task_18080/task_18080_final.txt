
Here's the updated Java method that checks for the conditions you mentioned:

```
public void setBindingsForScope(ScriptContext context, Bindings bindings, int scope) {
    if (scope != ScriptContext.ENGINE_SCOPE && context.getBindings(scope) == null) {
        throw new IllegalArgumentException("No Bindings defined for specified scope value");
    }
    if (scope == ScriptContext.ENGINE_SCOPE && bindings == null) {
        throw new NullPointerException("Specified Bindings cannot be null for ENGINE_SCOPE");
    }
    context.setBindings(bindings, scope);
}
```

This method first checks if the scope value is not ENGINE_SCOPE and if no Bindings is defined for that scope in the ScriptContext. If this condition is true, it throws an IllegalArgumentException with a message indicating that no Bindings is defined for the specified scope value.

Next, it checks if the scope value is ENGINE_SCOPE and if the specified Bindings is null. If this condition is true, it throws a NullPointerException with a message indicating that the specified Bindings cannot be null for ENGINE_SCOPE.

If both conditions are false, it calls the setBindings() method of the ScriptContext object to associate the Bindings instance with the specified scope in the ScriptContext.
------------------------------------------------------
