{"loop_id": 0, "unhandled_api_list": ["javax.sound.midi.MidiSystem.getMidiDevice(javax.sound.midi.MidiDevice.Info)", "javax.sound.midi.MidiSystem.getMidiDevice(javax.sound.midi.MidiDevice.Info)", "javax.sound.midi.MidiSystem.getMidiDevice(javax.sound.midi.MidiDevice.Info)", "javax.sound.midi.MidiDevice.open()", "javax.sound.midi.MidiDevice.open()", "javax.sound.midi.MidiSystem.getSequencer()", "javax.sound.midi.Sequencer.setSequence(javax.sound.midi.Sequence)", "javax.sound.midi.ShortMessage.setMessage(int,int,int,int)", "javax.sound.midi.Sequencer.recordEnable(javax.sound.midi.Track,int)", "javax.sound.midi.Sequencer.start()", "java.lang.Thread.sleep(long)", "javax.sound.midi.Sequencer.stop()"], "num_of_unhandled_api": 12, "unhandled_exception_list": ["Please check if the requested device is not available         due to resource restrictions for javax.sound.midi.MidiSystem.getMidiDevice(javax.sound.midi.MidiDevice.Info) in the code snippet you provided, otherwise throw MidiUnavailableException.", "Please check if the info object does not represent a         MIDI device installed on the system for javax.sound.midi.MidiSystem.getMidiDevice(javax.sound.midi.MidiDevice.Info) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if info is null for javax.sound.midi.MidiSystem.getMidiDevice(javax.sound.midi.MidiDevice.Info) in the code snippet you provided, otherwise throw NullPointerException.", "Please check thrown if the device cannot be opened         due to resource restrictions for javax.sound.midi.MidiDevice.open() in the code snippet you provided, otherwise throw MidiUnavailableException.", "Please check thrown if the device cannot be opened due to         security restrictions for javax.sound.midi.MidiDevice.open() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the sequencer is not available due to         resource restrictions, or there is no Receiver available         by any installed MidiDevice, or no sequencer is installed         in the system for javax.sound.midi.MidiSystem.getSequencer() in the code snippet you provided, otherwise throw MidiUnavailableException.", "Please check if the sequence contains invalid MIDI         data, or is not supported for javax.sound.midi.Sequencer.setSequence(javax.sound.midi.Sequence) in the code snippet you provided, otherwise throw InvalidMidiDataException.", "Please check if the status byte or all data bytes         belonging to the message, do not specify a valid MIDI message for javax.sound.midi.ShortMessage.setMessage(int,int,int,int) in the code snippet you provided, otherwise throw InvalidMidiDataException.", "Please check thrown if the track is not part of the         current sequence for javax.sound.midi.Sequencer.recordEnable(javax.sound.midi.Track,int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the Sequencer is closed for javax.sound.midi.Sequencer.start() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the value of millis is negative for java.lang.Thread.sleep(long) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the Sequencer is closed for javax.sound.midi.Sequencer.stop() in the code snippet you provided, otherwise throw IllegalStateException."], "num_of_unhandled_exception": 12}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
