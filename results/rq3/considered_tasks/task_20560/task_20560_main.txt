Please write a java method that Writes to the stream the data contained in the given object.
Here's an example Java method that writes the data contained in an object to a stream:

```java
public void writeToStream(Object obj, OutputStream outputStream) throws IOException {
    ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);
    objectOutputStream.writeObject(obj);
    objectOutputStream.flush();
}
```

This method takes in an object and an output stream as parameters. It creates an `ObjectOutputStream` from the output stream and writes the object to the stream using the `writeObject` method. Finally, it flushes the stream to ensure that all data is written. 

Note that the object being written must implement the `Serializable` interface in order to be written to a stream.
------------------------------------------------------
Please check Something is wrong with a class used by          serialization. for java.io.ObjectOutputStream.writeObject(java.lang.Object) in the code snippet you provided, otherwise throw InvalidClassException.
Please check Some object to be serialized does not          implement the java.io.Serializable interface. for java.io.ObjectOutputStream.writeObject(java.lang.Object) in the code snippet you provided, otherwise throw NotSerializableException.
Sure, here's an updated version of the Java method that checks for the two exceptions you mentioned:

```java
public void writeToStream(Object obj, OutputStream outputStream) throws IOException, InvalidClassException, NotSerializableException {
    if (!(obj instanceof Serializable)) {
        throw new NotSerializableException("Object to be serialized does not implement the Serializable interface");
    }
    ObjectOutputStream objectOutputStream = new ObjectOutputStream(outputStream);
    objectOutputStream.writeObject(obj);
    objectOutputStream.flush();
    if (objectOutputStream != null) {
        objectOutputStream.close();
    }
}
```

This updated method first checks if the object being written to the stream implements the `Serializable` interface. If it doesn't, it throws a `NotSerializableException`. 

If the object is serializable, it proceeds to create an `ObjectOutputStream` from the output stream and writes the object to the stream using the `writeObject` method. Finally, it flushes the stream to ensure that all data is written and closes the `ObjectOutputStream`.

Additionally, if there is an issue with the class used by serialization, such as a version mismatch, the `writeObject` method may throw an `InvalidClassException`. This exception is not explicitly checked in the method, but it will be thrown if there is an issue with the class used by serialization.
------------------------------------------------------
