
Sure, here's an updated version of the Java method that checks if the month-of-year value is valid and throws a DateTimeException if it's not:

```java
public static LocalDate withMonth(LocalDate date, int month) {
    try {
        return date.withMonth(month);
    } catch (DateTimeException e) {
        throw new DateTimeException("Invalid month value: " + month, e);
    }
}
```

This method takes a LocalDate object and an integer value representing the desired month-of-year. It then attempts to return a copy of the LocalDate object with the month-of-year altered to the specified value using the `withMonth()` method. If the month value is invalid, a DateTimeException is thrown with a custom error message indicating the invalid value.

For example, if you call this method with a LocalDate object representing January 1, 2021 and a month value of 13, it will throw a DateTimeException with the message "Invalid month value: 13".
------------------------------------------------------
