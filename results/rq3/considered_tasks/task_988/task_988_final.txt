
Sure, here's an updated version of the Java method that includes the necessary checks and exceptions:

```java
public boolean addRole(String role) {
    if (role == null) {
        throw new NullPointerException("Cannot add null element to collection");
    }
    if (!isRoleValid(role)) {
        throw new IllegalArgumentException("Role is not valid");
    }
    if (!canAddRole()) {
        throw new IllegalStateException("Cannot add role at this time");
    }
    return roles.add(role);
}

public void addRole(int index, String role) {
    if (role == null) {
        throw new NullPointerException("Cannot add null element to list");
    }
    if (!isRoleValid(role)) {
        throw new IllegalArgumentException("Role is not valid");
    }
    if (!canAddRole()) {
        throw new IllegalStateException("Cannot add role at this time");
    }
    if (index < 0 || index > roles.size()) {
        throw new IndexOutOfBoundsException("Index is out of range");
    }
    roles.add(index, role);
}

public String getRole(int index) {
    if (index < 0 || index >= roles.size()) {
        throw new IndexOutOfBoundsException("Index is out of range");
    }
    return roles.get(index);
}

private boolean isRoleValid(String role) {
    // Check if the role is valid based on some criteria
    // For example, it may need to be a certain length or format
    return true; // Replace with actual validation logic
}

private boolean canAddRole() {
    // Check if a role can be added based on some criteria
    // For example, there may be a limit on the number of roles that can be added
    return true; // Replace with actual validation logic
}
```

This updated version of the method includes checks for null elements, invalid elements, and insertion restrictions. It throws the appropriate exceptions if any of these checks fail. Additionally, the `addRole(int index, String role)` method checks for an out-of-range index and throws an `IndexOutOfBoundsException` if necessary. Finally, the `getRole(int index)` method also checks for an out-of-range index and throws an `IndexOutOfBoundsException` if necessary.
------------------------------------------------------
