{"loop_id": 0, "unhandled_api_list": ["java.io.InputStream.skip(long)", "java.io.FilterInputStream.reset()", "java.io.FilterInputStream.skip(long)", "java.io.FilterInputStream.read()", "java.io.FilterInputStream.read(byte[])", "java.io.FilterInputStream.read(byte[],int,int)", "java.io.FilterInputStream.read(byte[],int,int)", "java.io.FilterInputStream.read(byte[],int,int)", "java.io.FilterInputStream.available()", "java.io.FilterInputStream.close()"], "num_of_unhandled_api": 10, "unhandled_exception_list": ["Please check if an I/O error occurs. for java.io.InputStream.skip(long) in the code snippet you provided, otherwise throw IOException.", "Please check if the stream has not been marked or if the               mark has been invalidated. for java.io.FilterInputStream.reset() in the code snippet you provided, otherwise throw IOException.", "Please check if in.skip(n) throws an IOException. for java.io.FilterInputStream.skip(long) in the code snippet you provided, otherwise throw IOException.", "Please check if an I/O error occurs. for java.io.FilterInputStream.read() in the code snippet you provided, otherwise throw IOException.", "Please check if an I/O error occurs. for java.io.FilterInputStream.read(byte[]) in the code snippet you provided, otherwise throw IOException.", "Please check If b is null. for java.io.FilterInputStream.read(byte[],int,int) in the code snippet you provided, otherwise throw NullPointerException.", "Please check If off is negative,             len is negative, or len is greater than             b.length   off for java.io.FilterInputStream.read(byte[],int,int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException.", "Please check if an I/O error occurs. for java.io.FilterInputStream.read(byte[],int,int) in the code snippet you provided, otherwise throw IOException.", "Please check if an I/O error occurs. for java.io.FilterInputStream.available() in the code snippet you provided, otherwise throw IOException.", "Please check if an I/O error occurs. for java.io.FilterInputStream.close() in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 10}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
