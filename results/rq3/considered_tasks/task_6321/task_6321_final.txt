
Sure, here's the updated Java method that checks if the input days exceeds the capacity of Duration for `java.time.Duration.ofDays(long)` and throws an `ArithmeticException` if it does:

```java
public static Duration getDurationFromDays(long days) {
    try {
        return Duration.ofDays(days);
    } catch (ArithmeticException e) {
        throw new ArithmeticException("Input days exceeds the capacity of Duration");
    }
}
```

This method uses a try-catch block to catch the `ArithmeticException` that is thrown when the input days exceeds the capacity of `Duration`. If this exception is caught, the method throws a new `ArithmeticException` with a custom error message.
------------------------------------------------------
