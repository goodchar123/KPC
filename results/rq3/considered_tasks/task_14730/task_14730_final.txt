
Here's the updated Java method that checks for non-String keys or values in the Properties object, and also checks for a null Writer:

```java
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.util.Properties;

public class PropertiesWriter {
    public static void writeProperties(Properties props, OutputStream out) throws IOException {
        if (props.keySet().stream().anyMatch(key -> !(key instanceof String))) {
            throw new ClassCastException("Properties object contains non-String keys");
        }
        if (props.values().stream().anyMatch(value -> !(value instanceof String))) {
            throw new ClassCastException("Properties object contains non-String values");
        }
        if (out == null) {
            throw new NullPointerException("Output stream is null");
        }
        Writer writer = new OutputStreamWriter(out, "UTF-8");
        props.store(writer, null);
    }
}
```

This updated method first checks if the Properties object contains any non-String keys or values using the stream() method and the anyMatch() method of the Stream interface. If any non-String keys or values are found, a ClassCastException is thrown.

Next, the method checks if the output stream is null. If it is, a NullPointerException is thrown.

If both checks pass, the method proceeds to write the properties to the output stream using the same code as before.
------------------------------------------------------
