List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `com.sun.net.httpserver.HttpServer.create()`
2. `java.net.InetSocketAddress.InetSocketAddress(int port)` 
3. `com.sun.net.httpserver.HttpServer.bind(java.net.InetSocketAddress addr, int backlog)`

 + From response, we get: ['com.sun.net.httpserver.HttpServer.create()', 'java.net.InetSocketAddress.InetSocketAddress(intport)', 'com.sun.net.httpserver.HttpServer.bind(java.net.InetSocketAddressaddr,intbacklog)']
------------------------------------------------------
Is the IOException handled or caught for com.sun.net.httpserver.HttpServer.create() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `com.sun.net.httpserver.HttpServer.create()`
2. `java.net.InetSocketAddress.InetSocketAddress(int port)` 
3. `com.sun.net.httpserver.HttpServer.bind(java.net.InetSocketAddress addr, int backlog)`

 + From response, we get: ['com.sun.net.httpserver.HttpServer.create()', 'java.net.InetSocketAddress.InetSocketAddress(intport)', 'com.sun.net.httpserver.HttpServer.bind(java.net.InetSocketAddressaddr,intbacklog)']
------------------------------------------------------
Is the IOException handled or caught for com.sun.net.httpserver.HttpServer.create() in the code snippet? Answer in Yes or No only.
Yes. The `IOException` is caught and handled in the try-catch block for `com.sun.net.httpserver.HttpServer.create()` method in the code snippet.
------------------------------------------------------
