
Sure, here's the updated code that checks for I/O errors and unsupported operations:

```java
import java.io.IOException;
import java.nio.file.FileStore;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.attribute.FileStoreAttributeView;

public class FileStoreHelper {
    public static long getBytesPerBlock(Path path) throws IOException {
        FileStore store = Files.getFileStore(path);
        try {
            return store.getBlockSize();
        } catch (IOException e) {
            throw e;
        } catch (UnsupportedOperationException e) {
            throw e;
        } catch (Exception e) {
            throw new IOException("Error getting block size", e);
        }
    }
}
```

This updated method now catches `IOException` and `UnsupportedOperationException` separately, and throws them back to the calling code. If any other exception occurs, it is caught and wrapped in an `IOException` with a more descriptive error message.
------------------------------------------------------
