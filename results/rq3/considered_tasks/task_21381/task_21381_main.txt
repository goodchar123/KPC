Please write a java method that Retrieves the designated column's database-specific type name.
Here's a Java method that retrieves the designated column's database-specific type name:

```java
public String getColumnTypeName(Connection conn, String tableName, String columnName) throws SQLException {
    String columnTypeName = null;
    DatabaseMetaData metaData = conn.getMetaData();
    ResultSet rs = metaData.getColumns(null, null, tableName, columnName);
    if (rs.next()) {
        columnTypeName = rs.getString("TYPE_NAME");
    }
    return columnTypeName;
}
```

This method takes in a `Connection` object, the name of the table, and the name of the column whose type name you want to retrieve. It uses the `getMetaData()` method of the `Connection` object to get a `DatabaseMetaData` object, which is used to retrieve information about the database. The `getColumns()` method of the `DatabaseMetaData` object is used to retrieve information about the columns in the specified table. The method then loops through the `ResultSet` object returned by `getColumns()` to find the column with the specified name, and retrieves its type name using the `getString()` method. Finally, the method returns the type name as a `String`.
------------------------------------------------------
Please check if a database access error occurs or this method is called on a closed connection for java.sql.Connection.getMetaData() in the code snippet you provided, otherwise throw SQLException.
Please check if a database access error occurs or this method is         called on a closed result set for java.sql.ResultSet.next() in the code snippet you provided, otherwise throw SQLException.
Sure, here's the updated code snippet that checks for database access errors and closed connections/result sets:

```java
public String getColumnTypeName(Connection conn, String tableName, String columnName) throws SQLException {
    String columnTypeName = null;
    DatabaseMetaData metaData = null;
    ResultSet rs = null;
    try {
        metaData = conn.getMetaData();
        rs = metaData.getColumns(null, null, tableName, columnName);
        if (rs.next()) {
            columnTypeName = rs.getString("TYPE_NAME");
        }
    } catch (SQLException e) {
        throw new SQLException("Database access error or closed connection/result set", e);
    } finally {
        if (rs != null) {
            try {
                rs.close();
            } catch (SQLException e) {
                // ignore
            }
        }
    }
    return columnTypeName;
}
```

In this updated code, we have added a try-catch block to catch any `SQLException` that might occur while accessing the database or working with the result set. If an exception is caught, we throw a new `SQLException` with a more descriptive error message.

We have also added a `finally` block to close the result set if it is not null. This ensures that the result set is always closed, even if an exception occurs.
------------------------------------------------------
