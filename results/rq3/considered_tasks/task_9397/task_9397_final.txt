
You're right, it's important to validate the input parameters to ensure that they represent a valid date in the Minguo calendar system. Here's an updated version of the method that checks for invalid input and throws a `DateTimeException` if necessary:

```
public static MinguoDate getMinguoDate(int year, int month, int day) {
    try {
        LocalDate date = LocalDate.of(year, month, day);
        Chronology minguoChrono = MinguoChronology.INSTANCE;
        return MinguoDate.from(date);
    } catch (DateTimeException e) {
        throw new DateTimeException("Invalid input parameters: " + e.getMessage());
    }
}
```

This version of the method uses a `try-catch` block to catch any `DateTimeException` that may be thrown by the `LocalDate.of()` method if the input parameters are out of range or if the day of month is invalid for the month year.

If a `DateTimeException` is caught, the method throws a new `DateTimeException` with a custom error message that includes the original exception's message.

This way, if the input parameters are invalid, the method will throw a `DateTimeException` with a clear error message indicating the reason for the failure.
------------------------------------------------------
