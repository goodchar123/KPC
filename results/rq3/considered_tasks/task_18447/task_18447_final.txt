
Sure, here's an updated version of the method that checks for invalid regular expression syntax and throws a `PatternSyntaxException` if necessary:

```java
import java.util.regex.PatternSyntaxException;

public String getBorderRightWidth(String cssRule) throws PatternSyntaxException {
    String borderRightWidth = "";
    try {
        String[] properties = cssRule.split(";");
        for (String property : properties) {
            String[] parts = property.split(":");
            if (parts.length == 2) {
                String propertyName = parts[0].trim();
                String propertyValue = parts[1].trim();
                if (propertyName.equals("border-right-width")) {
                    borderRightWidth = propertyValue;
                    break;
                }
            }
        }
    } catch (PatternSyntaxException e) {
        throw new PatternSyntaxException("Invalid regular expression syntax", e.getPattern(), e.getIndex());
    }
    return borderRightWidth;
}
```

This version of the method uses a try-catch block to catch any `PatternSyntaxException` that may be thrown by the `split()` method. If such an exception is caught, it is re-thrown with a more descriptive error message.
------------------------------------------------------
