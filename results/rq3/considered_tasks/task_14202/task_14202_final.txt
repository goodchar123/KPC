
Here's the updated Java method that includes the requested checks:

```java
public static <T> boolean containsAll(Collection<T> collection, Collection<T> elements) {
    for (T element : elements) {
        if (element == null && !collection.contains(null)) {
            throw new NullPointerException("This collection does not permit null elements");
        }
        try {
            if (!collection.contains(element)) {
                return false;
            }
        } catch (ClassCastException e) {
            throw new ClassCastException("The specified element is incompatible with this collection");
        }
    }
    return true;
}
```

This updated method includes two checks. The first check is for a `NullPointerException`. If the specified element is null and the collection does not permit null elements, the method throws a `NullPointerException` with a message indicating that null elements are not permitted.

The second check is for a `ClassCastException`. If the specified element is not compatible with the collection, the `contains()` method will throw a `ClassCastException`. In this case, the method catches the exception and throws a new `ClassCastException` with a message indicating that the specified element is incompatible with the collection.
------------------------------------------------------
