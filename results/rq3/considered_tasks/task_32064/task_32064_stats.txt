{"loop_id": 0, "unhandled_api_list": ["javax.imageio.ImageIO.getImageReadersByFormatName(java.lang.String)", "javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String)", "javax.imageio.ImageReader.getImageMetadata(int)", "javax.imageio.ImageReader.getImageMetadata(int)", "javax.imageio.ImageReader.getImageMetadata(int)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"], "num_of_unhandled_api": 9, "unhandled_exception_list": ["Please check if formatName is null. for javax.imageio.ImageIO.getImageReadersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if formatName is null. for javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the input source has not been set. for javax.imageio.ImageReader.getImageMetadata(int) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the supplied index is out of bounds. for javax.imageio.ImageReader.getImageMetadata(int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException.", "Please check if an error occurs during reading. for javax.imageio.ImageReader.getImageMetadata(int) in the code snippet you provided, otherwise throw IOException.", "Please check if the output has not been set. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if image contains a Raster and canWriteRasters returns false. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if image is null. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during writing. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 9}
{"loop_id": 1, "unhandled_api_list": ["javax.imageio.ImageIO.getImageReadersByFormatName(java.lang.String)", "javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String)", "javax.imageio.ImageReader.setInput(java.lang.Object)", "javax.imageio.ImageReader.getImageMetadata(int)"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if formatName is null. for javax.imageio.ImageIO.getImageReadersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if formatName is null. for javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if input is not an instance of one of the classes returned by the originating service provider's getInputTypes method, or is not an ImageInputStream. for javax.imageio.ImageReader.setInput(java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the input source has not been set. for javax.imageio.ImageReader.getImageMetadata(int) in the code snippet you provided, otherwise throw IllegalStateException."], "num_of_unhandled_exception": 4}
{"loop_id": 2, "unhandled_api_list": ["javax.imageio.ImageReader.setInput(java.lang.Object)", "javax.imageio.ImageReader.getImageMetadata(int)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if input is not an instance of one of the classes returned by the originating service provider's getInputTypes method, or is not an ImageInputStream. for javax.imageio.ImageReader.setInput(java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the input source has not been set. for javax.imageio.ImageReader.getImageMetadata(int) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the output has not been set. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if image is null. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 4}
{"loop_id": 0, "unhandled_api_list": ["javax.imageio.ImageIO.getImageReadersByFormatName(java.lang.String)", "javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String)", "javax.imageio.ImageReader.getImageMetadata(int)", "javax.imageio.ImageReader.getImageMetadata(int)", "javax.imageio.ImageReader.getImageMetadata(int)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"], "num_of_unhandled_api": 9, "unhandled_exception_list": ["Please check if formatName is null. for javax.imageio.ImageIO.getImageReadersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if formatName is null. for javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the input source has not been set. for javax.imageio.ImageReader.getImageMetadata(int) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the supplied index is out of bounds. for javax.imageio.ImageReader.getImageMetadata(int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException.", "Please check if an error occurs during reading. for javax.imageio.ImageReader.getImageMetadata(int) in the code snippet you provided, otherwise throw IOException.", "Please check if the output has not been set. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if image contains a Raster and canWriteRasters returns false. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if image is null. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during writing. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 9}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
