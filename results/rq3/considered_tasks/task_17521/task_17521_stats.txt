{"loop_id": 0, "unhandled_api_list": ["java.security.KeyStore.getInstance(java.lang.String)", "java.security.KeyStore.getInstance(java.lang.String)", "java.security.KeyStore.load(java.io.InputStream,char[])", "javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String)", "javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String)", "javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore,char[])", "javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore,char[])", "javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore,char[])", "javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String)", "javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String)", "javax.net.ssl.TrustManagerFactory.init(java.security.KeyStore)", "javax.net.ssl.SSLContext.getInstance(java.lang.String)", "javax.net.ssl.SSLContext.getInstance(java.lang.String)", "javax.net.ssl.SSLContext.init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)", "com.sun.net.httpserver.HttpsServer.create()"], "num_of_unhandled_api": 15, "unhandled_exception_list": ["Please check if no Provider supports a         KeyStoreSpi implementation for the         specified type for java.security.KeyStore.getInstance(java.lang.String) in the code snippet you provided, otherwise throw KeyStoreException.", "Please check if type is null for java.security.KeyStore.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the algorithm used to check the integrity of the keystore cannot be found for java.security.KeyStore.load(java.io.InputStream,char[]) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if no Provider supports a         KeyManagerFactorySpi implementation for the         specified algorithm for javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if algorithm is null for javax.net.ssl.KeyManagerFactory.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if this operation fails for javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore,char[]) in the code snippet you provided, otherwise throw KeyStoreException.", "Please check if the specified algorithm is not          available from the specified provider. for javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore,char[]) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if the key cannot be recovered          (e.g. the given password is wrong). for javax.net.ssl.KeyManagerFactory.init(java.security.KeyStore,char[]) in the code snippet you provided, otherwise throw UnrecoverableKeyException.", "Please check if no Provider supports a         TrustManagerFactorySpi implementation for the         specified algorithm for javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if algorithm is null for javax.net.ssl.TrustManagerFactory.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if this operation fails for javax.net.ssl.TrustManagerFactory.init(java.security.KeyStore) in the code snippet you provided, otherwise throw KeyStoreException.", "Please check if no Provider supports a         SSLContextSpi implementation for the         specified protocol for javax.net.ssl.SSLContext.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if protocol is null for javax.net.ssl.SSLContext.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if this operation fails for javax.net.ssl.SSLContext.init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom) in the code snippet you provided, otherwise throw KeyManagementException.", "Please check if an I/O error occurs for com.sun.net.httpserver.HttpsServer.create() in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 15}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
