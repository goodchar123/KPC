Please write a java method that Obtains an instance of YearMonth from a year and month.
Sure, here's a Java method that obtains an instance of YearMonth from a year and month:

```java
import java.time.YearMonth;

public class YearMonthExample {
    public static YearMonth getYearMonth(int year, int month) {
        return YearMonth.of(year, month);
    }
}
```

You can call this method by passing in the year and month as integers:

```java
YearMonth yearMonth = YearMonthExample.getYearMonth(2021, 10);
System.out.println(yearMonth); // Output: 2021-10
```

This will return an instance of `YearMonth` representing the specified year and month.
------------------------------------------------------
Please check if either field value is invalid for java.time.YearMonth.of(int,int) in the code snippet you provided, otherwise throw DateTimeException.
Sure, here's the updated Java method that checks if either field value is invalid for `java.time.YearMonth.of(int,int)`. If either field value is invalid, it throws a `DateTimeException`:

```java
import java.time.DateTimeException;
import java.time.YearMonth;

public class YearMonthExample {
    public static YearMonth getYearMonth(int year, int month) {
        try {
            return YearMonth.of(year, month);
        } catch (DateTimeException e) {
            throw new DateTimeException("Invalid year or month value", e);
        }
    }
}
```

This method uses a try-catch block to catch any `DateTimeException` that may be thrown by the `YearMonth.of()` method. If a `DateTimeException` is caught, it throws a new `DateTimeException` with a custom error message.

You can call this method in the same way as before:

```java
YearMonth yearMonth = YearMonthExample.getYearMonth(2021, 13); // Invalid month value
```

This will throw a `DateTimeException` with the message "Invalid year or month value".
------------------------------------------------------
