{"loop_id": 0, "unhandled_api_list": ["javax.net.ssl.SSLSession.getPeerCertificates()"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if the peer's identity has not          been verified for javax.net.ssl.SSLSession.getPeerCertificates() in the code snippet you provided, otherwise throw SSLPeerUnverifiedException."], "num_of_unhandled_exception": 1}
{"loop_id": 1, "unhandled_api_list": ["java.security.cert.CertPathBuilder.getInstance(java.lang.String)", "java.security.cert.CertPathBuilder.getInstance(java.lang.String)", "java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)", "java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)", "java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)", "java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)", "java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)", "java.security.cert.CertPathValidator.getInstance(java.lang.String)", "java.security.cert.CertPathValidator.getInstance(java.lang.String)", "java.security.cert.CertPathValidator.validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)"], "num_of_unhandled_api": 10, "unhandled_exception_list": ["Please check if no Provider supports a         CertPathBuilderSpi implementation for the         specified algorithm for java.security.cert.CertPathBuilder.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if algorithm is null for java.security.cert.CertPathBuilder.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the provider is         null or empty for java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the specified         initialization parameters are inappropriate for this         CertStore for java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String) in the code snippet you provided, otherwise throw InvalidAlgorithmParameterException.", "Please check if a CertStoreSpi         implementation for the specified type is not         available from the specified provider for java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if the specified provider is not         registered in the security provider list for java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String) in the code snippet you provided, otherwise throw NoSuchProviderException.", "Please check if type is null for java.security.cert.CertStore.getInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if no Provider supports a         CertPathValidatorSpi implementation for the         specified algorithm for java.security.cert.CertPathValidator.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if algorithm is null for java.security.cert.CertPathValidator.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the specified parameters or the type of the specified CertPath are inappropriate for this CertPathValidator for java.security.cert.CertPathValidator.validate(java.security.cert.CertPath,java.security.cert.CertPathParameters) in the code snippet you provided, otherwise throw InvalidAlgorithmParameterException."], "num_of_unhandled_exception": 10}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
