
Sure, here's the updated code snippet that checks if the specified field is out of range and throws an `ArrayIndexOutOfBoundsException` if it is:

```java
import java.util.Calendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

public class CalendarFields {
    public static Map<String, Integer> getCalendarFields(int style, Locale locale) {
        Map<String, Integer> calendarFields = new HashMap<>();
        Calendar calendar = Calendar.getInstance(locale);
        String[] fieldNames = calendar.getDisplayNames(style, Calendar.ALL_FIELDS, locale);
        for (String fieldName : fieldNames) {
            int field = Calendar.getByName(fieldName);
            if (field < 0 || field >= Calendar.FIELD_COUNT) {
                throw new ArrayIndexOutOfBoundsException("Invalid calendar field: " + fieldName);
            }
            int fieldValue = calendar.get(field);
            calendarFields.put(fieldName, fieldValue);
        }
        return calendarFields;
    }
}
```

In this updated code, we first get the integer value of the field using the `Calendar.getByName(fieldName)` method. We then check if the field is out of range using the condition `field < 0 || field >= Calendar.FIELD_COUNT`. If the field is out of range, we throw an `ArrayIndexOutOfBoundsException` with a message indicating the invalid field name.

If the field is valid, we get its value using the `calendar.get(field)` method and put the name-value pair into the `HashMap`.
------------------------------------------------------
