Please write a java method that Returns a Map containing all names of the calendar field in the given style and locale and their corresponding field values.
Here's a Java method that returns a Map containing all names of the calendar field in the given style and locale and their corresponding field values:

```java
import java.util.Calendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

public class CalendarFields {
    public static Map<String, Integer> getCalendarFields(int style, Locale locale) {
        Map<String, Integer> calendarFields = new HashMap<>();
        Calendar calendar = Calendar.getInstance(locale);
        String[] fieldNames = calendar.getDisplayNames(style, Calendar.ALL_FIELDS, locale);
        for (String fieldName : fieldNames) {
            int fieldValue = calendar.get(Calendar.getByName(fieldName));
            calendarFields.put(fieldName, fieldValue);
        }
        return calendarFields;
    }
}
```

This method takes two parameters: `style` and `locale`. The `style` parameter specifies the style of the field names to be returned, and can be one of the following constants defined in the `Calendar` class: `SHORT`, `LONG`, or `NARROW`. The `locale` parameter specifies the locale for which the field names and values should be returned.

The method creates a new `HashMap` to store the field names and values, and then creates a new `Calendar` instance for the specified locale. It then calls the `getDisplayNames` method on the calendar object to get an array of field names in the specified style. For each field name, the method gets the corresponding field value from the calendar object using the `get` method and puts the name-value pair into the `HashMap`.

Finally, the method returns the `HashMap` containing all the field names and values.
------------------------------------------------------
Please check if the specified field is out of range             (field < 0 || field >= FIELD_COUNT). for java.util.Calendar.get(int) in the code snippet you provided, otherwise throw ArrayIndexOutOfBoundsException.
Sure, here's the updated code snippet that checks if the specified field is out of range and throws an `ArrayIndexOutOfBoundsException` if it is:

```java
import java.util.Calendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

public class CalendarFields {
    public static Map<String, Integer> getCalendarFields(int style, Locale locale) {
        Map<String, Integer> calendarFields = new HashMap<>();
        Calendar calendar = Calendar.getInstance(locale);
        String[] fieldNames = calendar.getDisplayNames(style, Calendar.ALL_FIELDS, locale);
        for (String fieldName : fieldNames) {
            int field = Calendar.getByName(fieldName);
            if (field < 0 || field >= Calendar.FIELD_COUNT) {
                throw new ArrayIndexOutOfBoundsException("Invalid calendar field: " + fieldName);
            }
            int fieldValue = calendar.get(field);
            calendarFields.put(fieldName, fieldValue);
        }
        return calendarFields;
    }
}
```

In this updated code, we first get the integer value of the field using the `Calendar.getByName(fieldName)` method. We then check if the field is out of range using the condition `field < 0 || field >= Calendar.FIELD_COUNT`. If the field is out of range, we throw an `ArrayIndexOutOfBoundsException` with a message indicating the invalid field name.

If the field is valid, we get its value using the `calendar.get(field)` method and put the name-value pair into the `HashMap`.
------------------------------------------------------
