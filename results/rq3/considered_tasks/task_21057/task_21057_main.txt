Please write a java method that Retrieves whether a result set's own inserts are visible.
Here's a Java method that retrieves whether a result set's own inserts are visible:

```java
public boolean getResultSetOwnInsertsVisibility(ResultSet resultSet) throws SQLException {
    return resultSet.getMetaData().insertsAreVisible(ResultSet.INSERTED);
}
```

This method takes a `ResultSet` object as input and returns a boolean value indicating whether the result set's own inserts are visible. It uses the `getMetaData()` method of the `ResultSet` object to retrieve the metadata for the result set, and then calls the `insertsAreVisible()` method of the metadata object, passing in the `ResultSet.INSERTED` constant to specify that it wants to check whether the result set's own inserts are visible. The method returns the boolean value returned by the `insertsAreVisible()` method. 

Note that this method may throw a `SQLException` if there is an error retrieving the metadata or checking the visibility of the result set's own inserts.
------------------------------------------------------
Please check if a database access error occurs or this method is         called on a closed result set for java.sql.ResultSet.getMetaData() in the code snippet you provided, otherwise throw SQLException.
Sure, here's the updated Java method that checks for a database access error or a closed result set before calling `getMetaData()`, and throws a `SQLException` if either of these conditions are met:

```java
public boolean getResultSetOwnInsertsVisibility(ResultSet resultSet) throws SQLException {
    if (resultSet.isClosed()) {
        throw new SQLException("Result set is closed");
    }
    try {
        return resultSet.getMetaData().insertsAreVisible(ResultSet.INSERTED);
    } catch (SQLException e) {
        throw new SQLException("Database access error", e);
    }
}
```

This updated method first checks if the result set is closed using the `isClosed()` method of the `ResultSet` object. If the result set is closed, it throws a `SQLException` with an appropriate error message.

If the result set is not closed, the method tries to retrieve the metadata using `getMetaData()`. If a database access error occurs during this process, the method catches the `SQLException` and throws a new `SQLException` with an appropriate error message and the original exception as the cause.

Otherwise, the method calls `insertsAreVisible()` on the metadata object to retrieve the visibility of the result set's own inserts, and returns the boolean value returned by this method.
------------------------------------------------------
