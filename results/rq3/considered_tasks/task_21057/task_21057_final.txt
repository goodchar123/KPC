
Sure, here's the updated Java method that checks for a database access error or a closed result set before calling `getMetaData()`, and throws a `SQLException` if either of these conditions are met:

```java
public boolean getResultSetOwnInsertsVisibility(ResultSet resultSet) throws SQLException {
    if (resultSet.isClosed()) {
        throw new SQLException("Result set is closed");
    }
    try {
        return resultSet.getMetaData().insertsAreVisible(ResultSet.INSERTED);
    } catch (SQLException e) {
        throw new SQLException("Database access error", e);
    }
}
```

This updated method first checks if the result set is closed using the `isClosed()` method of the `ResultSet` object. If the result set is closed, it throws a `SQLException` with an appropriate error message.

If the result set is not closed, the method tries to retrieve the metadata using `getMetaData()`. If a database access error occurs during this process, the method catches the `SQLException` and throws a new `SQLException` with an appropriate error message and the original exception as the cause.

Otherwise, the method calls `insertsAreVisible()` on the metadata object to retrieve the visibility of the result set's own inserts, and returns the boolean value returned by this method.
------------------------------------------------------
