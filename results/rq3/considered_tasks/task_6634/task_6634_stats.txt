{"loop_id": 0, "unhandled_api_list": ["java.time.MonthDay.of(int,int)", "java.time.temporal.TemporalAccessor.getLong(java.time.temporal.TemporalField)", "java.time.temporal.TemporalAccessor.getLong(java.time.temporal.TemporalField)", "java.time.temporal.TemporalAccessor.getLong(java.time.temporal.TemporalField)"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if the value of any field is out of range,  or if the day of month is invalid for the month for java.time.MonthDay.of(int,int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if a value for the field cannot be obtained for java.time.temporal.TemporalAccessor.getLong(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the field is not supported for java.time.temporal.TemporalAccessor.getLong(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw UnsupportedTemporalTypeException.", "Please check if numeric overflow occurs for java.time.temporal.TemporalAccessor.getLong(java.time.temporal.TemporalField) in the code snippet you provided, otherwise throw ArithmeticException."], "num_of_unhandled_exception": 4}
{"loop_id": 1, "unhandled_api_list": ["java.time.MonthDay.of(int,int)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if the value of any field is out of range,  or if the day of month is invalid for the month for java.time.MonthDay.of(int,int) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 1}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
