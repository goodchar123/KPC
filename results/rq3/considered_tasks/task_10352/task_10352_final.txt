
Here is the updated Java method that checks for formatting errors and null format string before writing a formatted string to an output stream using the `printf` method:

```java
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.IllegalFormatException;

public class Example {
    public static void writeFormattedString(OutputStream outputStream, String format, Object... args) {
        if (format == null) {
            throw new NullPointerException("Format string cannot be null");
        }
        try {
            PrintStream printStream = new PrintStream(outputStream);
            printStream.printf(format, args);
        } catch (IllegalFormatException e) {
            throw new IllegalFormatException("Invalid format string: " + e.getMessage());
        }
    }
}
```

This method first checks if the format string is null and throws a `NullPointerException` if it is. Then it tries to create a `PrintStream` object from the output stream and use its `printf` method to write the formatted string to the output stream. If there is any formatting error, it catches the `IllegalFormatException` and throws a new `IllegalFormatException` with a message indicating the invalid format string.
------------------------------------------------------
