
Here's the updated Java method that checks if any element of `ptypes` is `void.class` for `java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[])` and throws an `IllegalArgumentException` if it is not:

```
import java.lang.invoke.MethodType;

public class MethodTypeHelper {
    public static MethodType findOrCreateMethodType(Class<?>... ptypes) {
        for (Class<?> ptype : ptypes) {
            if (ptype == void.class) {
                throw new IllegalArgumentException("Parameter type cannot be void");
            }
        }
        return MethodType.methodType(Object.class, ptypes);
    }
}
```

This method takes a variable number of `Class<?>` arguments as `ptypes`. It then iterates through each element of `ptypes` and checks if it is equal to `void.class`. If it is, it throws an `IllegalArgumentException` with a message "Parameter type cannot be void". If none of the elements are `void.class`, it returns the `MethodType` object created using `java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[])`.
------------------------------------------------------
