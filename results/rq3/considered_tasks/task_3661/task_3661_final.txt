
Sure, here's the updated Java method that checks if an instance of `XMLOutputFactory` and `XMLEventFactory` can be loaded. If not, it throws a `FactoryConfigurationError`:

```java
import javax.xml.stream.XMLEventFactory;
import javax.xml.stream.XMLEventWriter;
import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.events.XMLEvent;
import java.io.Writer;

public class XmlWriter {
    public static XMLEventWriter createXmlEventWriter(Writer writer) throws XMLStreamException {
        XMLOutputFactory xmlOutputFactory;
        try {
            xmlOutputFactory = XMLOutputFactory.newInstance();
        } catch (XMLStreamException e) {
            throw new FactoryConfigurationError("Unable to load XMLOutputFactory", e);
        }

        XMLEventFactory xmlEventFactory;
        try {
            xmlEventFactory = XMLEventFactory.newInstance();
        } catch (XMLStreamException e) {
            throw new FactoryConfigurationError("Unable to load XMLEventFactory", e);
        }

        XMLEventWriter xmlEventWriter = xmlOutputFactory.createXMLEventWriter(writer);
        XMLEvent startDocument = xmlEventFactory.createStartDocument();
        xmlEventWriter.add(startDocument);
        return xmlEventWriter;
    }
}
```

This updated method uses a try-catch block to catch any `XMLStreamException` that may occur when trying to load the `XMLOutputFactory` and `XMLEventFactory`. If an exception is caught, it throws a `FactoryConfigurationError` with a message indicating which factory failed to load and the original exception as the cause.
------------------------------------------------------
