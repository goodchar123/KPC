List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.StringBuilder.<init>(java.lang.String)`
2. `java.lang.String.charAt(int)`
3. `java.lang.Character.isDigit(char)`
4. `java.lang.Character.toString(char)`
5. `java.text.NumberFormat.getInstance(java.util.Locale)`
6. `java.lang.Integer.parseInt(java.lang.String)`
7. `java.lang.StringBuilder.replace(int, int, java.lang.String)`
8. `java.lang.String.toString()`

 + From response, we get: ['java.lang.StringBuilder.<init>(java.lang.String)', 'java.lang.String.charAt(int)', 'java.lang.Character.isDigit(char)', 'java.lang.Character.toString(char)', 'java.text.NumberFormat.getInstance(java.util.Locale)', 'java.lang.Integer.parseInt(java.lang.String)', 'java.lang.StringBuilder.replace(int,int,java.lang.String)', 'java.lang.String.toString()']
------------------------------------------------------
Is the IndexOutOfBoundsException handled or caught for java.lang.String.charAt(int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NumberFormatException handled or caught for java.lang.Integer.parseInt(java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the StringIndexOutOfBoundsException handled or caught for java.lang.StringBuilder.replace(int,int,java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.StringBuilder.replace(int start, int end, String str)`
2. `java.lang.String.charAt(int index)`
3. `java.lang.Character.isDigit(char ch)`
4. `java.text.NumberFormat.getInstance(Locale inLocale)`
5. `java.lang.Integer.parseInt(String s)`

 + From response, we get: ['java.lang.StringBuilder.replace(intstart,intend,Stringstr)', 'java.lang.String.charAt(intindex)', 'java.lang.Character.isDigit(charch)', 'java.text.NumberFormat.getInstance(LocaleinLocale)', 'java.lang.Integer.parseInt(Strings)']
------------------------------------------------------
