{"loop_id": 0, "unhandled_api_list": ["com.sun.nio.sctp.SctpServerChannel.open()", "com.sun.nio.sctp.SctpServerChannel.open()", "com.sun.nio.sctp.SctpServerChannel.accept()", "com.sun.nio.sctp.SctpServerChannel.accept()", "com.sun.nio.sctp.SctpServerChannel.accept()", "com.sun.nio.sctp.SctpServerChannel.accept()", "com.sun.nio.sctp.SctpServerChannel.accept()", "com.sun.nio.sctp.SctpServerChannel.accept()"], "num_of_unhandled_api": 8, "unhandled_exception_list": ["Please check If the SCTP protocol is not supported for com.sun.nio.sctp.SctpServerChannel.open() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check If an I/O error occurs for com.sun.nio.sctp.SctpServerChannel.open() in the code snippet you provided, otherwise throw IOException.", "Please check If this channel is closed for com.sun.nio.sctp.SctpServerChannel.accept() in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If another thread closes this channel          while the accept operation is in progress for com.sun.nio.sctp.SctpServerChannel.accept() in the code snippet you provided, otherwise throw AsynchronousCloseException.", "Please check If another thread interrupts the current thread          while the accept operation is in progress, thereby          closing the channel and setting the current thread's          interrupt status for com.sun.nio.sctp.SctpServerChannel.accept() in the code snippet you provided, otherwise throw ClosedByInterruptException.", "Please check If this channel's socket has not yet been bound for com.sun.nio.sctp.SctpServerChannel.accept() in the code snippet you provided, otherwise throw NotYetBoundException.", "Please check If a security manager has been installed and it does not permit          access to the remote peer of the new association for com.sun.nio.sctp.SctpServerChannel.accept() in the code snippet you provided, otherwise throw SecurityException.", "Please check If some other I/O error occurs for com.sun.nio.sctp.SctpServerChannel.accept() in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 8}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
