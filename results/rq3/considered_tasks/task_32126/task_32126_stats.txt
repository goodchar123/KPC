{"loop_id": 0, "unhandled_api_list": ["javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String)", "javax.imageio.ImageTypeSpecifier.createFromBufferedImageType(int)", "javax.imageio.spi.ImageWriterSpi.canEncodeImage(javax.imageio.ImageTypeSpecifier)", "javax.imageio.spi.ImageWriterSpi.createWriterInstance()", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"], "num_of_unhandled_api": 14, "unhandled_exception_list": ["Please check if formatName is null. for javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if bufferedImageType is not one of the standard types, or is equal to TYPE_CUSTOM. for javax.imageio.ImageTypeSpecifier.createFromBufferedImageType(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if type is null. for javax.imageio.spi.ImageWriterSpi.canEncodeImage(javax.imageio.ImageTypeSpecifier) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during loading, or initialization of the writer class, or during instantiation or initialization of the writer object. for javax.imageio.spi.ImageWriterSpi.createWriterInstance() in the code snippet you provided, otherwise throw IOException.", "Please check if the writer does not support compression, or does not support the requested mode. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if mode is not one of the modes listed above. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the set of legal compression types is non null and the current compression type is null. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if quality is not between 0 and 1, inclusive. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the output has not been set. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if image contains a Raster and canWriteRasters returns false. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if image is null. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during writing. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 14}
{"loop_id": 0, "unhandled_api_list": ["javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String)", "javax.imageio.ImageTypeSpecifier.createFromBufferedImageType(int)", "javax.imageio.spi.ImageWriterSpi.canEncodeImage(javax.imageio.ImageTypeSpecifier)", "javax.imageio.spi.ImageWriterSpi.createWriterInstance()", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"], "num_of_unhandled_api": 14, "unhandled_exception_list": ["Please check if formatName is null. for javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if bufferedImageType is not one of the standard types, or is equal to TYPE_CUSTOM. for javax.imageio.ImageTypeSpecifier.createFromBufferedImageType(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if type is null. for javax.imageio.spi.ImageWriterSpi.canEncodeImage(javax.imageio.ImageTypeSpecifier) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during loading, or initialization of the writer class, or during instantiation or initialization of the writer object. for javax.imageio.spi.ImageWriterSpi.createWriterInstance() in the code snippet you provided, otherwise throw IOException.", "Please check if the writer does not support compression, or does not support the requested mode. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if mode is not one of the modes listed above. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the set of legal compression types is non null and the current compression type is null. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if quality is not between 0 and 1, inclusive. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the output has not been set. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if image contains a Raster and canWriteRasters returns false. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if image is null. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during writing. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 14}
{"loop_id": 1, "unhandled_api_list": ["javax.imageio.ImageIO.createImageOutputStream(java.lang.Object)", "javax.imageio.ImageIO.createImageOutputStream(java.lang.Object)", "javax.imageio.ImageTypeSpecifier.createFromBufferedImageType(int)", "javax.imageio.spi.ImageWriterSpi.canEncodeImage(javax.imageio.ImageTypeSpecifier)", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.getCompressionMode()", "javax.imageio.ImageWriteParam.getCompressionTypes()", "javax.imageio.ImageWriteParam.getCompressionType()", "javax.imageio.ImageWriteParam.getCompressionType()", "javax.imageio.ImageWriteParam.getCompressionQuality()", "javax.imageio.ImageWriteParam.getCompressionQuality()", "javax.imageio.ImageWriteParam.getCompressionQuality()", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"], "num_of_unhandled_api": 15, "unhandled_exception_list": ["Please check if output is null. for javax.imageio.ImageIO.createImageOutputStream(java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if a cache file is needed but cannot be created. for javax.imageio.ImageIO.createImageOutputStream(java.lang.Object) in the code snippet you provided, otherwise throw IOException.", "Please check if bufferedImageType is not one of the standard types, or is equal to TYPE_CUSTOM. for javax.imageio.ImageTypeSpecifier.createFromBufferedImageType(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if type is null. for javax.imageio.spi.ImageWriterSpi.canEncodeImage(javax.imageio.ImageTypeSpecifier) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if mode is not one of the modes listed above. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.getCompressionMode() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.getCompressionTypes() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.getCompressionType() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.getCompressionType() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.getCompressionQuality() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.getCompressionQuality() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the set of legal compression types is non null and the current compression type is null. for javax.imageio.ImageWriteParam.getCompressionQuality() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the output has not been set. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if image contains a Raster and canWriteRasters returns false. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw UnsupportedOperationException."], "num_of_unhandled_exception": 15}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
