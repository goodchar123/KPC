
Here's the updated Java method that checks for resource restrictions, unsupported lines, and security restrictions:

```java
import javax.sound.sampled.*;

public Clip getClipFromMixer(Mixer mixer) throws LineUnavailableException, IllegalArgumentException, SecurityException {
    DataLine.Info clipInfo = new DataLine.Info(Clip.class, null);
    if (!mixer.isLineSupported(clipInfo)) {
        throw new IllegalArgumentException("Mixer does not support Clip");
    }
    Line line = null;
    try {
        line = mixer.getLine(clipInfo);
    } catch (LineUnavailableException e) {
        throw new LineUnavailableException("Line unavailable due to resource restrictions");
    } catch (SecurityException e) {
        throw new SecurityException("Line unavailable due to security restrictions");
    }
    Clip clip = (Clip) line;
    return clip;
}
```

This updated method first checks if the specified `Mixer` supports the `Clip` line using the `isLineSupported` method. If it does not, an `IllegalArgumentException` is thrown.

Next, it attempts to obtain the `Line` object from the `Mixer` using the `getLine` method. If the line is unavailable due to resource restrictions, a `LineUnavailableException` is thrown. If the line is unavailable due to security restrictions, a `SecurityException` is thrown.

Finally, if the `Line` object is obtained successfully, it is cast to a `Clip` object and returned.
------------------------------------------------------
