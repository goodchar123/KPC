Please write a java method that Returns an effectively unlimited stream of pseudorandom  int values from this generator and/or one split from it; each value conforms to the given origin (inclusive) and bound (exclusive).
Here's a Java method that returns an effectively unlimited stream of pseudorandom int values from the generator and/or one split from it, each value conforming to the given origin (inclusive) and bound (exclusive):

```java
import java.util.Random;
import java.util.stream.IntStream;

public class RandomIntStream {
    public static IntStream randomIntStream(int origin, int bound) {
        Random random = new Random();
        return random.ints(origin, bound);
    }
}
```

This method uses the `Random` class to generate pseudorandom int values and returns an `IntStream` of those values that conform to the given origin and bound. The `ints` method of the `Random` class is used to generate an effectively unlimited stream of pseudorandom int values within the given range.
------------------------------------------------------
Please check if randomNumberOrigin         is greater than or equal to randomNumberBound for java.util.Random.ints(int,int) in the code snippet you provided, otherwise throw IllegalArgumentException.
Sure, here's the updated code snippet that checks if `randomNumberOrigin` is greater than or equal to `randomNumberBound` and throws an `IllegalArgumentException` if it is:

```java
import java.util.Random;
import java.util.stream.IntStream;

public class RandomIntStream {
    public static IntStream randomIntStream(int randomNumberOrigin, int randomNumberBound) {
        if (randomNumberOrigin >= randomNumberBound) {
            throw new IllegalArgumentException("Origin must be less than bound");
        }
        Random random = new Random();
        return random.ints(randomNumberOrigin, randomNumberBound);
    }
}
```

This updated method first checks if `randomNumberOrigin` is greater than or equal to `randomNumberBound` and throws an `IllegalArgumentException` with a message if it is. If the check passes, it proceeds to generate an `IntStream` of pseudorandom int values within the given range using the `ints` method of the `Random` class.
------------------------------------------------------
