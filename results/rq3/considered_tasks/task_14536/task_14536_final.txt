
Sure, here's the updated code snippet that checks if `randomNumberOrigin` is greater than or equal to `randomNumberBound` and throws an `IllegalArgumentException` if it is:

```java
import java.util.Random;
import java.util.stream.IntStream;

public class RandomIntStream {
    public static IntStream randomIntStream(int randomNumberOrigin, int randomNumberBound) {
        if (randomNumberOrigin >= randomNumberBound) {
            throw new IllegalArgumentException("Origin must be less than bound");
        }
        Random random = new Random();
        return random.ints(randomNumberOrigin, randomNumberBound);
    }
}
```

This updated method first checks if `randomNumberOrigin` is greater than or equal to `randomNumberBound` and throws an `IllegalArgumentException` with a message if it is. If the check passes, it proceeds to generate an `IntStream` of pseudorandom int values within the given range using the `ints` method of the `Random` class.
------------------------------------------------------
