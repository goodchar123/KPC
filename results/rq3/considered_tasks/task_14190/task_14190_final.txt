
Sure, here's the updated `set` method that checks if the specified field is out of range in non-lenient mode and throws an `ArrayIndexOutOfBoundsException` if it is:

```
public void set(int field, int value) {
    if (isLenient() || (value >= getMinimum(field) && value <= getMaximum(field))) {
        fields[field] = value;
        isSet[field] = true;
        isTimeSet = false;
    } else {
        if (field < 0 || field >= FIELD_COUNT) {
            throw new ArrayIndexOutOfBoundsException(field);
        } else {
            throw new IllegalArgumentException("Value " + value + " is out of range for field " + field);
        }
    }
}
```

This method first checks if the calendar is in lenient mode or if the specified value is within the valid range for the specified field. If either of these conditions is true, the method sets the field value and updates the `isSet` and `isTimeSet` flags accordingly.

If the calendar is not in lenient mode and the specified value is out of range for the specified field, the method checks if the field index is out of range and throws an `ArrayIndexOutOfBoundsException` if it is. Otherwise, it throws an `IllegalArgumentException` with a message indicating that the specified value is out of range for the specified field.
------------------------------------------------------
