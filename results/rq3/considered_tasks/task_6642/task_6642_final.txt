
Sure, here's an updated version of the `queryMonthDay` method that checks for out-of-range years:

```java
public static boolean queryMonthDay(MonthDay monthDay, String query) {
    try {
        int year = 2021; // set the year to any non-leap year
        if (year < MonthDay.MIN_YEAR || year > MonthDay.MAX_YEAR) {
            throw new DateTimeException("Invalid year value: " + year);
        }
        LocalDate date = monthDay.atYear(year);
        int month = date.getMonthValue();
        int day = date.getDayOfMonth();
        if (monthDay.getMonthValue() != month) {
            throw new DateTimeException("Invalid month value: " + monthDay.getMonthValue());
        }
        if (monthDay.getDayOfMonth() != day) {
            throw new DateTimeException("Invalid day of month: " + monthDay.getDayOfMonth());
        }
        switch (query) {
            case "Valentine's Day":
                return month == 2 && day == 14;
            // add more cases for other queries
            default:
                return false;
        }
    } catch (DateTimeException e) {
        System.err.println("Error: " + e.getMessage());
        throw e;
    }
}
```

In this version, the method first checks if the year is within the valid range of years for `MonthDay` objects (between `MonthDay.MIN_YEAR` and `MonthDay.MAX_YEAR`). If not, it throws a `DateTimeException` with an appropriate error message.

If the year is valid, the method proceeds to create a `LocalDate` object from the given `MonthDay` object and the year. It then checks if the month and day of the resulting `LocalDate` object match the corresponding values of the `MonthDay` object. If not, it throws a `DateTimeException` with an appropriate error message.

If the values are valid, the method proceeds to the `switch` statement to check the query. If the query matches, it returns `true`. Otherwise, it returns `false`.

If any exception is thrown during the execution of the method, it catches the exception, prints an error message to the standard error stream, and re-throws the exception.
------------------------------------------------------
