{"loop_id": 0, "unhandled_api_list": ["java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if parameterIndex does not correspond to a parameter marker in the SQL statement; if a database access error occurs or this method is called on a closed PreparedStatement for java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp) in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 1}
{"loop_id": 1, "unhandled_api_list": ["java.sql.ParameterMetaData.getParameterCount()", "java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs for java.sql.ParameterMetaData.getParameterCount() in the code snippet you provided, otherwise throw SQLException.", "Please check if parameterIndex does not correspond to a parameter marker in the SQL statement; if a database access error occurs or this method is called on a closed PreparedStatement for java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp) in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 2}
{"loop_id": 2, "unhandled_api_list": ["java.sql.PreparedStatement.getParameterMetaData()", "java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed PreparedStatement for java.sql.PreparedStatement.getParameterMetaData() in the code snippet you provided, otherwise throw SQLException.", "Please check if parameterIndex does not correspond to a parameter marker in the SQL statement; if a database access error occurs or this method is called on a closed PreparedStatement for java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp) in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 2}
{"loop_id": 3, "unhandled_api_list": ["java.sql.ParameterMetaData.getParameterCount()", "java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs for java.sql.ParameterMetaData.getParameterCount() in the code snippet you provided, otherwise throw SQLException.", "Please check if parameterIndex does not correspond to a parameter marker in the SQL statement; if a database access error occurs or this method is called on a closed PreparedStatement for java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp) in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 2}
{"loop_id": 4, "unhandled_api_list": ["java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if parameterIndex does not correspond to a parameter marker in the SQL statement; if a database access error occurs or this method is called on a closed PreparedStatement for java.sql.PreparedStatement.setTimestamp(int,java.sql.Timestamp) in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 1}
{"loop_id": 5, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
