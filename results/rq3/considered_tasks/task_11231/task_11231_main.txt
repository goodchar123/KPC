Please write a java method that Returns a module finder that locates the system modules.
Here's a Java method that returns a module finder that locates the system modules:

```java
import java.lang.module.ModuleFinder;

public class SystemModuleFinder {
    public static ModuleFinder getSystemModuleFinder() {
        return ModuleFinder.ofSystem();
    }
}
```

This method uses the `ModuleFinder.ofSystem()` method to create a module finder that locates the system modules. The `ModuleFinder` class is part of the Java Platform Module System (JPMS) introduced in Java 9, and it provides a way to locate and load modules.
------------------------------------------------------
Please check If denied by the security manager for java.lang.module.ModuleFinder.ofSystem() in the code snippet you provided, otherwise throw SecurityException.
Sure, here's the updated code snippet that checks if the security manager denies access to `ModuleFinder.ofSystem()` and throws a `SecurityException` in that case:

```java
import java.lang.module.ModuleFinder;
import java.security.AccessController;
import java.security.PrivilegedAction;

public class SystemModuleFinder {
    public static ModuleFinder getSystemModuleFinder() {
        SecurityManager sm = System.getSecurityManager();
        if (sm != null) {
            AccessController.doPrivileged((PrivilegedAction<Void>) () -> {
                sm.checkPermission(new RuntimePermission("accessSystemModules"));
                return null;
            });
        }
        return ModuleFinder.ofSystem();
    }
}
```

This code first checks if a security manager is installed using `System.getSecurityManager()`. If a security manager is present, it uses `AccessController.doPrivileged()` to execute a privileged action that checks if the security manager allows access to system modules using `sm.checkPermission(new RuntimePermission("accessSystemModules"))`. If the permission is granted, the method returns `ModuleFinder.ofSystem()`. Otherwise, it throws a `SecurityException`.
------------------------------------------------------
