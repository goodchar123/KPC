List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.awt.FontRenderContext.<init>(java.awt.geom.AffineTransform, boolean, boolean)`
2. `java.awt.font.TextLayout.<init>(java.lang.String, java.awt.Font, java.awt.font.FontRenderContext)`
3. `java.awt.font.TextLayout.getGlyphCount()`
4. `java.awt.font.TextLayout.getGlyphCharIndex(int)`
5. `java.lang.Character.UnicodeScript.of(int)`
6. `java.lang.Character.UnicodeScript.isComplex()`

 + From response, we get: ['java.awt.FontRenderContext.<init>(java.awt.geom.AffineTransform,boolean,boolean)', 'java.awt.font.TextLayout.<init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)', 'java.awt.font.TextLayout.getGlyphCount()', 'java.awt.font.TextLayout.getGlyphCharIndex(int)', 'java.lang.Character.UnicodeScript.of(int)', 'java.lang.Character.UnicodeScript.isComplex()']
------------------------------------------------------
Is the IllegalArgumentException handled or caught for java.lang.Character.UnicodeScript.of(int) in the code snippet? Answer in Yes or No only.
No. The `IllegalArgumentException` is not handled or caught in the code snippet.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.awt.FontRenderContext.<init>(java.awt.geom.AffineTransform, boolean, boolean)`
2. `java.awt.font.TextLayout.<init>(java.lang.String, java.awt.Font, java.awt.font.FontRenderContext)`
3. `java.awt.font.TextLayout.getGlyphCount()`
4. `java.awt.font.TextLayout.getGlyphCharIndex(int)`
5. `java.lang.Character.isValidCodePoint(int)`
6. `java.lang.Character.UnicodeScript.of(int).isComplex()`

 + From response, we get: ['java.awt.FontRenderContext.<init>(java.awt.geom.AffineTransform,boolean,boolean)', 'java.awt.font.TextLayout.<init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)', 'java.awt.font.TextLayout.getGlyphCount()', 'java.awt.font.TextLayout.getGlyphCharIndex(int)', 'java.lang.Character.isValidCodePoint(int)', 'java.lang.Character.UnicodeScript.of(int).isComplex()']
------------------------------------------------------
