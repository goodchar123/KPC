
Sure, here's an updated version of the Java method that checks if the year value is valid for `OffsetDateTime.withYear(int)` and throws a `DateTimeException` if it's invalid:

```java
public OffsetDateTime changeYear(OffsetDateTime dateTime, int year) {
    try {
        return dateTime.withYear(year);
    } catch (DateTimeException e) {
        throw new DateTimeException("Invalid year value: " + year, e);
    }
}
```

This method takes in an `OffsetDateTime` object and an integer value for the year. It then attempts to modify the year of the `OffsetDateTime` object using the `withYear()` method. If the year value is invalid, a `DateTimeException` is thrown with a message indicating the invalid year value. The original `DateTimeException` is included as the cause of the new exception for debugging purposes.
------------------------------------------------------
