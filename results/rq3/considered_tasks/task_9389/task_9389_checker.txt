List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.time.temporal.TemporalAccessor.isSupported(java.time.temporal.TemporalField)`
2. `java.time.temporal.TemporalAccessor.get(java.time.temporal.TemporalField)`
3. `java.time.temporal.ChronoField.ERA`
4. `java.time.chrono.IsoEra.CE`
5. `java.time.temporal.UnsupportedTemporalTypeException(java.lang.String)`

 + From response, we get: ['java.time.temporal.TemporalAccessor.isSupported(java.time.temporal.TemporalField)', 'java.time.temporal.TemporalAccessor.get(java.time.temporal.TemporalField)', 'java.time.temporal.ChronoField.ERA', 'java.time.chrono.IsoEra.CE', 'java.time.temporal.UnsupportedTemporalTypeException(java.lang.String)']
------------------------------------------------------
Is the DateTimeException handled or caught for java.time.temporal.TemporalAccessor.get(java.time.temporal.TemporalField) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the UnsupportedTemporalTypeException handled or caught for java.time.temporal.TemporalAccessor.get(java.time.temporal.TemporalField) in the code snippet? Answer in Yes or No only.
No, it is thrown in the else block.
------------------------------------------------------
Is the ArithmeticException handled or caught for java.time.temporal.TemporalAccessor.get(java.time.temporal.TemporalField) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `temporal.isSupported(java.time.temporal.TemporalField)`
2. `temporal.get(java.time.temporal.TemporalField)`
3. `temporal.get(java.time.temporal.TemporalField.ERA)`
4. `java.time.chrono.IsoEra.CE` 
5. `java.time.DateTimeException(String, Throwable)`
6. `java.lang.ArithmeticException(String)`
7. `java.time.temporal.UnsupportedTemporalTypeException(String)`

 + From response, we get: ['temporal.isSupported(java.time.temporal.TemporalField)', 'temporal.get(java.time.temporal.TemporalField)', 'temporal.get(java.time.temporal.TemporalField.ERA)', 'java.time.chrono.IsoEra.CE', 'java.time.DateTimeException(String,Throwable)', 'java.lang.ArithmeticException(String)', 'java.time.temporal.UnsupportedTemporalTypeException(String)']
------------------------------------------------------
