{"loop_id": 0, "unhandled_api_list": ["java.time.LocalDate.plus(java.time.temporal.TemporalAmount)", "java.time.LocalDate.plus(java.time.temporal.TemporalAmount)", "java.time.LocalTime.plus(java.time.temporal.TemporalAmount)", "java.time.LocalTime.plus(java.time.temporal.TemporalAmount)", "java.time.LocalDateTime.plus(java.time.temporal.TemporalAmount)", "java.time.LocalDateTime.plus(java.time.temporal.TemporalAmount)", "java.time.ZonedDateTime.plus(java.time.temporal.TemporalAmount)", "java.time.ZonedDateTime.plus(java.time.temporal.TemporalAmount)", "java.time.OffsetDateTime.plus(java.time.temporal.TemporalAmount)", "java.time.OffsetDateTime.plus(java.time.temporal.TemporalAmount)", "java.time.Instant.plus(java.time.temporal.TemporalAmount)", "java.time.Instant.plus(java.time.temporal.TemporalAmount)"], "num_of_unhandled_api": 12, "unhandled_exception_list": ["Please check if the addition cannot be made for java.time.LocalDate.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.LocalDate.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw ArithmeticException.", "Please check if the addition cannot be made for java.time.LocalTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.LocalTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw ArithmeticException.", "Please check if the addition cannot be made for java.time.LocalDateTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.LocalDateTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw ArithmeticException.", "Please check if the addition cannot be made for java.time.ZonedDateTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.ZonedDateTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw ArithmeticException.", "Please check if the addition cannot be made for java.time.OffsetDateTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.OffsetDateTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw ArithmeticException.", "Please check if the addition cannot be made for java.time.Instant.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.Instant.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw ArithmeticException."], "num_of_unhandled_exception": 12}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
