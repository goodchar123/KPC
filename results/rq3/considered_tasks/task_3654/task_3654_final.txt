
Sure, here's the updated code snippet that checks if an instance of the `XMLOutputFactory` cannot be loaded and throws a `FactoryConfigurationError` in that case:

```java
import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;
import java.io.Writer;

public class XmlWriter {
    public static XMLStreamWriter createXmlStreamWriter(Writer writer) throws XMLStreamException {
        XMLOutputFactory factory;
        try {
            factory = XMLOutputFactory.newInstance();
        } catch (XMLStreamException e) {
            throw new FactoryConfigurationError("Unable to load XML output factory", e);
        }
        return factory.createXMLStreamWriter(writer);
    }
}
```

This updated method uses a `try-catch` block to catch any `XMLStreamException` that may be thrown when trying to create a new instance of the `XMLOutputFactory`. If such an exception is caught, a new `FactoryConfigurationError` is thrown with a message indicating that the factory could not be loaded, and the original exception is included as the cause of the error. If no exception is caught, the method proceeds as before and returns a new `XMLStreamWriter` object that writes to the specified `Writer`.
------------------------------------------------------
