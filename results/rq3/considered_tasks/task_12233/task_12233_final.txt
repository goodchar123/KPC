
Sure, here's the updated code snippet that checks for various exceptions that may occur when loading the keystore:

```java
import java.io.FileInputStream;
import java.io.IOException;
import java.security.KeyStore;
import java.security.NoSuchAlgorithmException;
import java.security.UnrecoverableKeyException;
import java.security.cert.CertificateException;

public KeyStore loadKeystore(String keystorePath, String keystorePassword, String keystoreType) throws IOException, NoSuchAlgorithmException, CertificateException, UnrecoverableKeyException {
    // Load the keystore file
    FileInputStream fis = new FileInputStream(keystorePath);

    // Create a keystore object of the appropriate type
    KeyStore keystore = KeyStore.getInstance(keystoreType);

    // Load the keystore object with the keystore file and password
    try {
        keystore.load(fis, keystorePassword.toCharArray());
    } catch (IOException e) {
        throw new IOException("Error loading keystore: " + e.getMessage());
    } catch (NoSuchAlgorithmException e) {
        throw new NoSuchAlgorithmException("Algorithm used to check the integrity of the keystore cannot be found: " + e.getMessage());
    } catch (CertificateException e) {
        throw new CertificateException("Error loading certificates in the keystore: " + e.getMessage());
    } catch (UnrecoverableKeyException e) {
        throw new UnrecoverableKeyException("Incorrect password for keystore: " + e.getMessage());
    }

    // Close the input stream
    try {
        fis.close();
    } catch (IOException e) {
        throw new IOException("Error closing input stream: " + e.getMessage());
    }

    // Return the loaded keystore object
    return keystore;
}
```

This code uses `try-catch` blocks to catch various exceptions that may occur when loading the keystore. If an exception is caught, it is re-thrown as a new exception with a more descriptive error message. The exceptions that are checked for include:

- `IOException`: If there is an I/O or format problem with the keystore data, or if a password is required but not given.
- `NoSuchAlgorithmException`: If the algorithm used to check the integrity of the keystore cannot be found.
- `CertificateException`: If any of the certificates in the keystore could not be loaded.
- `UnrecoverableKeyException`: If the given password was incorrect.
------------------------------------------------------
