
Sure, here's an updated version of the Java method that includes the checks you requested:

```java
import java.io.*;
import java.util.zip.*;

public static InputStream getZipEntryInputStream(String zipFilePath, String entryName) throws IOException {
    ZipFile zipFile = new ZipFile(zipFilePath);
    ZipEntry entry = zipFile.getEntry(entryName);
    if (entry == null) {
        zipFile.close();
        throw new IllegalArgumentException("Entry not found in zip file: " + entryName);
    }
    InputStream inputStream = null;
    try {
        inputStream = zipFile.getInputStream(entry);
    } catch (ZipException e) {
        zipFile.close();
        throw e;
    }
    if (inputStream == null) {
        zipFile.close();
        throw new IllegalStateException("Input stream is null for zip entry: " + entryName);
    }
    return inputStream;
}
```

This updated method first checks if the specified entry exists in the zip file. If it does not, the method closes the zip file and throws an IllegalArgumentException.

Next, the method attempts to get an input stream for the specified entry. If a ZIP format error occurs, the method closes the zip file and throws a ZipException.

Finally, the method checks if the input stream is null. If it is, the method closes the zip file and throws an IllegalStateException.

Note that this method still throws an IOException if there is an error reading the zip file. You should handle this exception appropriately in your code.
------------------------------------------------------
