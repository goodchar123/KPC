{"loop_id": 0, "unhandled_api_list": ["java.nio.channels.Selector.open()", "java.nio.channels.SelectionKey.isReadable()", "java.nio.channels.SelectionKey.isWritable()", "java.nio.ByteBuffer.allocate(int)", "java.nio.channels.SocketChannel.read(java.nio.ByteBuffer)", "java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check If an I/O error occurs for java.nio.channels.Selector.open() in the code snippet you provided, otherwise throw IOException.", "Please check If this key has been cancelled for java.nio.channels.SelectionKey.isReadable() in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If this key has been cancelled for java.nio.channels.SelectionKey.isWritable() in the code snippet you provided, otherwise throw CancelledKeyException.", "Please check If the capacity is a negative integer for java.nio.ByteBuffer.allocate(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check If this channel is not yet connected for java.nio.channels.SocketChannel.read(java.nio.ByteBuffer) in the code snippet you provided, otherwise throw NotYetConnectedException.", "Please check If this channel is not yet connected for java.nio.channels.SocketChannel.write(java.nio.ByteBuffer) in the code snippet you provided, otherwise throw NotYetConnectedException."], "num_of_unhandled_exception": 6}
{"loop_id": 1, "unhandled_api_list": ["java.nio.channels.Selector.select()", "java.nio.channels.SocketChannel.read(java.nio.ByteBuffer)", "java.nio.channels.SocketChannel.read(java.nio.ByteBuffer)", "java.nio.channels.SocketChannel.read(java.nio.ByteBuffer)", "java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)", "java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)", "java.nio.channels.SocketChannel.write(java.nio.ByteBuffer)"], "num_of_unhandled_api": 7, "unhandled_exception_list": ["Please check If this selector is closed for java.nio.channels.Selector.select() in the code snippet you provided, otherwise throw ClosedSelectorException.", "Please check If this channel is closed for java.nio.channels.SocketChannel.read(java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If another thread closes this channel          while the read operation is in progress for java.nio.channels.SocketChannel.read(java.nio.ByteBuffer) in the code snippet you provided, otherwise throw AsynchronousCloseException.", "Please check If another thread interrupts the current thread          while the read operation is in progress, thereby          closing the channel and setting the current thread's          interrupt status for java.nio.channels.SocketChannel.read(java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ClosedByInterruptException.", "Please check If this channel is closed for java.nio.channels.SocketChannel.write(java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If another thread closes this channel          while the write operation is in progress for java.nio.channels.SocketChannel.write(java.nio.ByteBuffer) in the code snippet you provided, otherwise throw AsynchronousCloseException.", "Please check If another thread interrupts the current thread          while the write operation is in progress, thereby          closing the channel and setting the current thread's          interrupt status for java.nio.channels.SocketChannel.write(java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ClosedByInterruptException."], "num_of_unhandled_exception": 7}
{"loop_id": 2, "unhandled_api_list": ["java.util.Set.remove(java.lang.Object)", "java.util.Set.remove(java.lang.Object)", "java.util.Set.remove(java.lang.Object)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this set (optional) for java.util.Set.remove(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         set does not permit null elements (optional) for java.util.Set.remove(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the remove operation         is not supported by this set for java.util.Set.remove(java.lang.Object) in the code snippet you provided, otherwise throw UnsupportedOperationException."], "num_of_unhandled_exception": 3}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
