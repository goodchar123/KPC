{"loop_id": 0, "unhandled_api_list": ["java.time.chrono.JapaneseDate.of(java.time.chrono.JapaneseEra,int,int,int)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if the value of any field is out of range,  or if the day of month is invalid for the month year,  or if the date is not a Japanese era for java.time.chrono.JapaneseDate.of(java.time.chrono.JapaneseEra,int,int,int) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 1}
{"loop_id": 1, "unhandled_api_list": ["java.time.chrono.JapaneseEra.of(int)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if the value is invalid for java.time.chrono.JapaneseEra.of(int) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 1}
{"loop_id": 2, "unhandled_api_list": ["java.time.chrono.JapaneseEra.of(int)", "java.time.chrono.JapaneseDate.of(java.time.chrono.JapaneseEra,int,int,int)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if the value is invalid for java.time.chrono.JapaneseEra.of(int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the value of any field is out of range,  or if the day of month is invalid for the month year,  or if the date is not a Japanese era for java.time.chrono.JapaneseDate.of(java.time.chrono.JapaneseEra,int,int,int) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 2}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
