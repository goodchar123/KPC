{"loop_id": 0, "unhandled_api_list": ["java.sql.Connection.createSQLXML()", "java.sql.SQLXML.setString(java.lang.String)", "java.sql.SQLXML.setString(java.lang.String)", "java.sql.PreparedStatement.setSQLXML(int,java.sql.SQLXML)", "java.sql.PreparedStatement.executeUpdate()"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if the JDBC driver does not support this data type for java.sql.Connection.createSQLXML() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException.", "Please check if there is an error processing the XML value.   The getCause() method of the exception may provide a more detailed exception, for example,   if the stream does not contain valid characters.   An exception is thrown if the state is not writable. for java.sql.SQLXML.setString(java.lang.String) in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.SQLXML.setString(java.lang.String) in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException.", "Please check if the JDBC driver does not support this method for java.sql.PreparedStatement.setSQLXML(int,java.sql.SQLXML) in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException.", "Please check when the driver has determined that the timeout value that was specified by the setQueryTimeout method has been exceeded and has at least attempted to cancel the currently running Statement for java.sql.PreparedStatement.executeUpdate() in the code snippet you provided, otherwise throw SQLTimeoutException."], "num_of_unhandled_exception": 5}
{"loop_id": 1, "unhandled_api_list": ["java.sql.Connection.prepareStatement(java.lang.String)", "java.sql.Connection.getMetaData()", "java.sql.Connection.createSQLXML()", "java.sql.SQLXML.setString(java.lang.String)", "java.sql.PreparedStatement.setSQLXML(int,java.sql.SQLXML)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed connection for java.sql.Connection.prepareStatement(java.lang.String) in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed connection for java.sql.Connection.getMetaData() in the code snippet you provided, otherwise throw SQLException.", "Please check if an object that implements the SQLXML interface can not be constructed, this method is called on a closed connection or a database access error occurs. for java.sql.Connection.createSQLXML() in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.SQLXML.setString(java.lang.String) in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException.", "Please check if parameterIndex does not correspond to a parameter marker in the SQL statement; if a database access error occurs;  this method is called on a closed PreparedStatement or the java.xml.transform.Result,  Writer or OutputStream has not been closed for the SQLXML object for java.sql.PreparedStatement.setSQLXML(int,java.sql.SQLXML) in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 5}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
