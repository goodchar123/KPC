
Sure, here's an updated version of the Java method that includes the requested checks:

```java
public static Object getArrayElement(Object array, int index) {
    if (array == null) {
        throw new NullPointerException("Array object cannot be null");
    }
    if (!array.getClass().isArray()) {
        throw new IllegalArgumentException("Object is not an array");
    }
    int length = Array.getLength(array);
    if (index < 0 || index >= length) {
        throw new ArrayIndexOutOfBoundsException("Index is out of bounds");
    }
    return Array.get(array, index);
}
```

This updated method first checks if the array object is null, and throws a `NullPointerException` if it is. It then checks if the object is an array, and throws an `IllegalArgumentException` if it is not. Finally, it checks if the index is within the bounds of the array, and throws an `ArrayIndexOutOfBoundsException` if it is not.

If all checks pass, the method uses the `Array.get()` method to retrieve the value of the indexed component in the array object, and returns it as an `Object`.
------------------------------------------------------
