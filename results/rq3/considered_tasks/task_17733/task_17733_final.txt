
Here's an updated version of the Java method that checks if the name is already bound and if the object has all mandatory attributes before binding it:

```java
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NameAlreadyBoundException;
import javax.naming.InvalidAttributesException;
import javax.naming.NamingException;

public class JndiExample {
    public void bindObject(String name, Object obj) throws NamingException {
        // Create a JNDI context
        Context ctx = new InitialContext();

        // Check if the name is already bound
        if (ctx.lookup(name) != null) {
            throw new NameAlreadyBoundException("Name already bound: " + name);
        }

        // Check if the object has all mandatory attributes
        // (replace this with your own validation logic)
        if (obj == null) {
            throw new InvalidAttributesException("Object is null");
        }

        // Bind the object to the name in the context
        ctx.bind(name, obj);

        // Close the context
        ctx.close();
    }
}
```

This updated method first checks if the name is already bound by calling the `lookup` method on the context. If the name is already bound, it throws a `NameAlreadyBoundException`. 

Next, it checks if the object has all mandatory attributes. In this example, I've simply checked if the object is null, but you can replace this with your own validation logic. If the object is missing mandatory attributes, it throws an `InvalidAttributesException`.

If both checks pass, the method binds the object to the name in the context using the `bind` method, and then closes the context using the `close` method.
------------------------------------------------------
