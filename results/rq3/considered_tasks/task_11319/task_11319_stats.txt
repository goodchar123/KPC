{"loop_id": 0, "unhandled_api_list": ["java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check If a security manager is present, and the caller's class loader          is not null and is not the same as or an ancestor of the          system class loader, and the caller does not have the          RuntimePermission(\"getClassLoader\") for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw SecurityException.", "Please check If invoked recursively during the construction of the class          loader specified by the \"java.system.class.loader\"          property. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check If the system property \"java.system.class.loader\"          is defined but the named class could not be loaded, the          provider class does not define the required constructor, or an          exception is thrown by that constructor when it is invoked. The          underlying cause of the error can be retrieved via the          Throwable.getCause() method. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw Error."], "num_of_unhandled_exception": 3}
{"loop_id": 1, "unhandled_api_list": ["java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.loadClass(java.lang.String)", "java.lang.Class.getConstructor(java.lang.Class...)", "java.lang.Class.getConstructor(java.lang.Class...)", "java.lang.System.getProperty(java.lang.String)", "java.lang.System.getProperty(java.lang.String)", "java.lang.System.getProperty(java.lang.String)"], "num_of_unhandled_api": 8, "unhandled_exception_list": ["Please check If a security manager is present, and the caller's class loader          is not null and is not the same as or an ancestor of the          system class loader, and the caller does not have the          RuntimePermission(\"getClassLoader\") for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw SecurityException.", "Please check If the system property \"java.system.class.loader\"          is defined but the named class could not be loaded, the          provider class does not define the required constructor, or an          exception is thrown by that constructor when it is invoked. The          underlying cause of the error can be retrieved via the          Throwable.getCause() method. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw Error.", "Please check If the class was not found for java.lang.ClassLoader.loadClass(java.lang.String) in the code snippet you provided, otherwise throw ClassNotFoundException.", "Please check if a matching method is not found. for java.lang.Class.getConstructor(java.lang.Class...) in the code snippet you provided, otherwise throw NoSuchMethodException.", "Please check If a security manager, s, is present and         the caller's class loader is not the same as or an         ancestor of the class loader for the current class and         invocation of s.checkPackageAccess() denies access to the package         of this class. for java.lang.Class.getConstructor(java.lang.Class...) in the code snippet you provided, otherwise throw SecurityException.", "Please check if a security manager exists and its             checkPropertyAccess method doesn't allow             access to the specified system property. for java.lang.System.getProperty(java.lang.String) in the code snippet you provided, otherwise throw SecurityException.", "Please check if key is null. for java.lang.System.getProperty(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if key is empty. for java.lang.System.getProperty(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 8}
{"loop_id": 2, "unhandled_api_list": ["java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.System.getProperty(java.lang.String)", "java.lang.System.getProperty(java.lang.String)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check If a security manager is present, and the caller's class loader          is not null and is not the same as or an ancestor of the          system class loader, and the caller does not have the          RuntimePermission(\"getClassLoader\") for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw SecurityException.", "Please check If invoked recursively during the construction of the class          loader specified by the \"java.system.class.loader\"          property. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check If the system property \"java.system.class.loader\"          is defined but the named class could not be loaded, the          provider class does not define the required constructor, or an          exception is thrown by that constructor when it is invoked. The          underlying cause of the error can be retrieved via the          Throwable.getCause() method. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw Error.", "Please check if key is null. for java.lang.System.getProperty(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if key is empty. for java.lang.System.getProperty(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 5}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
