{"loop_id": 0, "unhandled_api_list": ["javax.crypto.KeyGenerator.init(int)", "java.security.KeyPairGenerator.getInstance(java.lang.String)", "java.security.KeyPairGenerator.getInstance(java.lang.String)", "java.security.KeyPairGenerator.initialize(int)", "javax.crypto.Cipher.getInstance(java.lang.String)", "javax.crypto.Cipher.getInstance(java.lang.String)", "javax.crypto.Cipher.init(int,java.security.Key)", "javax.crypto.Cipher.init(int,java.security.Key)", "javax.crypto.Cipher.doFinal(byte[])", "javax.crypto.Cipher.doFinal(byte[])", "javax.crypto.Cipher.doFinal(byte[])", "javax.crypto.Cipher.doFinal(byte[])", "java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)", "java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)", "java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)"], "num_of_unhandled_api": 15, "unhandled_exception_list": ["Please check if the keysize is wrong or not supported. for javax.crypto.KeyGenerator.init(int) in the code snippet you provided, otherwise throw InvalidParameterException.", "Please check if no Provider supports a         KeyPairGeneratorSpi implementation for the         specified algorithm for java.security.KeyPairGenerator.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if algorithm is null for java.security.KeyPairGenerator.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the keysize is not supported by this KeyPairGenerator object. for java.security.KeyPairGenerator.initialize(int) in the code snippet you provided, otherwise throw InvalidParameterException.", "Please check if transformation         is null, empty, in an invalid format,         or if no Provider supports a CipherSpi         implementation for the specified algorithm for javax.crypto.Cipher.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if transformation         contains a padding scheme that is not available for javax.crypto.Cipher.getInstance(java.lang.String) in the code snippet you provided, otherwise throw NoSuchPaddingException.", "Please check if the given key is inappropriate for initializing this cipher, or requires algorithm parameters that cannot be determined from the given key, or if the given key has a keysize that exceeds the maximum allowable keysize (as determined from the configured jurisdiction policy files). for javax.crypto.Cipher.init(int,java.security.Key) in the code snippet you provided, otherwise throw InvalidKeyException.", "Please check if opmode is WRAP_MODE or UNWRAP_MODE but the mode is not implemented by the underlying CipherSpi. for javax.crypto.Cipher.init(int,java.security.Key) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if this cipher is in a wrong state (e.g., has not been initialized) for javax.crypto.Cipher.doFinal(byte[]) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if this cipher is a block cipher, no padding has been requested (only in encryption mode), and the total input length of the data processed by this cipher is not a multiple of block size; or if this encryption algorithm is unable to process the input data provided. for javax.crypto.Cipher.doFinal(byte[]) in the code snippet you provided, otherwise throw IllegalBlockSizeException.", "Please check if this cipher is in decryption mode, and (un)padding has been requested, but the decrypted data is not bounded by the appropriate padding bytes for javax.crypto.Cipher.doFinal(byte[]) in the code snippet you provided, otherwise throw BadPaddingException.", "Please check if this cipher is decrypting in an AEAD mode (such as GCM/CCM), and the received authentication tag does not match the calculated value for javax.crypto.Cipher.doFinal(byte[]) in the code snippet you provided, otherwise throw AEADBadTagException.", "Please check if copying would cause             access of data outside array bounds. for java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException.", "Please check if an element in the src             array could not be stored into the dest array             because of a type mismatch. for java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int) in the code snippet you provided, otherwise throw ArrayStoreException.", "Please check if either src or             dest is null. for java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int) in the code snippet you provided, otherwise throw NullPointerException."], "num_of_unhandled_exception": 15}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
