{"loop_id": 0, "unhandled_api_list": ["java.util.List.indexOf(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.remove(int)", "java.util.List.remove(int)"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this list         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the remove operation         is not supported by this list for java.util.List.remove(int) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the index is out of range         (index < 0 || index >= size()) for java.util.List.remove(int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException."], "num_of_unhandled_exception": 4}
{"loop_id": 1, "unhandled_api_list": ["java.util.List.contains(java.lang.Object)", "java.util.List.contains(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.get(int)", "java.util.List.remove(java.lang.Object)", "java.util.List.remove(java.lang.Object)"], "num_of_unhandled_api": 7, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the index is out of range         (index < 0 || index >= size()) for java.util.List.get(int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException.", "Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException."], "num_of_unhandled_exception": 7}
{"loop_id": 2, "unhandled_api_list": ["java.util.List.contains(java.lang.Object)", "java.util.List.contains(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.remove(java.lang.Object)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException."], "num_of_unhandled_exception": 5}
{"loop_id": 3, "unhandled_api_list": ["java.util.List.contains(java.lang.Object)", "java.util.List.contains(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.remove(java.lang.Object)", "java.util.List.remove(java.lang.Object)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException."], "num_of_unhandled_exception": 6}
{"loop_id": 4, "unhandled_api_list": ["java.util.List.contains(java.lang.Object)", "java.util.List.contains(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.remove(java.lang.Object)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException."], "num_of_unhandled_exception": 5}
{"loop_id": 5, "unhandled_api_list": ["java.util.List.contains(java.lang.Object)", "java.util.List.contains(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.remove(java.lang.Object)", "java.util.List.remove(java.lang.Object)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException."], "num_of_unhandled_exception": 6}
{"loop_id": 6, "unhandled_api_list": ["java.util.List.contains(java.lang.Object)", "java.util.List.contains(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.indexOf(java.lang.Object)", "java.util.List.remove(java.lang.Object)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements         (optional) for java.util.List.indexOf(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException."], "num_of_unhandled_exception": 5}
{"loop_id": 7, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
