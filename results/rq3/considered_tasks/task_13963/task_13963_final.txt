
Sure, here's an updated version of the Java method that checks for invalid parameters and throws the appropriate exceptions:

```java
import java.util.Calendar;
import java.util.Locale;

public class CalendarUtils {
    
    public static String getCalendarFieldValue(Calendar calendar, int field, int style, Locale locale) {
        if (calendar == null || locale == null) {
            throw new NullPointerException("Calendar and locale cannot be null");
        }
        if (field < 0 || field >= Calendar.FIELD_COUNT) {
            throw new ArrayIndexOutOfBoundsException("Invalid field parameter");
        }
        if (style < 0 || style > Calendar.LONG_FORMAT) {
            throw new IllegalArgumentException("Invalid style parameter");
        }
        if (!calendar.isLenient()) {
            try {
                calendar.get(field);
            } catch (IllegalArgumentException e) {
                throw new IllegalArgumentException("Calendar has invalid field value");
            }
        }
        return calendar.getDisplayName(field, style, locale);
    }
    
}
```

This updated method first checks if the `calendar` or `locale` parameter is null, and throws a `NullPointerException` if either is null.

Next, it checks if the `field` parameter is out of range. The `field` parameter must be between 0 and `Calendar.FIELD_COUNT - 1`. If the parameter is out of range, the method throws an `ArrayIndexOutOfBoundsException`.

It also checks if the `style` parameter is invalid. The `style` parameter must be between 0 and `Calendar.LONG_FORMAT`. If the parameter is invalid, the method throws an `IllegalArgumentException`.

If the `calendar` object is non-lenient, the method attempts to retrieve the value of the specified field using the `get` method. If the value is invalid, an `IllegalArgumentException` is thrown.

Finally, if all parameters are valid, the method calls the `getDisplayName` method on the `calendar` object and returns the string representation of the calendar field value in the given style and locale.

You can call this method like this:

```java
Calendar calendar = Calendar.getInstance();
int month = calendar.get(Calendar.MONTH);
String monthString = CalendarUtils.getCalendarFieldValue(calendar, Calendar.MONTH, Calendar.LONG, Locale.US);
System.out.println("Month: " + monthString);
```

This will output something like "Month: January" if the current month is January and the locale is set to US. If any of the parameters are invalid or null, the method will throw the appropriate exception.
------------------------------------------------------
