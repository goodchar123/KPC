
You can modify the code snippet I provided earlier to include the exception handling you mentioned. Here's the updated code:

```java
import java.util.InputMismatchException;
import java.util.NoSuchElementException;
import java.util.Scanner;

public class ReadInt {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a 32-bit integer: ");
        try {
            int num = scanner.nextInt();
            System.out.println("You entered: " + num);
        } catch (InputMismatchException e) {
            System.out.println("Invalid input. Please enter a valid 32-bit integer.");
        } catch (NoSuchElementException e) {
            System.out.println("Input exhausted. Please enter a 32-bit integer.");
        } catch (IllegalStateException e) {
            System.out.println("Scanner is closed. Please create a new scanner object.");
        }
    }
}
```

In this updated code, we have added try-catch blocks to handle the exceptions that can be thrown by the `nextInt()` method of the `Scanner` class. 

If the input does not match the integer regular expression or is out of range for `nextInt()`, an `InputMismatchException` is thrown. We catch this exception and print an error message to the console.

If the input is exhausted, a `NoSuchElementException` is thrown. We catch this exception and print an error message to the console.

If the scanner is closed, an `IllegalStateException` is thrown. We catch this exception and print an error message to the console.
------------------------------------------------------
