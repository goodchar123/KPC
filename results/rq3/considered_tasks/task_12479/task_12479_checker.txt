List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `sun.misc.Unsafe.getUnsafe()`
2. `java.lang.Class.getDeclaredFields()`
3. `sun.misc.Unsafe.objectFieldOffset(java.lang.reflect.Field)` 
4. `sun.misc.Unsafe.putObject(java.lang.Object, long, java.lang.Object)`

 + From response, we get: ['sun.misc.Unsafe.getUnsafe()', 'java.lang.Class.getDeclaredFields()', 'sun.misc.Unsafe.objectFieldOffset(java.lang.reflect.Field)', 'sun.misc.Unsafe.putObject(java.lang.Object,long,java.lang.Object)']
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.Class.getDeclaredFields() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `System.getSecurityManager()`
2. `Reflection.getCallerClass()`
3. `ClassLoader.getClassLoader()`
4. `SecurityManager.checkPermission(java.security.Permission)`
5. `ClassLoader.isAncestorOf(java.lang.ClassLoader)`
6. `SecurityManager.checkPackageAccess(java.lang.String)`
7. `Unsafe.getUnsafe()`
8. `Unsafe.objectFieldOffset(java.lang.reflect.Field)` 
9. `Unsafe.putObject(java.lang.Object, long, java.lang.Object)`

 + From response, we get: ['System.getSecurityManager()', 'Reflection.getCallerClass()', 'ClassLoader.getClassLoader()', 'SecurityManager.checkPermission(java.security.Permission)', 'ClassLoader.isAncestorOf(java.lang.ClassLoader)', 'SecurityManager.checkPackageAccess(java.lang.String)', 'Unsafe.getUnsafe()', 'Unsafe.objectFieldOffset(java.lang.reflect.Field)', 'Unsafe.putObject(java.lang.Object,long,java.lang.Object)']
------------------------------------------------------
