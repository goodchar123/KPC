{"loop_id": 0, "unhandled_api_list": ["javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)"], "num_of_unhandled_api": 7, "unhandled_exception_list": ["Please check if formatName is null. for javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression, or does not support the requested mode. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if mode is not one of the modes listed above. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the set of legal compression types is non null and the current compression type is null. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if quality is not between 0 and 1, inclusive. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 7}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
