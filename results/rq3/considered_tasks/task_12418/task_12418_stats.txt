{"loop_id": 0, "unhandled_api_list": ["java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)", "java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)", "java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType)", "java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType)"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if a security manager is present and it                              refuses access for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw SecurityException.", "Please check if any argument is null for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if newType is a null reference for java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the conversion cannot be made for java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw WrongMethodTypeException."], "num_of_unhandled_exception": 4}
{"loop_id": 1, "unhandled_api_list": ["java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[])", "java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[])", "java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)", "java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)", "java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)", "java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)", "java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType)", "java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType)"], "num_of_unhandled_api": 8, "unhandled_exception_list": ["Please check if rtype or ptypes or any element of ptypes is null for java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[]) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if any element of ptypes is void.class for java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class[]) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the method does not exist for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw NoSuchMethodException.", "Please check if access checking fails,                                or if the method is static,                                or if the method's variable arity modifier bit                                is set and asVarargsCollector fails for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw IllegalAccessException.", "Please check if a security manager is present and it                              refuses access for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw SecurityException.", "Please check if any argument is null for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if newType is a null reference for java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the conversion cannot be made for java.lang.invoke.MethodHandle.asType(java.lang.invoke.MethodType) in the code snippet you provided, otherwise throw WrongMethodTypeException."], "num_of_unhandled_exception": 8}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
