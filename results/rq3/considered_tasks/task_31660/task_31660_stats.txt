{"loop_id": 0, "unhandled_api_list": ["javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File)", "javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File)", "javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File)", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)"], "num_of_unhandled_api": 11, "unhandled_exception_list": ["Please check if the File does not point         to valid audio file data recognized by the system for javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File) in the code snippet you provided, otherwise throw UnsupportedAudioFileException.", "Please check if an I/O exception occurs for javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File) in the code snippet you provided, otherwise throw IOException.", "Please check if file is null for javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if a clip object is not available due to         resource restrictions for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw LineUnavailableException.", "Please check if a clip object is not available due to         security restrictions for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the system does not support at least         one clip instance through any installed mixer for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the line cannot be opened due to         resource restrictions for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw LineUnavailableException.", "Please check if an I/O exception occurs during reading of the         stream for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IOException.", "Please check if the stream's audio format is not         fully specified or invalid for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the line is already open for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the line cannot be opened due to security         restrictions for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 11}
{"loop_id": 0, "unhandled_api_list": ["javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File)", "javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File)", "javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File)", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)"], "num_of_unhandled_api": 11, "unhandled_exception_list": ["Please check if the File does not point         to valid audio file data recognized by the system for javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File) in the code snippet you provided, otherwise throw UnsupportedAudioFileException.", "Please check if an I/O exception occurs for javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File) in the code snippet you provided, otherwise throw IOException.", "Please check if file is null for javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if a clip object is not available due to         resource restrictions for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw LineUnavailableException.", "Please check if a clip object is not available due to         security restrictions for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the system does not support at least         one clip instance through any installed mixer for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the line cannot be opened due to         resource restrictions for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw LineUnavailableException.", "Please check if an I/O exception occurs during reading of the         stream for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IOException.", "Please check if the stream's audio format is not         fully specified or invalid for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the line is already open for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the line cannot be opened due to security         restrictions for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 11}
{"loop_id": 1, "unhandled_api_list": ["java.io.File.isFile()", "javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File)", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)"], "num_of_unhandled_api": 7, "unhandled_exception_list": ["Please check If a security manager exists and its SecurityManager.checkRead(java.lang.String)          method denies read access to the file for java.io.File.isFile() in the code snippet you provided, otherwise throw SecurityException.", "Please check if file is null for javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if a clip object is not available due to         security restrictions for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the system does not support at least         one clip instance through any installed mixer for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the line cannot be opened due to         resource restrictions for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw LineUnavailableException.", "Please check if the line is already open for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the line cannot be opened due to security         restrictions for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 7}
{"loop_id": 2, "unhandled_api_list": ["java.io.File.exists()", "java.io.File.isFile()", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.AudioSystem.getClip()"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check If a security manager exists and its SecurityManager.checkRead(java.lang.String)          method denies read access to the file or directory for java.io.File.exists() in the code snippet you provided, otherwise throw SecurityException.", "Please check If a security manager exists and its SecurityManager.checkRead(java.lang.String)          method denies read access to the file for java.io.File.isFile() in the code snippet you provided, otherwise throw SecurityException.", "Please check if a clip object is not available due to         security restrictions for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the system does not support at least         one clip instance through any installed mixer for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 4}
{"loop_id": 3, "unhandled_api_list": ["java.io.File.exists()", "java.io.File.isFile()", "javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File)", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.AudioSystem.getClip()", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)", "javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream)"], "num_of_unhandled_api": 8, "unhandled_exception_list": ["Please check If a security manager exists and its SecurityManager.checkRead(java.lang.String)          method denies read access to the file or directory for java.io.File.exists() in the code snippet you provided, otherwise throw SecurityException.", "Please check If a security manager exists and its SecurityManager.checkRead(java.lang.String)          method denies read access to the file for java.io.File.isFile() in the code snippet you provided, otherwise throw SecurityException.", "Please check if file is null for javax.sound.sampled.AudioSystem.getAudioInputStream(java.io.File) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if a clip object is not available due to         security restrictions for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw SecurityException.", "Please check if the system does not support at least         one clip instance through any installed mixer for javax.sound.sampled.AudioSystem.getClip() in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an I/O exception occurs during reading of the         stream for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IOException.", "Please check if the stream's audio format is not         fully specified or invalid for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the line is already open for javax.sound.sampled.Clip.open(javax.sound.sampled.AudioInputStream) in the code snippet you provided, otherwise throw IllegalStateException."], "num_of_unhandled_exception": 8}
{"loop_id": 4, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
