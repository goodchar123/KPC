
Here's the updated Java method that checks if the arguments array is of the expected type and if the result is null before calling `MessageFormat.format()`:

```java
public static void formatArray(Object[] array, MessageFormat messageFormat, StringBuffer stringBuffer) {
    Object[] formattedArray = new Object[array.length];
    for (int i = 0; i < array.length; i++) {
        if (!messageFormat.getFormatsByArgumentIndex()[i].getClass().isInstance(array[i])) {
            throw new IllegalArgumentException("Argument " + i + " is not of the expected type.");
        }
        formattedArray[i] = messageFormat.format(array[i]);
    }
    String result = messageFormat.format(formattedArray, stringBuffer, null);
    if (result == null) {
        throw new NullPointerException("Formatted result is null.");
    }
}
```

This updated method first checks if each argument in the `array` is of the expected type by comparing it with the format element's class using `getClass().isInstance()`. If an argument is not of the expected type, it throws an `IllegalArgumentException` with a message indicating which argument is not of the expected type.

After formatting each argument, the method calls `MessageFormat.format()` with `formattedArray` as the first parameter, `stringBuffer` as the second parameter, and `null` as the third parameter. It then checks if the result is null, and if so, throws a `NullPointerException` with a message indicating that the formatted result is null.
------------------------------------------------------
