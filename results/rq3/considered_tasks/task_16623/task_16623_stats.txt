{"loop_id": 0, "unhandled_api_list": ["javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)", "javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)", "javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if the dst buffer is read only. for javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ReadOnlyBufferException.", "Please check if either src or dst          is null. for javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the client/server mode          has not yet been set. for javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) in the code snippet you provided, otherwise throw IllegalStateException."], "num_of_unhandled_exception": 3}
{"loop_id": 1, "unhandled_api_list": ["javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)", "java.nio.ByteBuffer.allocate(int)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if the dst buffer is read only. for javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ReadOnlyBufferException.", "Please check If the capacity is a negative integer for java.nio.ByteBuffer.allocate(int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 2}
{"loop_id": 2, "unhandled_api_list": ["javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if the dst buffer is read only. for javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ReadOnlyBufferException."], "num_of_unhandled_exception": 1}
{"loop_id": 3, "unhandled_api_list": ["javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)", "java.nio.ByteBuffer.allocate(int)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if the dst buffer is read only. for javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ReadOnlyBufferException.", "Please check If the capacity is a negative integer for java.nio.ByteBuffer.allocate(int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 2}
{"loop_id": 4, "unhandled_api_list": ["javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if the dst buffer is read only. for javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ReadOnlyBufferException."], "num_of_unhandled_exception": 1}
{"loop_id": 5, "unhandled_api_list": ["javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)", "java.nio.ByteBuffer.allocate(int)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if the dst buffer is read only. for javax.net.ssl.SSLEngine.wrap(java.nio.ByteBuffer,java.nio.ByteBuffer) in the code snippet you provided, otherwise throw ReadOnlyBufferException.", "Please check If the capacity is a negative integer for java.nio.ByteBuffer.allocate(int) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 2}
{"loop_id": 6, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
