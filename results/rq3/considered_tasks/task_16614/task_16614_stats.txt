{"loop_id": 0, "unhandled_api_list": ["java.net.Socket.getInputStream()", "java.io.InputStream.read(byte[])", "java.net.ServerSocket.setReuseAddress(boolean)", "java.net.ServerSocket.bind(java.net.SocketAddress)", "java.net.ServerSocket.bind(java.net.SocketAddress)", "java.net.ServerSocket.accept()", "java.net.ServerSocket.accept()", "java.net.ServerSocket.accept()"], "num_of_unhandled_api": 8, "unhandled_exception_list": ["Please check if an I/O error occurs when creating the             input stream, the socket is closed, the socket is             not connected, or the socket input has been shutdown             using shutdownInput() for java.net.Socket.getInputStream() in the code snippet you provided, otherwise throw IOException.", "Please check if b is null. for java.io.InputStream.read(byte[]) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if an error occurs enabling or            disabling the SO_REUSEADDR            socket option, or the socket is closed. for java.net.ServerSocket.setReuseAddress(boolean) in the code snippet you provided, otherwise throw SocketException.", "Please check if a SecurityManager is present and its checkListen method doesn't allow the operation. for java.net.ServerSocket.bind(java.net.SocketAddress) in the code snippet you provided, otherwise throw SecurityException.", "Please check if endpoint is a          SocketAddress subclass not supported by this socket for java.net.ServerSocket.bind(java.net.SocketAddress) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if a security manager exists and its             checkAccept method doesn't allow the operation. for java.net.ServerSocket.accept() in the code snippet you provided, otherwise throw SecurityException.", "Please check if a timeout was previously set with setSoTimeout and             the timeout has been reached. for java.net.ServerSocket.accept() in the code snippet you provided, otherwise throw SocketTimeoutException.", "Please check if this socket has an associated channel, the channel is in             non blocking mode, and there is no connection ready to be             accepted for java.net.ServerSocket.accept() in the code snippet you provided, otherwise throw IllegalBlockingModeException."], "num_of_unhandled_exception": 8}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
