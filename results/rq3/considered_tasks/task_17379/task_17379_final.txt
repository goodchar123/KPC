
Sure, here's the modified code snippet that checks for an I/O error and throws an `IOException` if one occurs:

```java
public void writeAttributeToStream(String attributeName, String attributeValue, OutputStream outputStream) throws IOException {
    String attributeString = attributeName + "=\"" + attributeValue + "\"";
    byte[] attributeBytes = attributeString.getBytes();
    try {
        outputStream.write(attributeBytes);
    } catch (IOException e) {
        throw new IOException("Error writing attribute to stream", e);
    }
}
```

This version of the method first converts the attribute string to a byte array, and then tries to write that array to the output stream using the `write()` method. If an `IOException` occurs during the write operation, the method catches the exception and re-throws it as a new `IOException` with a more descriptive error message.

By doing this, the method provides more information about the cause of the error and makes it easier for the caller to handle the exception appropriately.
------------------------------------------------------
