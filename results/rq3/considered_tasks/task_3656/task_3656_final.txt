
Sure, here's the updated Java method that includes the error checking and exception handling:

```java
import javax.xml.stream.FactoryConfigurationError;
import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;
import java.io.OutputStream;

public class XMLStreamWriterExample {

    public static void createXMLStreamWriter(OutputStream outputStream) throws XMLStreamException {
        try {
            // Create a new XMLOutputFactory
            XMLOutputFactory xmlOutputFactory = XMLOutputFactory.newInstance();

            // Create a new XMLStreamWriter that writes to the given output stream
            XMLStreamWriter xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(outputStream);

            // Use the XMLStreamWriter to write XML content
            xmlStreamWriter.writeStartDocument();
            if (xmlStreamWriter.getException() != null) {
                throw new XMLStreamException(xmlStreamWriter.getException());
            }

            xmlStreamWriter.writeStartElement("root");
            if (xmlStreamWriter.getException() != null) {
                throw new XMLStreamException(xmlStreamWriter.getException());
            }

            xmlStreamWriter.writeStartElement("child");
            if (xmlStreamWriter.getException() != null) {
                throw new XMLStreamException(xmlStreamWriter.getException());
            }

            xmlStreamWriter.writeAttribute("attribute", "value");
            if (xmlStreamWriter.getException() != null) {
                throw new IllegalStateException("Current state does not allow Attribute writing");
            }

            xmlStreamWriter.writeCharacters("Hello, world!");
            if (xmlStreamWriter.getException() != null) {
                throw new XMLStreamException(xmlStreamWriter.getException());
            }

            xmlStreamWriter.writeEndElement();
            if (xmlStreamWriter.getException() != null) {
                throw new XMLStreamException(xmlStreamWriter.getException());
            }

            xmlStreamWriter.writeEndElement();
            if (xmlStreamWriter.getException() != null) {
                throw new XMLStreamException(xmlStreamWriter.getException());
            }

            xmlStreamWriter.writeEndDocument();
            if (xmlStreamWriter.getException() != null) {
                throw new XMLStreamException(xmlStreamWriter.getException());
            }

            // Close the XMLStreamWriter
            xmlStreamWriter.close();
        } catch (FactoryConfigurationError | XMLStreamException e) {
            throw e;
        }
    }
}
```

This method now checks for errors at each step of the XML writing process and throws the appropriate exceptions if an error occurs. If an instance of `XMLOutputFactory` cannot be loaded, a `FactoryConfigurationError` is thrown. If an error occurs during any of the `XMLStreamWriter` methods, an `XMLStreamException` is thrown. If the current state does not allow attribute writing, an `IllegalStateException` is thrown. 

Note that the `XMLStreamException` thrown in the catch block is simply re-thrown to propagate the error up the call stack.
------------------------------------------------------
