
Sure, here's the updated code snippet that checks if `beginIndex` is negative or larger than the length of the string before calling `substring()`. If `beginIndex` is out of bounds, it throws an `IndexOutOfBoundsException`:

```
public static String identifyFormat(String filename) {
    int dotIndex = filename.lastIndexOf(".");
    if (dotIndex < 0 || dotIndex >= filename.length() - 1) {
        throw new IllegalArgumentException("Invalid filename: " + filename);
    }
    String extension = filename.substring(dotIndex + 1);
    switch (extension.toLowerCase()) {
        case "txt":
            return "Plain text";
        case "doc":
        case "docx":
            return "Microsoft Word document";
        case "pdf":
            return "PDF document";
        case "jpg":
        case "jpeg":
        case "png":
            return "Image file";
        default:
            return "Unknown format";
    }
}
```

This method now checks if `dotIndex` is negative or greater than or equal to `filename.length() - 1` to ensure that the filename has a valid extension. If it's not valid, it throws an `IllegalArgumentException`. Then, it proceeds to extract the extension using `substring()` as before.
------------------------------------------------------
