
Sure, here's an updated version of the Java method that checks if the result exceeds the supported date range for `java.time.LocalDateTime.plusSeconds(long)` and throws a `DateTimeException` if it does:

```java
public LocalDateTime addSeconds(LocalDateTime dateTime, long secondsToAdd) {
    LocalDateTime result = dateTime.plusSeconds(secondsToAdd);
    if (result.isAfter(LocalDateTime.MAX) || result.isBefore(LocalDateTime.MIN)) {
        throw new DateTimeException("Result exceeds supported date range");
    }
    return result;
}
```

This method first calculates the result by calling `plusSeconds()` on the input `LocalDateTime` object. It then checks if the result is after the maximum supported date or before the minimum supported date for `LocalDateTime`. If it is, it throws a `DateTimeException` with an appropriate error message. Otherwise, it returns the result.
------------------------------------------------------
