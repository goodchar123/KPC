{"loop_id": 0, "unhandled_api_list": ["java.time.LocalTime.of(int,int)", "java.time.Duration.ofMinutes(long)", "java.time.LocalTime.plus(java.time.temporal.TemporalAmount)", "java.time.LocalTime.plus(java.time.temporal.TemporalAmount)"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if the value of any field is out of range for java.time.LocalTime.of(int,int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the input minutes exceeds the capacity of Duration for java.time.Duration.ofMinutes(long) in the code snippet you provided, otherwise throw ArithmeticException.", "Please check if the addition cannot be made for java.time.LocalTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if numeric overflow occurs for java.time.LocalTime.plus(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw ArithmeticException."], "num_of_unhandled_exception": 4}
{"loop_id": 1, "unhandled_api_list": ["java.time.LocalTime.of(int,int)", "java.time.Duration.ofMinutes(long)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if the value of any field is out of range for java.time.LocalTime.of(int,int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the input minutes exceeds the capacity of Duration for java.time.Duration.ofMinutes(long) in the code snippet you provided, otherwise throw ArithmeticException."], "num_of_unhandled_exception": 2}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
