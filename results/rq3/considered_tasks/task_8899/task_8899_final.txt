
You are correct. The `removeLast()` method of `java.util.Deque` throws a `NoSuchElementException` if the deque is empty. Here's an updated version of the method that checks if the deque is empty before removing the last element:

```java
public <T> T takeLast(Deque<T> deque) throws InterruptedException, NoSuchElementException {
    synchronized (deque) {
        while (deque.isEmpty()) {
            deque.wait();
        }
        return deque.removeLast();
    }
}
```

This version of the method will throw a `NoSuchElementException` if the deque is empty when `removeLast()` is called.
------------------------------------------------------
