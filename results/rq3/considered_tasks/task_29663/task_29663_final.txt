
You're right, it's important to check if the input string is null before attempting to parse it as a Double. Here's the updated code snippet that includes the null check and throws a NullPointerException if the input is null:

```
public static Object parseString(String input) {
    if (input == null) {
        throw new NullPointerException("Input string cannot be null");
    }
    try {
        // Attempt to parse the input as an Integer
        return Integer.parseInt(input);
    } catch (NumberFormatException e) {
        // If parsing as an Integer fails, attempt to parse as a Double
        try {
            return Double.parseDouble(input);
        } catch (NumberFormatException e2) {
            // If parsing as a Double fails, return the input as a String
            return input;
        }
    }
}
```

Now, if the input string is null, the method will throw a NullPointerException with the message "Input string cannot be null".
------------------------------------------------------
