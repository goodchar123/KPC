List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.net.URL`
2. `java.net.URLClassLoader`
3. `java.lang.ClassLoader.getSystemClassLoader()`
4. `java.lang.reflect.Method`
5. `java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object...)`

 + From response, we get: ['java.net.URL', 'java.net.URLClassLoader', 'java.lang.ClassLoader.getSystemClassLoader()', 'java.lang.reflect.Method', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...)']
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.ClassLoader.getSystemClassLoader() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalStateException handled or caught for java.lang.ClassLoader.getSystemClassLoader() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the Error handled or caught for java.lang.ClassLoader.getSystemClassLoader() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalAccessException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the IllegalArgumentException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the InvocationTargetException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the NullPointerException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the ExceptionInInitializerError handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.System.getSecurityManager()`
2. `java.lang.Thread.currentThread()`
3. `java.lang.Thread.getContextClassLoader()`
4. `java.lang.ClassLoader.getSystemClassLoader()`
5. `java.lang.ClassLoader.getParent()`
6. `java.lang.Class.forName(java.lang.String)`
7. `java.lang.reflect.Method.setAccessible(boolean)`
8. `java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object...)`

 + From response, we get: ['java.lang.System.getSecurityManager()', 'java.lang.Thread.currentThread()', 'java.lang.Thread.getContextClassLoader()', 'java.lang.ClassLoader.getSystemClassLoader()', 'java.lang.ClassLoader.getParent()', 'java.lang.Class.forName(java.lang.String)', 'java.lang.reflect.Method.setAccessible(boolean)', 'java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...)']
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.Thread.getContextClassLoader() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.ClassLoader.getSystemClassLoader() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalStateException handled or caught for java.lang.ClassLoader.getSystemClassLoader() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the Error handled or caught for java.lang.ClassLoader.getSystemClassLoader() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.ClassLoader.getParent() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the LinkageError handled or caught for java.lang.Class.forName(java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the ExceptionInInitializerError handled or caught for java.lang.Class.forName(java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the ClassNotFoundException handled or caught for java.lang.Class.forName(java.lang.String) in the code snippet? Answer in Yes or No only.
Yes. It is caught by the try-catch block.
------------------------------------------------------
Is the InaccessibleObjectException handled or caught for java.lang.reflect.Method.setAccessible(boolean) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.reflect.Method.setAccessible(boolean) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalAccessException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes. It is caught by the try-catch block.
------------------------------------------------------
Is the IllegalArgumentException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes. It is caught by the try-catch block.
------------------------------------------------------
Is the InvocationTargetException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes. It is caught by the try-catch block.
------------------------------------------------------
Is the NullPointerException handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the ExceptionInInitializerError handled or caught for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
- `System.getSecurityManager()`
- `Thread.currentThread().getContextClassLoader()`
- `ClassLoader.getSystemClassLoader()`
- `ClassLoader.getSystemClassLoader().getParent()`
- `RuntimePermission("getClassLoader")`
- `System.getProperty("java.system.class.loader")`
- `Class.forName("java.net.URLClassLoader")`
- `urlClassLoaderClass.getDeclaredMethod("addURL", URL.class)`
- `method.setAccessible(true)`
- `method.invoke(ClassLoader.getSystemClassLoader(), url)`

 + From response, we get: ['System.getSecurityManager()', 'Thread.currentThread().getContextClassLoader()', 'ClassLoader.getSystemClassLoader()', 'ClassLoader.getSystemClassLoader().getParent()', 'RuntimePermission("getClassLoader")', 'System.getProperty("java.system.class.loader")', 'Class.forName("java.net.URLClassLoader")', 'urlClassLoaderClass.getDeclaredMethod("addURL",URL.class)', 'method.setAccessible(true)', 'method.invoke(ClassLoader.getSystemClassLoader(),url)']
------------------------------------------------------
