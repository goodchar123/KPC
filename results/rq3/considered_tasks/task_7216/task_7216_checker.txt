List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.Thread.currentThread()`
2. `java.lang.ThreadGroup.getParent()`
3. `java.lang.ThreadGroup.activeCount()`
4. `java.lang.ThreadGroup.enumerate(Thread[], int)`
5. `java.util.Arrays.copyOf(T[], int)`
6. `java.lang.System.arraycopy(Object, int, Object, int, int)`

 + From response, we get: ['java.lang.Thread.currentThread()', 'java.lang.ThreadGroup.getParent()', 'java.lang.ThreadGroup.activeCount()', 'java.lang.ThreadGroup.enumerate(Thread[],int)', 'java.util.Arrays.copyOf(T[],int)', 'java.lang.System.arraycopy(Object,int,Object,int,int)']
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.ThreadGroup.getParent() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NegativeArraySizeException handled or caught for java.util.Arrays.copyOf(T[],int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NullPointerException handled or caught for java.util.Arrays.copyOf(T[],int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.System.getSecurityManager()`
2. `java.lang.SecurityManager.checkPermission(java.security.Permission)`
3. `java.lang.Thread.currentThread()`
4. `java.lang.Thread.getThreadGroup()`
5. `java.lang.ThreadGroup.getParent()`
6. `java.lang.ThreadGroup.activeCount()`
7. `java.util.Arrays.copyOf(java.lang.Object[], int)`
8. `java.lang.ThreadGroup.enumerate(java.lang.Thread[], int, int)`
9. `java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)`

 + From response, we get: ['java.lang.System.getSecurityManager()', 'java.lang.SecurityManager.checkPermission(java.security.Permission)', 'java.lang.Thread.currentThread()', 'java.lang.Thread.getThreadGroup()', 'java.lang.ThreadGroup.getParent()', 'java.lang.ThreadGroup.activeCount()', 'java.util.Arrays.copyOf(java.lang.Object[],int)', 'java.lang.ThreadGroup.enumerate(java.lang.Thread[],int,int)', 'java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int)']
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.ThreadGroup.getParent() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IndexOutOfBoundsException handled or caught for java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the ArrayStoreException handled or caught for java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NullPointerException handled or caught for java.lang.System.arraycopy(java.lang.Object,int,java.lang.Object,int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `System.getSecurityManager()`
2. `SecurityManager.checkPermission(java.security.Permission)`
3. `Thread.currentThread()`
4. `Thread.getThreadGroup()`
5. `ThreadGroup.getParent()`
6. `ThreadGroup.activeCount()`
7. `Arrays.copyOf(T[], int)`
8. `ThreadGroup.enumerate(Thread[], int, int)`
9. `System.arraycopy(Object, int, Object, int, int)`

 + From response, we get: ['System.getSecurityManager()', 'SecurityManager.checkPermission(java.security.Permission)', 'Thread.currentThread()', 'Thread.getThreadGroup()', 'ThreadGroup.getParent()', 'ThreadGroup.activeCount()', 'Arrays.copyOf(T[],int)', 'ThreadGroup.enumerate(Thread[],int,int)', 'System.arraycopy(Object,int,Object,int,int)']
------------------------------------------------------
