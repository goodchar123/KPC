{"loop_id": 0, "unhandled_api_list": ["java.util.Optional.get()", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if no value is present for java.util.Optional.get() in the code snippet you provided, otherwise throw NoSuchElementException.", "Please check If a security manager is present, and the caller's class loader          is not null and is not the same as or an ancestor of the          system class loader, and the caller does not have the          RuntimePermission(\"getClassLoader\") for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw SecurityException.", "Please check If invoked recursively during the construction of the class          loader specified by the \"java.system.class.loader\"          property. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check If the system property \"java.system.class.loader\"          is defined but the named class could not be loaded, the          provider class does not define the required constructor, or an          exception is thrown by that constructor when it is invoked. The          underlying cause of the error can be retrieved via the          Throwable.getCause() method. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw Error."], "num_of_unhandled_exception": 4}
{"loop_id": 1, "unhandled_api_list": ["java.util.Optional.orElseThrow(java.util.function.Supplier)", "java.util.Optional.orElseThrow(java.util.function.Supplier)", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getParent()", "java.lang.ClassLoader.loadClass(java.lang.String)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check if no value is present for java.util.Optional.orElseThrow(java.util.function.Supplier) in the code snippet you provided, otherwise throw X.", "Please check if no value is present and the exception          supplying function is null for java.util.Optional.orElseThrow(java.util.function.Supplier) in the code snippet you provided, otherwise throw NullPointerException.", "Please check If a security manager is present, and the caller's class loader          is not null and is not the same as or an ancestor of the          system class loader, and the caller does not have the          RuntimePermission(\"getClassLoader\") for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw SecurityException.", "Please check If the system property \"java.system.class.loader\"          is defined but the named class could not be loaded, the          provider class does not define the required constructor, or an          exception is thrown by that constructor when it is invoked. The          underlying cause of the error can be retrieved via the          Throwable.getCause() method. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw Error.", "Please check If a security manager is present, and the caller's class loader          is not null and is not an ancestor of this class loader,          and the caller does not have the          RuntimePermission(\"getClassLoader\") for java.lang.ClassLoader.getParent() in the code snippet you provided, otherwise throw SecurityException.", "Please check If the class was not found for java.lang.ClassLoader.loadClass(java.lang.String) in the code snippet you provided, otherwise throw ClassNotFoundException."], "num_of_unhandled_exception": 6}
{"loop_id": 2, "unhandled_api_list": ["java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()", "java.lang.ClassLoader.getSystemClassLoader()"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check If a security manager is present, and the caller's class loader          is not null and is not the same as or an ancestor of the          system class loader, and the caller does not have the          RuntimePermission(\"getClassLoader\") for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw SecurityException.", "Please check If invoked recursively during the construction of the class          loader specified by the \"java.system.class.loader\"          property. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check If the system property \"java.system.class.loader\"          is defined but the named class could not be loaded, the          provider class does not define the required constructor, or an          exception is thrown by that constructor when it is invoked. The          underlying cause of the error can be retrieved via the          Throwable.getCause() method. for java.lang.ClassLoader.getSystemClassLoader() in the code snippet you provided, otherwise throw Error."], "num_of_unhandled_exception": 3}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
