{"loop_id": 0, "unhandled_api_list": ["java.lang.Class.forName(java.lang.String)", "java.lang.Class.forName(java.lang.String)", "java.sql.DriverManager.getConnection(java.lang.String,java.util.Properties)", "java.sql.Connection.setTransactionIsolation(int)", "java.sql.Connection.setAutoCommit(boolean)"], "num_of_unhandled_api": 5, "unhandled_exception_list": ["Please check if the linkage fails for java.lang.Class.forName(java.lang.String) in the code snippet you provided, otherwise throw LinkageError.", "Please check if the initialization provoked            by this method fails for java.lang.Class.forName(java.lang.String) in the code snippet you provided, otherwise throw ExceptionInInitializerError.", "Please check when the driver has determined that the timeout value specified by the setLoginTimeout method has been exceeded and has at least tried to cancel the current database connection attempt for java.sql.DriverManager.getConnection(java.lang.String,java.util.Properties) in the code snippet you provided, otherwise throw SQLTimeoutException.", "Please check if a database access error occurs, this method is called on a closed connection            or the given parameter is not one of the Connection            constants for java.sql.Connection.setTransactionIsolation(int) in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs,  setAutoCommit(true) is called while participating in a distributed transaction, or this method is called on a closed connection for java.sql.Connection.setAutoCommit(boolean) in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 5}
{"loop_id": 1, "unhandled_api_list": ["java.sql.Connection.setTransactionIsolation(int)", "java.sql.Connection.getAutoCommit()", "java.sql.Connection.setAutoCommit(boolean)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if a database access error occurs, this method is called on a closed connection            or the given parameter is not one of the Connection            constants for java.sql.Connection.setTransactionIsolation(int) in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed connection for java.sql.Connection.getAutoCommit() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs,  setAutoCommit(true) is called while participating in a distributed transaction, or this method is called on a closed connection for java.sql.Connection.setAutoCommit(boolean) in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 3}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
