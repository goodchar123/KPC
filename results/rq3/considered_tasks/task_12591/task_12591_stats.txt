{"loop_id": 0, "unhandled_api_list": ["java.lang.invoke.MethodHandle.bindTo(java.lang.Object)", "java.lang.invoke.MethodHandle.bindTo(java.lang.Object)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if the target does not have a         leading parameter type that is a reference type for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if x cannot be converted         to the leading parameter type of the target for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException."], "num_of_unhandled_exception": 2}
{"loop_id": 1, "unhandled_api_list": ["java.lang.invoke.MethodType.parameterType(int)", "java.lang.invoke.MethodHandle.bindTo(java.lang.Object)", "java.lang.invoke.MethodHandle.bindTo(java.lang.Object)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if num is not a valid index into parameterArray() for java.lang.invoke.MethodType.parameterType(int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException.", "Please check if the target does not have a         leading parameter type that is a reference type for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if x cannot be converted         to the leading parameter type of the target for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException."], "num_of_unhandled_exception": 3}
{"loop_id": 2, "unhandled_api_list": ["java.lang.invoke.MethodHandles.Lookup.findGetter(java.lang.Class,java.lang.String,java.lang.Class)", "java.lang.invoke.MethodHandles.Lookup.findGetter(java.lang.Class,java.lang.String,java.lang.Class)", "java.lang.invoke.MethodHandles.Lookup.findGetter(java.lang.Class,java.lang.String,java.lang.Class)", "java.lang.invoke.MethodHandles.Lookup.findGetter(java.lang.Class,java.lang.String,java.lang.Class)", "java.lang.invoke.MethodType.parameterType(int)", "java.lang.Class.isAssignableFrom(java.lang.Class)", "java.lang.invoke.MethodHandle.bindTo(java.lang.Object)"], "num_of_unhandled_api": 7, "unhandled_exception_list": ["Please check if the field does not exist for java.lang.invoke.MethodHandles.Lookup.findGetter(java.lang.Class,java.lang.String,java.lang.Class) in the code snippet you provided, otherwise throw NoSuchFieldException.", "Please check if access checking fails, or if the field is static for java.lang.invoke.MethodHandles.Lookup.findGetter(java.lang.Class,java.lang.String,java.lang.Class) in the code snippet you provided, otherwise throw IllegalAccessException.", "Please check if a security manager is present and it                              refuses access for java.lang.invoke.MethodHandles.Lookup.findGetter(java.lang.Class,java.lang.String,java.lang.Class) in the code snippet you provided, otherwise throw SecurityException.", "Please check if any argument is null for java.lang.invoke.MethodHandles.Lookup.findGetter(java.lang.Class,java.lang.String,java.lang.Class) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if num is not a valid index into parameterArray() for java.lang.invoke.MethodType.parameterType(int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException.", "Please check if the specified Class parameter is            null. for java.lang.Class.isAssignableFrom(java.lang.Class) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the target does not have a         leading parameter type that is a reference type for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 7}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
