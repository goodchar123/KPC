{"loop_id": 0, "unhandled_api_list": ["java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.setAccessible(boolean)", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.reflect.Field.get(java.lang.Object)", "java.lang.Class.forName(java.lang.String)", "java.lang.Class.forName(java.lang.String)", "java.lang.Class.forName(java.lang.String)"], "num_of_unhandled_api": 9, "unhandled_exception_list": ["Please check if access cannot be enabled for java.lang.reflect.Field.setAccessible(boolean) in the code snippet you provided, otherwise throw InaccessibleObjectException.", "Please check if the request is denied by the security manager for java.lang.reflect.Field.setAccessible(boolean) in the code snippet you provided, otherwise throw SecurityException.", "Please check if this Field object              is enforcing Java language access control and the underlying              field is inaccessible. for java.lang.reflect.Field.get(java.lang.Object) in the code snippet you provided, otherwise throw IllegalAccessException.", "Please check if the specified object is not an              instance of the class or interface declaring the underlying              field (or a subclass or implementor thereof). for java.lang.reflect.Field.get(java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the specified object is null              and the field is an instance field. for java.lang.reflect.Field.get(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the initialization provoked              by this method fails. for java.lang.reflect.Field.get(java.lang.Object) in the code snippet you provided, otherwise throw ExceptionInInitializerError.", "Please check if the linkage fails for java.lang.Class.forName(java.lang.String) in the code snippet you provided, otherwise throw LinkageError.", "Please check if the initialization provoked            by this method fails for java.lang.Class.forName(java.lang.String) in the code snippet you provided, otherwise throw ExceptionInInitializerError.", "Please check if the class cannot be located for java.lang.Class.forName(java.lang.String) in the code snippet you provided, otherwise throw ClassNotFoundException."], "num_of_unhandled_exception": 9}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
