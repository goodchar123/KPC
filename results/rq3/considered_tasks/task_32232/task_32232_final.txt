
Sure, here's the updated code snippet that includes the requested error checking:

```java
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.imageio.ImageWriteParam;
import javax.imageio.ImageWriter;
import javax.imageio.plugins.jpeg.JPEGImageWriteParam;

public class ImageCompression {
    public static void setCompressionQuality(File inputFile, File outputFile, float quality) throws IOException {
        if (inputFile == null || !inputFile.exists()) {
            throw new IllegalArgumentException("Input file is null or does not exist");
        }
        if (outputFile == null) {
            throw new IllegalArgumentException("Output file is null");
        }
        if (quality < 0 || quality > 1) {
            throw new IllegalArgumentException("Compression quality must be between 0 and 1");
        }
        
        BufferedImage image = ImageIO.read(inputFile);
        if (image == null) {
            throw new IllegalArgumentException("Input file is not a valid image format");
        }
        
        String formatName = "jpg";
        if (formatName == null) {
            throw new IllegalArgumentException("Format name is null");
        }
        
        ImageWriter writer = null;
        for (ImageWriter w : ImageIO.getImageWritersByFormatName(formatName)) {
            if (w.canWriteCompressed()) {
                writer = w;
                break;
            }
        }
        if (writer == null) {
            throw new UnsupportedOperationException("Compression not supported by writer");
        }
        
        ImageWriteParam param = writer.getDefaultWriteParam();
        if (param.canWriteCompressed() && param.getCompressionMode() != ImageWriteParam.MODE_EXPLICIT) {
            throw new UnsupportedOperationException("Compression mode not supported");
        }
        if (param.getCompressionTypes() != null && param.getCompressionType() == null) {
            throw new IllegalStateException("Compression type not set");
        }
        if (param.getCompressionMode() != ImageWriteParam.MODE_EXPLICIT) {
            throw new IllegalStateException("Compression mode not set to MODE_EXPLICIT");
        }
        param.setCompressionQuality(quality);
        if (!param.canWriteCompressed()) {
            throw new UnsupportedOperationException("Compression not supported by writer");
        }
        
        writer.setOutput(ImageIO.createImageOutputStream(outputFile));
        writer.write(null, new javax.imageio.IIOImage(image, null, null), param);
        if (writer.getOutput() == null) {
            throw new IllegalStateException("Output not set");
        }
        if (image.getRaster() != null && !writer.canWriteRasters()) {
            throw new UnsupportedOperationException("Writer cannot write rasters");
        }
    }
}
```

This updated code includes error checking for all the scenarios you mentioned. If any of the checks fail, an appropriate exception is thrown.
------------------------------------------------------
