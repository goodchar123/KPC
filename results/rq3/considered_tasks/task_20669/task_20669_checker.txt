List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
The fully qualified name of the Java JDK methods used in the method above are:

1. `java.sql.Connection.prepareStatement(java.lang.String)`
2. `java.sql.PreparedStatement.setInt(int, int)`
3. `java.sql.PreparedStatement.executeQuery()`
4. `java.sql.ResultSet.next()`
5. `java.sql.ResultSet.getCharacterStream(int)`

 + From response, we get: ['java.sql.Connection.prepareStatement(java.lang.String)', 'java.sql.PreparedStatement.setInt(int,int)', 'java.sql.PreparedStatement.executeQuery()', 'java.sql.ResultSet.next()', 'java.sql.ResultSet.getCharacterStream(int)']
------------------------------------------------------
Is the SQLException handled or caught for java.sql.Connection.prepareStatement(java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SQLException handled or caught for java.sql.PreparedStatement.setInt(int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SQLException handled or caught for java.sql.PreparedStatement.executeQuery() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SQLTimeoutException handled or caught for java.sql.PreparedStatement.executeQuery() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SQLException handled or caught for java.sql.ResultSet.next() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SQLException handled or caught for java.sql.ResultSet.getCharacterStream(int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. java.sql.Connection.prepareStatement(java.lang.String)
2. java.sql.PreparedStatement.setInt(int, int)
3. java.sql.PreparedStatement.executeQuery()
4. java.sql.ResultSet.next()
5. java.sql.ResultSet.getCharacterStream(int)
6. java.sql.ResultSet.close()
7. java.sql.PreparedStatement.close()

 + From response, we get: []
------------------------------------------------------
