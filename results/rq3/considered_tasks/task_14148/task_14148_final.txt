
Sure, here's an updated version of the `getValueOrThrow` method that checks if no value is present for `Optional.get()` and throws a `NoSuchElementException` in that case:

```java
public static <T> T getValueOrThrow(Optional<T> optional) {
    return optional.orElseThrow(() -> new NoSuchElementException("No value present"));
}
```

This version uses the `orElseThrow` method of `Optional` to return the value if it is present, or throw a `NoSuchElementException` with the specified message if it is not present.

You can use this method like this:

```java
Optional<String> optional = Optional.of("Hello, world!");
String value = getValueOrThrow(optional); // returns "Hello, world!"

Optional<String> emptyOptional = Optional.empty();
String emptyValue = getValueOrThrow(emptyOptional); // throws NoSuchElementException
```
------------------------------------------------------
