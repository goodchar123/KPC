{"loop_id": 0, "unhandled_api_list": ["javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String)", "javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String)", "javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String)", "javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String)", "javax.crypto.Cipher.init(int,java.security.Key)", "javax.crypto.Cipher.init(int,java.security.Key)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check if the provider         is null or empty for javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if transformation         is null, empty, in an invalid format,         or if a CipherSpi implementation for the         specified algorithm is not available from the specified         provider for javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String) in the code snippet you provided, otherwise throw NoSuchAlgorithmException.", "Please check if transformation         contains a padding scheme that is not available for javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String) in the code snippet you provided, otherwise throw NoSuchPaddingException.", "Please check if the specified provider is not         registered in the security provider list for javax.crypto.Cipher.getInstance(java.lang.String,java.lang.String) in the code snippet you provided, otherwise throw NoSuchProviderException.", "Please check if the given key is inappropriate for initializing this cipher, or requires algorithm parameters that cannot be determined from the given key, or if the given key has a keysize that exceeds the maximum allowable keysize (as determined from the configured jurisdiction policy files). for javax.crypto.Cipher.init(int,java.security.Key) in the code snippet you provided, otherwise throw InvalidKeyException.", "Please check if opmode is WRAP_MODE or UNWRAP_MODE but the mode is not implemented by the underlying CipherSpi. for javax.crypto.Cipher.init(int,java.security.Key) in the code snippet you provided, otherwise throw UnsupportedOperationException."], "num_of_unhandled_exception": 6}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
