
Thank you for pointing that out. Here's an updated version of the Java method that includes the requested error checking:

```java
public static YearMonth withField(YearMonth yearMonth, TemporalField field, long newValue) {
    if (!yearMonth.isSupported(field)) {
        throw new UnsupportedTemporalTypeException("Unsupported field: " + field);
    }
    try {
        return yearMonth.with(field, newValue);
    } catch (DateTimeException e) {
        throw new DateTimeException("Invalid field value", e);
    } catch (ArithmeticException e) {
        throw new ArithmeticException("Numeric overflow");
    }
}
```

This updated method first checks if the specified field is supported by the `YearMonth` object. If not, it throws an `UnsupportedTemporalTypeException` with an appropriate error message.

If the field is supported, the method attempts to set the new value using the `with` method of the `YearMonth` object. If the new value is invalid or if numeric overflow occurs, the method throws a `DateTimeException` or an `ArithmeticException`, respectively, with appropriate error messages.

If all checks pass, the method returns a new `YearMonth` object with the specified field set to the new value.
------------------------------------------------------
