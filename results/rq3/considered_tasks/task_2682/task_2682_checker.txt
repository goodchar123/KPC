List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.invoke.MethodHandles.lookup()`
2. `java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class, java.lang.String, java.lang.invoke.MethodType)`
3. `java.lang.invoke.MethodHandle.bindTo(java.lang.Object)`
4. `java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...)`
5. `java.lang.invoke.ConstantCallSite.<init>(java.lang.invoke.CallSite)`
6. `java.lang.invoke.BootstrapMethodInvoker.invoke(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType)`

 + From response, we get: ['java.lang.invoke.MethodHandles.lookup()', 'java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)', 'java.lang.invoke.MethodHandle.bindTo(java.lang.Object)', 'java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...)', 'java.lang.invoke.ConstantCallSite.<init>(java.lang.invoke.CallSite)', 'java.lang.invoke.BootstrapMethodInvoker.invoke(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType)']
------------------------------------------------------
Is the NoSuchMethodException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the IllegalAccessException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NullPointerException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalArgumentException handled or caught for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the ClassCastException handled or caught for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the WrongMethodTypeException handled or caught for java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the Throwable handled or caught for java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
Here are the fully qualified names of the Java JDK methods used in the method above:

- `java.lang.invoke.MethodHandles.lookup()`
- `java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class, java.lang.String, java.lang.invoke.MethodType)`
- `java.lang.invoke.MethodHandle.bindTo(java.lang.Object)`
- `java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...)`
- `java.lang.invoke.MethodHandles.typeOf(java.lang.Object)`
- `java.lang.invoke.ConstantCallSite.<init>(java.lang.invoke.CallSite)`
- `java.lang.invoke.BootstrapMethodInvoker.invoke(java.lang.invoke.MethodHandles.Lookup, java.lang.String, java.lang.invoke.MethodType)`
- `java.lang.System.getSecurityManager()`
- `java.lang.SecurityManager.checkPermission(java.security.Permission)`
- `java.lang.Class.getClassLoader()`
- `java.lang.Class.getModule()`
- `java.lang.reflect.ReflectPermission.<init>(java.lang.String)`
- `java.lang.IllegalArgumentException.<init>(java.lang.String)`
- `java.lang.ClassCastException.<init>(java.lang.String)`
- `java.lang.invoke.WrongMethodTypeException.<init>(java.lang.String)`
- `java.lang.Throwable.getMessage()`
- `java.lang.Throwable.getCause()`
- `java.lang.Error`
- `java.lang.RuntimeException`

 + From response, we get: ['java.lang.invoke.MethodHandles.lookup()', 'java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)', 'java.lang.invoke.MethodHandle.bindTo(java.lang.Object)', 'java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...)', 'java.lang.invoke.MethodHandles.typeOf(java.lang.Object)', 'java.lang.invoke.ConstantCallSite.<init>(java.lang.invoke.CallSite)', 'java.lang.invoke.BootstrapMethodInvoker.invoke(java.lang.invoke.MethodHandles.Lookup,java.lang.String,java.lang.invoke.MethodType)', 'java.lang.System.getSecurityManager()', 'java.lang.SecurityManager.checkPermission(java.security.Permission)', 'java.lang.Class.getClassLoader()', 'java.lang.Class.getModule()', 'java.lang.reflect.ReflectPermission.<init>(java.lang.String)', 'java.lang.IllegalArgumentException.<init>(java.lang.String)', 'java.lang.ClassCastException.<init>(java.lang.String)', 'java.lang.invoke.WrongMethodTypeException.<init>(java.lang.String)', 'java.lang.Throwable.getMessage()', 'java.lang.Throwable.getCause()', 'java.lang.Error', 'java.lang.RuntimeException']
------------------------------------------------------
Is the NoSuchMethodException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalAccessException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NullPointerException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalArgumentException handled or caught for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the ClassCastException handled or caught for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the WrongMethodTypeException handled or caught for java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the Throwable handled or caught for java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.Class.getClassLoader() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
Here are the fully qualified names of the Java JDK methods used in the method above:

- `java.lang.invoke.MethodHandles.lookup()`
- `java.lang.invoke.MethodHandles.Lookup.lookupClass()`
- `java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class, java.lang.String, java.lang.invoke.MethodType)`
- `java.lang.invoke.MethodHandle.bindTo(java.lang.Object)`
- `java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...)`
- `java.lang.invoke.MethodHandles.typeOf(java.lang.Object)`
- `java.lang.invoke.MethodType.methodType(java.lang.Class, java.lang.Class...)`
- `java.lang.invoke.ConstantCallSite.<init>(java.lang.invoke.MethodHandle)`
- `java.lang.reflect.ReflectPermission.<init>(java.lang.String)`
- `java.lang.SecurityManager.checkPermission(java.security.Permission)`
- `java.lang.String.getClassLoader()`
- `java.lang.Class.getClassLoader()`
- `java.lang.Class.getModule()`
- `java.lang.ClassLoader.equals(java.lang.Object)`
- `java.lang.RuntimePermission.<init>(java.lang.String)`

 + From response, we get: ['java.lang.invoke.MethodHandles.lookup()', 'java.lang.invoke.MethodHandles.Lookup.lookupClass()', 'java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)', 'java.lang.invoke.MethodHandle.bindTo(java.lang.Object)', 'java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...)', 'java.lang.invoke.MethodHandles.typeOf(java.lang.Object)', 'java.lang.invoke.MethodType.methodType(java.lang.Class,java.lang.Class...)', 'java.lang.invoke.ConstantCallSite.<init>(java.lang.invoke.MethodHandle)', 'java.lang.reflect.ReflectPermission.<init>(java.lang.String)', 'java.lang.SecurityManager.checkPermission(java.security.Permission)', 'java.lang.String.getClassLoader()', 'java.lang.Class.getClassLoader()', 'java.lang.Class.getModule()', 'java.lang.ClassLoader.equals(java.lang.Object)', 'java.lang.RuntimePermission.<init>(java.lang.String)']
------------------------------------------------------
Is the NoSuchMethodException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
Yes. The `NoSuchMethodException` is caught and handled in the code snippet for the `findVirtual` method of `java.lang.invoke.MethodHandles.Lookup`.
------------------------------------------------------
Is the IllegalAccessException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
Yes. The `IllegalAccessException` is caught and handled in the code snippet for the `findVirtual` method of `java.lang.invoke.MethodHandles.Lookup`.
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
Yes. The `SecurityException` is caught and handled in the code snippet for the `findVirtual` method of `java.lang.invoke.MethodHandles.Lookup`.
------------------------------------------------------
Is the NullPointerException handled or caught for java.lang.invoke.MethodHandles.Lookup.findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType) in the code snippet? Answer in Yes or No only.
Yes. The `NullPointerException` is caught and handled in the code snippet for the `findVirtual` method of `java.lang.invoke.MethodHandles.Lookup`.
------------------------------------------------------
Is the IllegalArgumentException handled or caught for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet? Answer in Yes or No only.
Yes. The `IllegalArgumentException` is caught and handled in the code snippet for the `bindTo` method of `java.lang.invoke.MethodHandle`.
------------------------------------------------------
Is the ClassCastException handled or caught for java.lang.invoke.MethodHandle.bindTo(java.lang.Object) in the code snippet? Answer in Yes or No only.
Yes. The `ClassCastException` is caught and handled in the code snippet for the `bindTo` method of `java.lang.invoke.MethodHandle`.
------------------------------------------------------
Is the WrongMethodTypeException handled or caught for java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes. The `WrongMethodTypeException` is caught and handled in the code snippet for the `invokeExact` method of `java.lang.invoke.MethodHandle`.
------------------------------------------------------
Is the Throwable handled or caught for java.lang.invoke.MethodHandle.invokeExact(java.lang.Object...) in the code snippet? Answer in Yes or No only.
Yes. The `Throwable` is caught and handled in the code snippet for the `invokeExact` method of `java.lang.invoke.MethodHandle`.
------------------------------------------------------
Is the SecurityException handled or caught for java.lang.Class.getClassLoader() in the code snippet? Answer in Yes or No only.
Yes. The `SecurityException` is caught and handled in the code snippet for the `getClassLoader` method of `java.lang.Class`.
------------------------------------------------------
