
Sure, here's an updated version of the Java method that checks if the index is negative or greater than or equal to the length of the StringBuilder object, and throws a `StringIndexOutOfBoundsException` if it is:

```java
public static String removeCharAt(String str, int pos) {
    if (str == null || str.isEmpty()) {
        return str;
    }
    StringBuilder sb = new StringBuilder(str);
    if (pos < 0 || pos >= sb.length()) {
        throw new StringIndexOutOfBoundsException("Invalid position: " + pos);
    }
    sb.deleteCharAt(pos);
    return sb.toString();
}
```

This method first checks if the string is null or empty, and returns it as is if it is. It then creates a `StringBuilder` object from the string.

Next, it checks if the position is within the bounds of the `StringBuilder` object, and throws a `StringIndexOutOfBoundsException` if it is not.

If the position is valid, it removes the character at the specified position using the `deleteCharAt()` method, and returns the resulting string using the `toString()` method of the `StringBuilder` object.
------------------------------------------------------
