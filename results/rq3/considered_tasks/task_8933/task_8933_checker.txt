List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
The Java JDK methods used in the `MyCollection` class are:

- `java.util.ArrayList.ArrayList()` - constructor
- `java.util.List.size()` - method
- `java.util.List.isEmpty()` - method
- `java.util.List.contains(java.lang.Object)` - method
- `java.util.List.iterator()` - method
- `java.util.List.toArray()` - method
- `java.util.List.toArray(T[])` - method
- `java.util.List.add(E)` - method
- `java.util.List.remove(java.lang.Object)` - method
- `java.util.List.containsAll(java.util.Collection<?>)` - method
- `java.util.List.addAll(java.util.Collection<? extends E>)` - method
- `java.util.List.removeAll(java.util.Collection<?>)` - method
- `java.util.List.retainAll(java.util.Collection<?>)` - method
- `java.util.List.clear()` - method

 + From response, we get: ['MyCollection', 'java.util.ArrayList.ArrayList()', 'java.util.List.size()', 'java.util.List.isEmpty()', 'java.util.List.contains(java.lang.Object)', 'java.util.List.iterator()', 'java.util.List.toArray()', 'java.util.List.toArray(T[])', 'java.util.List.add(E)', 'java.util.List.remove(java.lang.Object)', 'java.util.List.containsAll(java.util.Collection<?>)', 'java.util.List.addAll(java.util.Collection<?extendsE>)', 'java.util.List.removeAll(java.util.Collection<?>)', 'java.util.List.retainAll(java.util.Collection<?>)', 'java.util.List.clear()']
------------------------------------------------------
Is the ClassCastException handled or caught for java.util.List.contains(java.lang.Object) in the code snippet? Answer in Yes or No only.
No. The `ClassCastException` is not handled or caught in the `java.util.List.contains(java.lang.Object)` method in the code snippet.
------------------------------------------------------
Is the NullPointerException handled or caught for java.util.List.contains(java.lang.Object) in the code snippet? Answer in Yes or No only.
No. The `NullPointerException` is not handled or caught in the `java.util.List.contains(java.lang.Object)` method in the code snippet.
------------------------------------------------------
Is the ArrayStoreException handled or caught for java.util.List.toArray(T[]) in the code snippet? Answer in Yes or No only.
No. The `ArrayStoreException` is not handled or caught in the `java.util.List.toArray(T[])` method in the code snippet.
------------------------------------------------------
Is the NullPointerException handled or caught for java.util.List.toArray(T[]) in the code snippet? Answer in Yes or No only.
No. The `NullPointerException` is not handled or caught in the `java.util.List.toArray(T[])` method in the code snippet.
------------------------------------------------------
Is the UnsupportedOperationException handled or caught for java.util.List.add(E) in the code snippet? Answer in Yes or No only.
No. The `UnsupportedOperationException` is not handled or caught in the `java.util.List.add(E)` method in the code snippet.
------------------------------------------------------
Is the ClassCastException handled or caught for java.util.List.add(E) in the code snippet? Answer in Yes or No only.
No. The `ClassCastException` is not handled or caught in the `java.util.List.add(E)` method in the code snippet.
------------------------------------------------------
Is the NullPointerException handled or caught for java.util.List.add(E) in the code snippet? Answer in Yes or No only.
No. The `NullPointerException` is not handled or caught in the `java.util.List.add(E)` method in the code snippet.
------------------------------------------------------
Is the IllegalArgumentException handled or caught for java.util.List.add(E) in the code snippet? Answer in Yes or No only.
No. The `IllegalArgumentException` is not handled or caught in the `java.util.List.add(E)` method in the code snippet.
------------------------------------------------------
Is the ClassCastException handled or caught for java.util.List.remove(java.lang.Object) in the code snippet? Answer in Yes or No only.
No. The `ClassCastException` is not handled or caught in the `java.util.List.remove(java.lang.Object)` method in the code snippet.
------------------------------------------------------
Is the NullPointerException handled or caught for java.util.List.remove(java.lang.Object) in the code snippet? Answer in Yes or No only.
No. The `NullPointerException` is not handled or caught in the `java.util.List.remove(java.lang.Object)` method in the code snippet.
------------------------------------------------------
Is the UnsupportedOperationException handled or caught for java.util.List.remove(java.lang.Object) in the code snippet? Answer in Yes or No only.
No. The `UnsupportedOperationException` is not handled or caught in the `java.util.List.remove(java.lang.Object)` method in the code snippet.
------------------------------------------------------
Is the UnsupportedOperationException handled or caught for java.util.List.clear() in the code snippet? Answer in Yes or No only.
No. The `UnsupportedOperationException` is not handled or caught in the `java.util.List.clear()` method in the code snippet.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. java.util.Arrays.copyOf(Object[], int, Class<? extends T[]>)
2. java.util.Arrays.fill(Object[], Object)
3. java.lang.System.arraycopy(Object, int, Object, int, int)
4. java.util.Collection.contains(Object)
5. java.util.Collection.containsAll(Collection<?>)
6. java.util.Collection.iterator()
7. java.util.Collection.remove(Object)
8. java.util.Collection.removeAll(Collection<?>)
9. java.util.Collection.retainAll(Collection<?>)
10. java.util.Collection.size()
11. java.util.Iterator.hasNext()
12. java.util.Iterator.next()
13. java.util.Iterator.remove()
14. java.util.List.add(int, E)
15. java.util.List.add(E)
16. java.util.List.addAll(Collection<? extends E>)
17. java.util.List.clear()
18. java.util.List.contains(Object)
19. java.util.List.get(int)
20. java.util.List.indexOf(Object)
21. java.util.List.isEmpty()
22. java.util.List.iterator()
23. java.util.List.lastIndexOf(Object)
24. java.util.List.listIterator()
25. java.util.List.listIterator(int)
26. java.util.List.remove(int)
27. java.util.List.remove(Object)
28. java.util.List.removeAll(Collection<?>)
29. java.util.List.retainAll(Collection<?>)
30. java.util.List.set(int, E)
31. java.util.List.size()
32. java.util.List.subList(int, int)
33. java.util.List.toArray()
34. java.util.List.toArray(T[])

 + From response, we get: []
------------------------------------------------------
