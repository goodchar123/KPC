
Sure, here's an updated version of the `removeRemoteObject()` method that checks if the remote object is currently exported before attempting to unexport it. If the object is not exported, it throws a `NoSuchObjectException`:

```
import java.rmi.NoSuchObjectException;
import java.rmi.RemoteException;
import java.rmi.server.UnicastRemoteObject;

public class MyRemoteObject extends UnicastRemoteObject implements MyRemoteInterface {
    
    public MyRemoteObject() throws RemoteException {
        super();
    }
    
    public void removeRemoteObject() throws RemoteException, NoSuchObjectException {
        if (UnicastRemoteObject.unexportObject(this, true)) {
            System.out.println("Remote object successfully unexported.");
        } else {
            throw new NoSuchObjectException("Remote object not found in registry.");
        }
    }
    
    // other methods of the remote object
    
}
```

In this updated version, the `unexportObject()` method returns a boolean value indicating whether the object was successfully unexported. If the method returns `true`, the remote object was successfully removed from the RMI runtime and a message is printed to the console. If the method returns `false`, it means that the remote object was not found in the registry and a `NoSuchObjectException` is thrown.
------------------------------------------------------
