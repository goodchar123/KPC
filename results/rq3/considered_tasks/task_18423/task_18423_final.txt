
Sure, here's an updated version of the method that checks for invalid regular expression syntax and throws a `PatternSyntaxException` if necessary:

```
import java.util.regex.PatternSyntaxException;

public static String getBorderRight(String css) throws PatternSyntaxException {
    try {
        String[] declarations = css.split(";");
        for (String declaration : declarations) {
            String[] parts = declaration.split(":");
            if (parts.length == 2) {
                String property = parts[0].trim();
                String value = parts[1].trim();
                if (property.equals("border-right")) {
                    return value;
                }
            }
        }
        return null;
    } catch (PatternSyntaxException e) {
        throw e;
    }
}
```

Now, if the regular expression syntax is invalid, a `PatternSyntaxException` will be thrown. You can catch this exception and handle it appropriately in your code.
------------------------------------------------------
