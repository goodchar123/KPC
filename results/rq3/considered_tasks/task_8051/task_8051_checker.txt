List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.lang.StringBuilder.<init>()`
2. `java.lang.String.length()`
3. `java.lang.String.charAt(int)`
4. `java.lang.StringBuilder.append(char)`
5. `java.lang.StringBuilder.toString()`
6. `java.lang.StringBuilder.<init>(int)`
7. `java.lang.StringBuilder.append(java.lang.String)`
8. `java.lang.StringBuilder.append(char[])`
9. `java.lang.StringBuilder.append(char[], int, int)`
10. `java.lang.StringBuilder.append(java.lang.CharSequence)`
11. `java.lang.StringBuilder.append(java.lang.CharSequence, int, int)`
12. `java.lang.StringBuilder.append(boolean)`
13. `java.lang.StringBuilder.append(char)`
14. `java.lang.StringBuilder.append(int)`
15. `java.lang.StringBuilder.append(long)`
16. `java.lang.StringBuilder.append(float)`
17. `java.lang.StringBuilder.append(double)`
18. `java.lang.StringBuilder.appendCodePoint(int)`
19. `java.lang.StringBuilder.insert(int, char[], int, int)`
20. `java.lang.StringBuilder.insert(int, java.lang.CharSequence, int, int)`
21. `java.lang.StringBuilder.delete(int, int)`
22. `java.lang.StringBuilder.deleteCharAt(int)`
23. `java.lang.StringBuilder.replace(int, int, java.lang.String)`
24. `java.lang.StringBuilder.substring(int)`
25. `java.lang.StringBuilder.substring(int, int)`
26. `java.lang.StringBuilder.subSequence(int, int)`
27. `java.lang.StringBuilder.indexOf(java.lang.String)`
28. `java.lang.StringBuilder.indexOf(java.lang.String, int)`
29. `java.lang.StringBuilder.lastIndexOf(java.lang.String)`
30. `java.lang.StringBuilder.lastIndexOf(java.lang.String, int)`
31. `java.lang.StringBuilder.reverse()`

 + From response, we get: ['java.lang.StringBuilder.<init>()', 'java.lang.String.length()', 'java.lang.String.charAt(int)', 'java.lang.StringBuilder.append(char)', 'java.lang.StringBuilder.toString()', 'java.lang.StringBuilder.<init>(int)', 'java.lang.StringBuilder.append(java.lang.String)', 'java.lang.StringBuilder.append(char[])', 'java.lang.StringBuilder.append(char[],int,int)', 'java.lang.StringBuilder.append(java.lang.CharSequence)', 'java.lang.StringBuilder.append(java.lang.CharSequence,int,int)', 'java.lang.StringBuilder.append(boolean)', 'java.lang.StringBuilder.append(char)', 'java.lang.StringBuilder.append(int)', 'java.lang.StringBuilder.append(long)', 'java.lang.StringBuilder.append(float)', 'java.lang.StringBuilder.append(double)', 'java.lang.StringBuilder.appendCodePoint(int)', 'java.lang.StringBuilder.insert(int,char[],int,int)', 'java.lang.StringBuilder.insert(int,java.lang.CharSequence,int,int)', 'java.lang.StringBuilder.delete(int,int)', 'java.lang.StringBuilder.deleteCharAt(int)', 'java.lang.StringBuilder.replace(int,int,java.lang.String)', 'java.lang.StringBuilder.substring(int)', 'java.lang.StringBuilder.substring(int,int)', 'java.lang.StringBuilder.subSequence(int,int)', 'java.lang.StringBuilder.indexOf(java.lang.String)', 'java.lang.StringBuilder.indexOf(java.lang.String,int)', 'java.lang.StringBuilder.lastIndexOf(java.lang.String)', 'java.lang.StringBuilder.lastIndexOf(java.lang.String,int)', 'java.lang.StringBuilder.reverse()']
------------------------------------------------------
Is the IndexOutOfBoundsException handled or caught for java.lang.String.charAt(int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IndexOutOfBoundsException handled or caught for java.lang.StringBuilder.append(char[],int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IndexOutOfBoundsException handled or caught for java.lang.StringBuilder.append(java.lang.CharSequence,int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the StringIndexOutOfBoundsException handled or caught for java.lang.StringBuilder.insert(int,char[],int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IndexOutOfBoundsException handled or caught for java.lang.StringBuilder.insert(int,java.lang.CharSequence,int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the StringIndexOutOfBoundsException handled or caught for java.lang.StringBuilder.delete(int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the StringIndexOutOfBoundsException handled or caught for java.lang.StringBuilder.deleteCharAt(int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the StringIndexOutOfBoundsException handled or caught for java.lang.StringBuilder.replace(int,int,java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the StringIndexOutOfBoundsException handled or caught for java.lang.StringBuilder.substring(int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the StringIndexOutOfBoundsException handled or caught for java.lang.StringBuilder.substring(int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IndexOutOfBoundsException handled or caught for java.lang.StringBuilder.subSequence(int,int) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. java.lang.String.charAt(int)
2. java.lang.StringBuilder.append(char[], int, int)
3. java.lang.StringBuilder.append(CharSequence, int, int)
4. java.lang.StringBuilder.insert(int, char[], int, int)
5. java.lang.StringBuilder.insert(int, CharSequence, int, int)
6. java.lang.StringBuilder.delete(int, int)
7. java.lang.StringBuilder.deleteCharAt(int)
8. java.lang.StringBuilder.replace(int, int, String)
9. java.lang.StringBuilder.substring(int)
10. java.lang.StringBuilder.substring(int, int)
11. java.lang.StringBuilder.subSequence(int, int)

 + From response, we get: []
------------------------------------------------------
