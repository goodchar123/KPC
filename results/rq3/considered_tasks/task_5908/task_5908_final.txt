
Sure, here's the updated code snippet that checks for I/O exceptions and connection errors:

```java
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

public class HttpUtils {
    public static InputStream getResponseBodyAsStream(String urlString) throws IOException {
        URL url = new URL(urlString);
        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
        connection.setRequestMethod("GET");
        connection.connect();
        try {
            int responseCode = connection.getResponseCode();
            if (responseCode == HttpURLConnection.HTTP_OK) {
                return connection.getInputStream();
            } else {
                throw new IOException("HTTP response code: " + responseCode);
            }
        } catch (IOException e) {
            throw new IOException("Error connecting to server: " + e.getMessage());
        }
    }
}
```

Now, if an I/O exception occurs while opening the connection, it will be caught and re-thrown as an IOException with a more descriptive error message. Similarly, if an error occurs while getting the response code, it will be caught and re-thrown as an IOException with a more descriptive error message.
------------------------------------------------------
