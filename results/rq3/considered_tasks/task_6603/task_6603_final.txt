
Sure, here's an updated version of the Java method that checks if the result exceeds the supported range for `java.time.YearMonth.plusMonths(long)` and throws a `DateTimeException` if it does:

```java
public YearMonth addMonths(YearMonth yearMonth, long monthsToAdd) {
    YearMonth result = yearMonth.plusMonths(monthsToAdd);
    if (result.isAfter(YearMonth.MAX) || result.isBefore(YearMonth.MIN)) {
        throw new DateTimeException("Result exceeds supported range for YearMonth");
    }
    return result;
}
```

This method first calls `plusMonths()` to add the specified number of months to the original `YearMonth` object and stores the result in a new `YearMonth` object called `result`. It then checks if `result` is after the maximum supported `YearMonth` value or before the minimum supported `YearMonth` value using the `isAfter()` and `isBefore()` methods provided by the `YearMonth` class. If `result` is outside the supported range, a `DateTimeException` is thrown with an appropriate error message. Otherwise, the method returns `result`.

This updated method ensures that the result of the addition is within the supported range for `YearMonth` objects, and provides an appropriate error message if it is not.
------------------------------------------------------
