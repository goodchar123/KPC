
Sure, here's an updated version of the code snippet that includes the error checking you requested:

```java
public class MyApp {
    public static void main(String[] args) {
        // Register a shutdown hook
        Thread shutdownHook = new Thread(() -> {
            // Perform cleanup tasks here
            System.out.println("Shutting down...");
        });

        try {
            // Check if the hook has already been registered
            if (!Runtime.getRuntime().removeShutdownHook(shutdownHook)) {
                throw new IllegalArgumentException("Shutdown hook not registered");
            }

            // Register the hook
            Runtime.getRuntime().addShutdownHook(shutdownHook);
        } catch (IllegalArgumentException | IllegalStateException e) {
            System.err.println("Error registering shutdown hook: " + e.getMessage());
        } catch (SecurityException e) {
            System.err.println("Cannot register shutdown hook due to security restrictions");
        }

        // Your application code here
        // ...
    }
}
```

In this updated version, we first create the shutdown hook thread as before. We then attempt to remove the hook using the `removeShutdownHook` method of the `Runtime` class. If the hook has already been registered, this method will return `true` and the hook will be removed. If the hook has not been registered, this method will return `false` and we throw an `IllegalArgumentException`.

Next, we attempt to register the hook using the `addShutdownHook` method. If the virtual machine is already in the process of shutting down, this method will throw an `IllegalStateException`. If a security manager is present and denies the `RuntimePermission("shutdownHooks")`, this method will throw a `SecurityException`.

Finally, we catch any exceptions that may be thrown during the registration process and print an error message to the console.
------------------------------------------------------
