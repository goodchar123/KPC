
Sure, here's the updated code snippet that checks if the method is called on the AWT event dispatching thread before calling `Robot.waitForIdle()`. If it's not called on the AWT event dispatching thread, it throws an `IllegalThreadStateException`:

```java
import java.awt.AWTException;
import java.awt.EventQueue;
import java.awt.Robot;
import java.awt.Window;

public class FocusedWindowHelper {
    public static Window getFocusedWindow() {
        Window focusedWindow = null;
        try {
            Robot robot = new Robot();
            EventQueue.invokeLater(() -> {
                focusedWindow = Window.getFocusedWindow();
            });
            if (EventQueue.isDispatchThread()) {
                robot.waitForIdle();
            } else {
                throw new IllegalThreadStateException("Method called on non-EDT thread");
            }
        } catch (AWTException e) {
            e.printStackTrace();
        }
        return focusedWindow;
    }
}
```

Now, if the method is called on a non-EDT thread, it will throw an `IllegalThreadStateException`.
------------------------------------------------------
