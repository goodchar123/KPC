Please write a java method that Obtains an instance of Duration from a temporal amount.
Sure, here's an example Java method that obtains an instance of Duration from a temporal amount:

```java
import java.time.Duration;
import java.time.temporal.TemporalAmount;

public class DurationHelper {
    public static Duration getDuration(TemporalAmount amount) {
        return Duration.from(amount);
    }
}
```

This method takes a `TemporalAmount` as a parameter and returns a `Duration` instance obtained from it using the `Duration.from()` method. You can call this method from your code and pass in any `TemporalAmount` object to get a corresponding `Duration` instance.
------------------------------------------------------
Please check if unable to convert to a Duration for java.time.Duration.from(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw DateTimeException.
Please check if numeric overflow occurs for java.time.Duration.from(java.time.temporal.TemporalAmount) in the code snippet you provided, otherwise throw ArithmeticException.
Sure, here's the updated Java method that checks for exceptions:

```java
import java.time.Duration;
import java.time.temporal.TemporalAmount;
import java.time.temporal.UnsupportedTemporalTypeException;

public class DurationHelper {
    public static Duration getDuration(TemporalAmount amount) {
        try {
            return Duration.from(amount);
        } catch (UnsupportedTemporalTypeException e) {
            throw new DateTimeException("Unable to convert to a Duration", e);
        } catch (ArithmeticException e) {
            throw new ArithmeticException("Numeric overflow occurred for Duration conversion");
        }
    }
}
```

This updated method now includes exception handling for the `Duration.from()` method. If the method is unable to convert the `TemporalAmount` to a `Duration`, it will throw a `DateTimeException` with a message indicating the issue. If a numeric overflow occurs during the conversion, it will throw an `ArithmeticException` with a message indicating the issue.
------------------------------------------------------
