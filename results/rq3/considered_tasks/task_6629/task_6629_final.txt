
Sure, here's the updated Java method that checks if the text can be parsed for `java.time.MonthDay.parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)`. If the text cannot be parsed, it throws a `DateTimeParseException`:

```java
import java.time.MonthDay;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;

public class MonthDayFromString {
    public static MonthDay getMonthDayFromString(String text) throws DateTimeParseException {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("--MM-dd");
        try {
            return MonthDay.parse(text, formatter);
        } catch (DateTimeParseException e) {
            throw new DateTimeParseException("Unable to parse MonthDay from input string: " + text, text, e.getErrorIndex());
        }
    }
}
```

This method now includes a `try-catch` block to catch any `DateTimeParseException` that may occur when parsing the input string. If a `DateTimeParseException` is caught, it throws a new `DateTimeParseException` with a custom error message that includes the original input string and the error index.
------------------------------------------------------
