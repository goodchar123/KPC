List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.io.File.listFiles()`
2. `java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)`
3. `java.lang.String.endsWith(java.lang.String)`
4. `java.util.ArrayList.addAll(java.util.Collection)`

 + From response, we get: ['java.io.File.listFiles()', 'java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)', 'java.lang.String.endsWith(java.lang.String)', 'java.util.ArrayList.addAll(java.util.Collection)']
------------------------------------------------------
Is the SecurityException handled or caught for java.io.File.listFiles() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NullPointerException handled or caught for java.util.ArrayList.addAll(java.util.Collection) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `System.getSecurityManager()`
2. `SecurityManager.checkRead(String)`
3. `AccessController.doPrivileged(PrivilegedAction<T>)`
4. `Thread.currentThread().getContextClassLoader().getResource("").getPath()`
5. `File.exists()`
6. `File.listFiles()`

 + From response, we get: ['System.getSecurityManager()', 'SecurityManager.checkRead(String)', 'AccessController.doPrivileged(PrivilegedAction<T>)', 'Thread.currentThread().getContextClassLoader().getResource("").getPath()', 'File.exists()', 'File.listFiles()']
------------------------------------------------------
