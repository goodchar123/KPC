
Sure, here's an updated version of the code that includes the error checking you requested:

```java
import java.util.regex.PatternSyntaxException;

public String partiallyResolveName(String name) throws PatternSyntaxException, IndexOutOfBoundsException {
    String[] parts = name.split(" ");
    if (parts.length < 2) {
        throw new PatternSyntaxException("Invalid name format", name, -1);
    }
    String resolvedName = "";
    for (int i = 0; i < parts.length; i++) {
        if (i == 0) {
            if (parts[i].length() < 1) {
                throw new IndexOutOfBoundsException("Invalid name format");
            }
            resolvedName += parts[i].substring(0, 1).toUpperCase() + ".";
        } else {
            resolvedName += parts[i] + " ";
        }
    }
    return resolvedName.trim();
}
```

This version of the method checks for two types of errors:

1. If the input name does not contain at least two parts (i.e. a first name and a last name), a `PatternSyntaxException` is thrown with a message indicating an invalid name format.
2. If the first name is an empty string, an `IndexOutOfBoundsException` is thrown with a message indicating an invalid name format.

These error checks should help ensure that the method behaves correctly and safely in all cases.
------------------------------------------------------
