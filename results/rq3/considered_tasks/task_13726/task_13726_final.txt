
Here's the updated Java method that checks if the specified field is out of range in non-lenient mode and throws an `ArrayIndexOutOfBoundsException` if it is:

```java
public static GregorianCalendar getGregorianCalendarFromZonedDateTime(ZonedDateTime zonedDateTime) {
    // Get the year, month, and day from the ZonedDateTime object
    int year = zonedDateTime.getYear();
    int month = zonedDateTime.getMonthValue() - 1; // GregorianCalendar months are zero-based
    int day = zonedDateTime.getDayOfMonth();

    // Get the hour, minute, and second from the ZonedDateTime object
    int hour = zonedDateTime.getHour();
    int minute = zonedDateTime.getMinute();
    int second = zonedDateTime.getSecond();

    // Create a new GregorianCalendar object with the default locale
    GregorianCalendar gregorianCalendar = new GregorianCalendar();

    // Set the year, month, and day on the GregorianCalendar object
    try {
        gregorianCalendar.set(year, month, day);
    } catch (ArrayIndexOutOfBoundsException e) {
        throw new ArrayIndexOutOfBoundsException("Specified field is out of range in non-lenient mode.");
    }

    // Set the hour, minute, and second on the GregorianCalendar object
    try {
        gregorianCalendar.set(Calendar.HOUR_OF_DAY, hour);
        gregorianCalendar.set(Calendar.MINUTE, minute);
        gregorianCalendar.set(Calendar.SECOND, second);
    } catch (ArrayIndexOutOfBoundsException e) {
        throw new ArrayIndexOutOfBoundsException("Specified field is out of range in non-lenient mode.");
    }

    // Return the GregorianCalendar object
    return gregorianCalendar;
}
```

This updated method uses a try-catch block to catch any `ArrayIndexOutOfBoundsException` that may occur when setting the year, month, day, hour, minute, or second on the `GregorianCalendar` object. If an exception is caught, the method throws a new `ArrayIndexOutOfBoundsException` with a custom error message.
------------------------------------------------------
