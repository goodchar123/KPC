{"loop_id": 0, "unhandled_api_list": ["java.sql.Statement.cancel()", "java.sql.Statement.getConnection()", "java.sql.Statement.isPoolable()"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if this method is called on a closed Statement for java.sql.Statement.isPoolable() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 3}
{"loop_id": 1, "unhandled_api_list": ["java.sql.Connection.getMetaData()", "java.sql.DatabaseMetaData.supportsStatementPooling()", "java.sql.Statement.isPoolable()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed connection for java.sql.Connection.getMetaData() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs for java.sql.DatabaseMetaData.supportsStatementPooling() in the code snippet you provided, otherwise throw SQLException.", "Please check if this method is called on a closed Statement for java.sql.Statement.isPoolable() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 4}
{"loop_id": 2, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.isPoolable()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if this method is called on a closed Statement for java.sql.Statement.isPoolable() in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException."], "num_of_unhandled_exception": 3}
{"loop_id": 3, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 2}
{"loop_id": 4, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException."], "num_of_unhandled_exception": 2}
{"loop_id": 5, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 2}
{"loop_id": 6, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException."], "num_of_unhandled_exception": 2}
{"loop_id": 7, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 2}
{"loop_id": 8, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException."], "num_of_unhandled_exception": 2}
{"loop_id": 9, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 2}
{"loop_id": 10, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException."], "num_of_unhandled_exception": 2}
{"loop_id": 11, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 2}
{"loop_id": 12, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException."], "num_of_unhandled_exception": 2}
{"loop_id": 0, "unhandled_api_list": ["java.sql.Statement.cancel()", "java.sql.Statement.getConnection()", "java.sql.Statement.isPoolable()"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if this method is called on a closed Statement for java.sql.Statement.isPoolable() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 3}
{"loop_id": 1, "unhandled_api_list": ["java.sql.Connection.getMetaData()", "java.sql.DatabaseMetaData.supportsStatementPooling()", "java.sql.Statement.isPoolable()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed connection for java.sql.Connection.getMetaData() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs for java.sql.DatabaseMetaData.supportsStatementPooling() in the code snippet you provided, otherwise throw SQLException.", "Please check if this method is called on a closed Statement for java.sql.Statement.isPoolable() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 4}
{"loop_id": 2, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.DatabaseMetaData.supportsStatementPooling()", "java.sql.Statement.isPoolable()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs for java.sql.DatabaseMetaData.supportsStatementPooling() in the code snippet you provided, otherwise throw SQLException.", "Please check if this method is called on a closed Statement for java.sql.Statement.isPoolable() in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException."], "num_of_unhandled_exception": 4}
{"loop_id": 3, "unhandled_api_list": ["java.sql.Statement.getConnection()", "java.sql.DatabaseMetaData.supportsStatementPooling()", "java.sql.Statement.isPoolable()"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs for java.sql.DatabaseMetaData.supportsStatementPooling() in the code snippet you provided, otherwise throw SQLException.", "Please check if this method is called on a closed Statement for java.sql.Statement.isPoolable() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 3}
{"loop_id": 4, "unhandled_api_list": ["java.sql.Statement.isClosed()", "java.sql.Statement.getConnection()", "java.sql.Connection.isClosed()", "java.sql.DatabaseMetaData.supportsStatementPooling()", "java.sql.Statement.isPoolable()", "java.sql.Statement.cancel()"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check if a database access error occurs for java.sql.Statement.isClosed() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs or this method is called on a closed Statement for java.sql.Statement.getConnection() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs for java.sql.Connection.isClosed() in the code snippet you provided, otherwise throw SQLException.", "Please check if a database access error occurs for java.sql.DatabaseMetaData.supportsStatementPooling() in the code snippet you provided, otherwise throw SQLException.", "Please check if this method is called on a closed Statement for java.sql.Statement.isPoolable() in the code snippet you provided, otherwise throw SQLException.", "Please check if the JDBC driver does not support this method for java.sql.Statement.cancel() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException."], "num_of_unhandled_exception": 6}
{"loop_id": 5, "unhandled_api_list": ["java.sql.DatabaseMetaData.supportsStatementPooling()"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if a database access error occurs for java.sql.DatabaseMetaData.supportsStatementPooling() in the code snippet you provided, otherwise throw SQLException."], "num_of_unhandled_exception": 1}
{"loop_id": 6, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
