
Sure, here's an updated version of the method that checks for an `IOException` when writing to the output stream:

```java
public void updateDigestAndWriteToOutputStream(byte b, MessageDigest digest, OutputStream outputStream) throws IOException {
    if (digest != null) {
        digest.update(b);
    }
    try {
        outputStream.write(b);
    } catch (IOException e) {
        throw new IOException("Error writing to output stream", e);
    }
}
```

This version of the method uses a `try-catch` block to catch any `IOException` that may be thrown when writing to the output stream. If an `IOException` is caught, the method throws a new `IOException` with a message indicating that there was an error writing to the output stream, and including the original `IOException` as the cause.

This way, if an `IOException` occurs, the method will throw an exception that includes information about the error, rather than simply propagating the original exception.
------------------------------------------------------
