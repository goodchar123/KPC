
Sure, here's the updated Java method that checks for the `NO_MODIFICATION_ALLOWED_ERR`, `NOT_FOUND_ERR`, and `NOT_SUPPORTED_ERR` exceptions when removing an element from a document:

```java
public static void removeElement(Document doc, Element element) throws DOMException {
    Node parent = element.getParentNode();
    if (parent != null) {
        try {
            parent.removeChild(element);
        } catch (DOMException e) {
            if (e.code == DOMException.NO_MODIFICATION_ALLOWED_ERR) {
                throw new DOMException(DOMException.NO_MODIFICATION_ALLOWED_ERR, "The node is readonly.");
            } else if (e.code == DOMException.NOT_FOUND_ERR) {
                throw new DOMException(DOMException.NOT_FOUND_ERR, "The oldChild is not a child of this node.");
            } else if (e.code == DOMException.NOT_SUPPORTED_ERR) {
                throw new DOMException(DOMException.NOT_SUPPORTED_ERR, "The removal of the DocumentType child or the Element child is not supported.");
            } else {
                throw e;
            }
        }
    }
}
```

This method now throws a `DOMException` if any of the specified exceptions occur when removing the element from the document.
------------------------------------------------------
