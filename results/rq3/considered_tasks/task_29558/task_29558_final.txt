
Sure, here's the updated Java method that checks for the conditions you mentioned and throws an `IndexOutOfBoundsException` if any of them are true:

```java
public String fetchText(String document, int startIndex, int endIndex) {
    if (startIndex < 0 || endIndex > document.length() || startIndex > endIndex) {
        throw new IndexOutOfBoundsException();
    }
    return document.substring(startIndex, endIndex);
}
```

This updated method first checks if `startIndex` is negative, or if `endIndex` is larger than the length of the `document` string, or if `startIndex` is larger than `endIndex`. If any of these conditions are true, it throws an `IndexOutOfBoundsException`.

If none of these conditions are true, the method uses the `substring` method of the `String` class to extract the text between the specified indices and returns it as a new string.

You can call this method like this:

```java
String document = "This is a sample document.";
int startIndex = 5;
int endIndex = 16;

try {
    String text = fetchText(document, startIndex, endIndex);
    System.out.println(text); // Output: "is a sample"
} catch (IndexOutOfBoundsException e) {
    System.out.println("Invalid indices
------------------------------------------------------
