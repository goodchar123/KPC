List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.security.cert.CertPathValidator.getInstance(java.lang.String)`
2. `java.security.cert.CertPathValidator.validate(java.security.cert.CertPath, java.security.cert.CertPathParameters)`
3. `java.security.cert.CertPath.getInstance(java.lang.String)`
4. `java.security.cert.CertPath.init(java.security.cert.Certificate[])`
5. `java.security.cert.PKIXParameters.setRevocationEnabled(boolean)`
6. `java.security.cert.CertPathValidatorException.getCause()`
7. `java.security.cert.CertPathValidatorException.getReason()`

 + From response, we get: ['java.security.cert.CertPathValidator.getInstance(java.lang.String)', 'java.security.cert.CertPathValidator.validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)', 'java.security.cert.CertPath.getInstance(java.lang.String)', 'java.security.cert.CertPath.init(java.security.cert.Certificate[])', 'java.security.cert.PKIXParameters.setRevocationEnabled(boolean)', 'java.security.cert.CertPathValidatorException.getCause()', 'java.security.cert.CertPathValidatorException.getReason()']
------------------------------------------------------
Is the NoSuchAlgorithmException handled or caught for java.security.cert.CertPathValidator.getInstance(java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NullPointerException handled or caught for java.security.cert.CertPathValidator.getInstance(java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the CertPathValidatorException handled or caught for java.security.cert.CertPathValidator.validate(java.security.cert.CertPath,java.security.cert.CertPathParameters) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
Is the InvalidAlgorithmParameterException handled or caught for java.security.cert.CertPathValidator.validate(java.security.cert.CertPath,java.security.cert.CertPathParameters) in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.security.cert.CertPath.getInstance(String type)`
2. `java.security.cert.CertPath.init(Certificate[] certificates)`
3. `java.security.cert.PKIXParameters.setRevocationEnabled(boolean val)`
4. `java.security.cert.CertPathValidator.getInstance(String algorithm)`
5. `java.security.cert.CertPathValidator.validate(CertPath certPath, CertPathParameters params)`
6. `java.security.cert.CertPathValidatorException.getReason()`

 + From response, we get: ['java.security.cert.CertPath.getInstance(Stringtype)', 'java.security.cert.CertPath.init(Certificate[]certificates)', 'java.security.cert.PKIXParameters.setRevocationEnabled(booleanval)', 'java.security.cert.CertPathValidator.getInstance(Stringalgorithm)', 'java.security.cert.CertPathValidator.validate(CertPathcertPath,CertPathParametersparams)', 'java.security.cert.CertPathValidatorException.getReason()']
------------------------------------------------------
