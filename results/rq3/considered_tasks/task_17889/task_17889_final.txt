
Sure, here's the updated Java method that checks if the `position` parameter is outside the specified range for `javax.naming.Name.add(int,java.lang.String)` and throws an `ArrayIndexOutOfBoundsException` if it is:

```java
public static Name addComponent(Name name, String component, int position) throws InvalidNameException, ArrayIndexOutOfBoundsException {
    int size = name.size();
    if (position < 0 || position > size) {
        throw new ArrayIndexOutOfBoundsException("Position " + position + " is outside the range [0, " + size + "]");
    }
    Name newName = (Name) name.clone();
    newName.add(position, component);
    return newName;
}
```

This updated method first checks if the `position` parameter is less than 0 or greater than the size of the name. If it is, it throws an `ArrayIndexOutOfBoundsException` with a message indicating the invalid position and the valid range of positions.

If the position is valid, the method proceeds to create a clone of the original name and add the new component at the specified position using the `add()` method of the `Name` class. Finally, it returns the new composite name with the added component.
------------------------------------------------------
