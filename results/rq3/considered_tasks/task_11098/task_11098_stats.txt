{"loop_id": 0, "unhandled_api_list": ["java.nio.channels.FileChannel.lock(long,long,boolean)", "java.nio.channels.FileChannel.lock(long,long,boolean)", "java.nio.channels.FileChannel.lock(long,long,boolean)", "java.nio.channels.FileChannel.lock(long,long,boolean)", "java.nio.channels.FileChannel.lock(long,long,boolean)", "java.nio.channels.FileChannel.lock(long,long,boolean)", "java.nio.channels.FileChannel.lock(long,long,boolean)", "java.nio.channels.FileLock.release()", "java.nio.channels.FileLock.release()"], "num_of_unhandled_api": 9, "unhandled_exception_list": ["Please check If the preconditions on the parameters do not hold for java.nio.channels.FileChannel.lock(long,long,boolean) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check If this channel is closed for java.nio.channels.FileChannel.lock(long,long,boolean) in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If another thread closes this channel while the invoking          thread is blocked in this method for java.nio.channels.FileChannel.lock(long,long,boolean) in the code snippet you provided, otherwise throw AsynchronousCloseException.", "Please check If the invoking thread is interrupted while blocked in this          method for java.nio.channels.FileChannel.lock(long,long,boolean) in the code snippet you provided, otherwise throw FileLockInterruptionException.", "Please check If a lock that overlaps the requested region is already held by          this Java virtual machine, or if another thread is already          blocked in this method and is attempting to lock an overlapping          region for java.nio.channels.FileChannel.lock(long,long,boolean) in the code snippet you provided, otherwise throw OverlappingFileLockException.", "Please check If shared is true this channel was not          opened for reading for java.nio.channels.FileChannel.lock(long,long,boolean) in the code snippet you provided, otherwise throw NonReadableChannelException.", "Please check If shared is false but this channel was not          opened for writing for java.nio.channels.FileChannel.lock(long,long,boolean) in the code snippet you provided, otherwise throw NonWritableChannelException.", "Please check If the channel that was used to acquire this lock          is no longer open for java.nio.channels.FileLock.release() in the code snippet you provided, otherwise throw ClosedChannelException.", "Please check If an I/O error occurs for java.nio.channels.FileLock.release() in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 9}
{"loop_id": 1, "unhandled_api_list": ["java.nio.channels.FileChannel.lock(long,long,boolean)", "java.nio.channels.FileLock.release()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check If the preconditions on the parameters do not hold for java.nio.channels.FileChannel.lock(long,long,boolean) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check If an I/O error occurs for java.nio.channels.FileLock.release() in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 2}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
