
Sure, here's the updated Java method that checks if the key agreement has been initialized and if doPhase has been called to supply the keys for all parties in the agreement before generating the shared secret using `javax.crypto.KeyAgreement.generateSecret()`. If the key agreement has not been initialized or if doPhase has not been called to supply the keys for all parties in the agreement, it throws an `IllegalStateException`:

```java
import javax.crypto.KeyAgreement;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;

public class SharedSecretGenerator {

    public static SecretKey generateSharedSecret(String algorithm) throws NoSuchAlgorithmException {
        // Generate key pair for the key agreement
        KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("DH");
        keyPairGenerator.initialize(2048);
        KeyPair keyPair = keyPairGenerator.generateKeyPair();

        // Initialize key agreement with private key
        KeyAgreement keyAgreement = KeyAgreement.getInstance("DH");
        keyAgreement.init(keyPair.getPrivate());

        // Generate shared secret
        if (!keyAgreement.getAlgorithm().equals("DH")) {
            throw new IllegalStateException("Key agreement is not using DH algorithm");
        }
       
------------------------------------------------------
