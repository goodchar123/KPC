{"loop_id": 0, "unhandled_api_list": ["org.w3c.dom.Element.setAttributeNode(org.w3c.dom.Attr)", "org.w3c.dom.Document.createAttribute(java.lang.String)", "org.w3c.dom.Attr.setValue(java.lang.String)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check WRONG_DOCUMENT_ERR: Raised if newAttr was created from a   different document than the one that created the element.   NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.   INUSE_ATTRIBUTE_ERR: Raised if newAttr is already an   attribute of another Element object. The DOM user must   explicitly clone Attr nodes to re use them in other   elements. for org.w3c.dom.Element.setAttributeNode(org.w3c.dom.Attr) in the code snippet you provided, otherwise throw DOMException.", "Please check INVALID_CHARACTER_ERR: Raised if the specified name is not an XML   name according to the XML version in use specified in the   Document.xmlVersion attribute. for org.w3c.dom.Document.createAttribute(java.lang.String) in the code snippet you provided, otherwise throw DOMException.", "Please check NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly. for org.w3c.dom.Attr.setValue(java.lang.String) in the code snippet you provided, otherwise throw DOMException."], "num_of_unhandled_exception": 3}
{"loop_id": 1, "unhandled_api_list": ["org.w3c.dom.Document.createAttributeNS(java.lang.String,java.lang.String)", "org.w3c.dom.Attr.setValue(java.lang.String)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check INVALID_CHARACTER_ERR: Raised if the specified   qualifiedName is not an XML name according to the XML   version in use specified in the Document.xmlVersion   attribute.   NAMESPACE_ERR: Raised if the qualifiedName is a   malformed qualified name, if the qualifiedName has a   prefix and the namespaceURI is null, if   the qualifiedName has a prefix that is \"xml\" and the   namespaceURI is different from \"   http://www.w3.org/XML/1998/namespace\", if the qualifiedName or its prefix is \"xmlns\" and the   namespaceURI is different from \"http://www.w3.org/2000/xmlns/\", or if the namespaceURI is \"http://www.w3.org/2000/xmlns/\" and neither the qualifiedName nor its prefix is \"xmlns\".   NOT_SUPPORTED_ERR: Always thrown if the current document does not   support the \"XML\" feature, since namespaces were   defined by XML. for org.w3c.dom.Document.createAttributeNS(java.lang.String,java.lang.String) in the code snippet you provided, otherwise throw DOMException.", "Please check NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly. for org.w3c.dom.Attr.setValue(java.lang.String) in the code snippet you provided, otherwise throw DOMException."], "num_of_unhandled_exception": 2}
{"loop_id": 2, "unhandled_api_list": ["org.w3c.dom.Attr.setValue(java.lang.String)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly. for org.w3c.dom.Attr.setValue(java.lang.String) in the code snippet you provided, otherwise throw DOMException."], "num_of_unhandled_exception": 1}
{"loop_id": 3, "unhandled_api_list": ["org.w3c.dom.Document.createAttributeNS(java.lang.String,java.lang.String)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check INVALID_CHARACTER_ERR: Raised if the specified   qualifiedName is not an XML name according to the XML   version in use specified in the Document.xmlVersion   attribute.   NAMESPACE_ERR: Raised if the qualifiedName is a   malformed qualified name, if the qualifiedName has a   prefix and the namespaceURI is null, if   the qualifiedName has a prefix that is \"xml\" and the   namespaceURI is different from \"   http://www.w3.org/XML/1998/namespace\", if the qualifiedName or its prefix is \"xmlns\" and the   namespaceURI is different from \"http://www.w3.org/2000/xmlns/\", or if the namespaceURI is \"http://www.w3.org/2000/xmlns/\" and neither the qualifiedName nor its prefix is \"xmlns\".   NOT_SUPPORTED_ERR: Always thrown if the current document does not   support the \"XML\" feature, since namespaces were   defined by XML. for org.w3c.dom.Document.createAttributeNS(java.lang.String,java.lang.String) in the code snippet you provided, otherwise throw DOMException."], "num_of_unhandled_exception": 1}
{"loop_id": 4, "unhandled_api_list": ["org.w3c.dom.Attr.setValue(java.lang.String)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly. for org.w3c.dom.Attr.setValue(java.lang.String) in the code snippet you provided, otherwise throw DOMException."], "num_of_unhandled_exception": 1}
{"loop_id": 5, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
