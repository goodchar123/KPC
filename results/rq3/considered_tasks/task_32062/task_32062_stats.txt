{"loop_id": 0, "unhandled_api_list": ["javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check if the writer does not support compression, or does not support the requested mode. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if mode is not one of the modes listed above. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the set of legal compression types is non null and the current compression type is null. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if quality is not between 0 and 1, inclusive. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 6}
{"loop_id": 1, "unhandled_api_list": ["javax.imageio.ImageIO.read(java.io.File)", "javax.imageio.ImageIO.read(java.io.File)", "javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.getCompressionType()", "javax.imageio.ImageWriteParam.getCompressionType()", "javax.imageio.ImageWriteParam.setCompressionType(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionType(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionType(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionType(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.metadata.IIOMetadata.getAsTree(java.lang.String)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"], "num_of_unhandled_api": 18, "unhandled_exception_list": ["Please check if input is null. for javax.imageio.ImageIO.read(java.io.File) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during reading or when not able to create required ImageInputStream. for javax.imageio.ImageIO.read(java.io.File) in the code snippet you provided, otherwise throw IOException.", "Please check if formatName is null. for javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression, or does not support the requested mode. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if mode is not one of the modes listed above. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.getCompressionType() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.getCompressionType() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.setCompressionType(java.lang.String) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.setCompressionType(java.lang.String) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if there are no settable compression types. for javax.imageio.ImageWriteParam.setCompressionType(java.lang.String) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if compressionType is non null but is not one of the values returned by getCompressionTypes. for javax.imageio.ImageWriteParam.setCompressionType(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the set of legal compression types is non null and the current compression type is null. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if formatName is null or is not one of the names returned by getMetadataFormatNames. for javax.imageio.metadata.IIOMetadata.getAsTree(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the output has not been set. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if image contains a Raster and canWriteRasters returns false. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if image is null. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during writing. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IOException."], "num_of_unhandled_exception": 18}
{"loop_id": 2, "unhandled_api_list": ["javax.imageio.ImageIO.read(java.io.File)", "javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionMode(int)", "javax.imageio.ImageWriteParam.getCompressionType()", "javax.imageio.ImageWriteParam.getCompressionType()", "javax.imageio.ImageWriteParam.setCompressionType(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionType(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionType(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionType(java.lang.String)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.ImageWriteParam.setCompressionQuality(float)", "javax.imageio.metadata.IIOMetadata.getAsTree(java.lang.String)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)", "javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam)"], "num_of_unhandled_api": 16, "unhandled_exception_list": ["Please check if input is null. for javax.imageio.ImageIO.read(java.io.File) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if formatName is null. for javax.imageio.ImageIO.getImageWritersByFormatName(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if mode is not one of the modes listed above. for javax.imageio.ImageWriteParam.setCompressionMode(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.getCompressionType() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.getCompressionType() in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.setCompressionType(java.lang.String) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.setCompressionType(java.lang.String) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if there are no settable compression types. for javax.imageio.ImageWriteParam.setCompressionType(java.lang.String) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if compressionType is non null but is not one of the values returned by getCompressionTypes. for javax.imageio.ImageWriteParam.setCompressionType(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the writer does not support compression. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the compression mode is not MODE_EXPLICIT. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the set of legal compression types is non null and the current compression type is null. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if quality is not between 0 and 1, inclusive. for javax.imageio.ImageWriteParam.setCompressionQuality(float) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if formatName is null or is not one of the names returned by getMetadataFormatNames. for javax.imageio.metadata.IIOMetadata.getAsTree(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the output has not been set. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if image is null. for javax.imageio.ImageWriter.write(javax.imageio.metadata.IIOMetadata,javax.imageio.IIOImage,javax.imageio.ImageWriteParam) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 16}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
