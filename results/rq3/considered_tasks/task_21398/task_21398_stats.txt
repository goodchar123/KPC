{"loop_id": 0, "unhandled_api_list": ["java.sql.SQLXML.getBinaryStream()", "java.io.InputStream.read(byte[])", "java.io.ByteArrayOutputStream.write(byte[],int,int)", "java.io.ByteArrayOutputStream.write(byte[],int,int)"], "num_of_unhandled_api": 4, "unhandled_exception_list": ["Please check if the JDBC driver does not support this method for java.sql.SQLXML.getBinaryStream() in the code snippet you provided, otherwise throw SQLFeatureNotSupportedException.", "Please check if b is null. for java.io.InputStream.read(byte[]) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if b is null. for java.io.ByteArrayOutputStream.write(byte[],int,int) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if off is negative, len is negative, or len is greater than b.length   off for java.io.ByteArrayOutputStream.write(byte[],int,int) in the code snippet you provided, otherwise throw IndexOutOfBoundsException."], "num_of_unhandled_exception": 4}
{"loop_id": 1, "unhandled_api_list": ["java.sql.SQLXML.getBinaryStream()", "java.io.InputStream.read(byte[])", "java.io.ByteArrayOutputStream.toString(java.lang.String)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if there is an error processing the XML value.   An exception is thrown if the state is not readable. for java.sql.SQLXML.getBinaryStream() in the code snippet you provided, otherwise throw SQLException.", "Please check if b is null. for java.io.InputStream.read(byte[]) in the code snippet you provided, otherwise throw NullPointerException.", "Please check If the named charset is not supported for java.io.ByteArrayOutputStream.toString(java.lang.String) in the code snippet you provided, otherwise throw UnsupportedEncodingException."], "num_of_unhandled_exception": 3}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
