
Sure, here's an updated version of the `readPropertyList` method that includes the requested error checking:

```java
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

public class PropertyListReader {
    public static Properties readPropertyList(InputStream inputStream) throws IOException {
        if (inputStream == null) {
            throw new NullPointerException("Input stream cannot be null");
        }
        
        Properties properties = new Properties();
        try {
            properties.load(inputStream);
        } catch (IllegalArgumentException e) {
            throw new IllegalArgumentException("Malformed Unicode escape sequence in input stream", e);
        }
        return properties;
    }
}
```

This updated method first checks if the `inputStream` parameter is null, and throws a `NullPointerException` if it is. It then attempts to read the input stream using the `load()` method of the `Properties` class. If a `IllegalArgumentException` is thrown due to a malformed Unicode escape sequence, the method throws a new `IllegalArgumentException` with a more descriptive error message and the original exception as the
------------------------------------------------------
