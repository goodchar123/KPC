List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.time.temporal.Temporal.isSupported(java.time.temporal.TemporalField)`
2. `java.time.temporal.Temporal.get(java.time.temporal.TemporalField)`
3. `java.time.temporal.Temporal.with(java.time.temporal.TemporalField, long)`

 + From response, we get: ['java.time.temporal.Temporal.isSupported(java.time.temporal.TemporalField)', 'java.time.temporal.Temporal.get(java.time.temporal.TemporalField)', 'java.time.temporal.Temporal.with(java.time.temporal.TemporalField,long)']
------------------------------------------------------
Is the DateTimeException handled or caught for java.time.temporal.Temporal.with(java.time.temporal.TemporalField,long) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the UnsupportedTemporalTypeException handled or caught for java.time.temporal.Temporal.with(java.time.temporal.TemporalField,long) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the ArithmeticException handled or caught for java.time.temporal.Temporal.with(java.time.temporal.TemporalField,long) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `temporal.isSupported(java.time.temporal.ChronoField.ERA)`
2. `object.isSupported(java.time.temporal.ChronoField.ERA)`
3. `object.get(java.time.temporal.ChronoField.ERA)`
4. `temporal.with(java.time.temporal.ChronoField.ERA, int)` 
5. `DateTimeException(java.lang.String, java.lang.Throwable)`
6. `UnsupportedTemporalTypeException(java.lang.String, java.lang.Throwable)`
7. `ArithmeticException(java.lang.String, java.lang.Throwable)`

 + From response, we get: ['temporal.isSupported(java.time.temporal.ChronoField.ERA)', 'object.isSupported(java.time.temporal.ChronoField.ERA)', 'object.get(java.time.temporal.ChronoField.ERA)', 'temporal.with(java.time.temporal.ChronoField.ERA,int)', 'DateTimeException(java.lang.String,java.lang.Throwable)', 'UnsupportedTemporalTypeException(java.lang.String,java.lang.Throwable)', 'ArithmeticException(java.lang.String,java.lang.Throwable)']
------------------------------------------------------
