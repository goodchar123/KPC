{"loop_id": 0, "unhandled_api_list": ["java.time.LocalDate.of(int,int,int)", "java.time.format.DateTimeFormatter.ofPattern(java.lang.String)", "java.time.LocalDate.format(java.time.format.DateTimeFormatter)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if the value of any field is out of range,  or if the day of month is invalid for the month year for java.time.LocalDate.of(int,int,int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the pattern is invalid for java.time.format.DateTimeFormatter.ofPattern(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during printing for java.time.LocalDate.format(java.time.format.DateTimeFormatter) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 3}
{"loop_id": 1, "unhandled_api_list": ["java.time.LocalDate.of(int,int,int)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if the value of any field is out of range,  or if the day of month is invalid for the month year for java.time.LocalDate.of(int,int,int) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 1}
{"loop_id": 2, "unhandled_api_list": ["java.time.LocalDate.of(int,java.time.Month,int)", "java.time.format.DateTimeFormatter.ofPattern(java.lang.String)", "java.time.LocalDate.format(java.time.format.DateTimeFormatter)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if the value of any field is out of range,  or if the day of month is invalid for the month year for java.time.LocalDate.of(int,java.time.Month,int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the pattern is invalid for java.time.format.DateTimeFormatter.ofPattern(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if an error occurs during printing for java.time.LocalDate.format(java.time.format.DateTimeFormatter) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 3}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
