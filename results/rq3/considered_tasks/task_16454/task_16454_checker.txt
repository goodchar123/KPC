List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.util.concurrent.locks.ReentrantLock.getLock()`
2. `java.lang.Object.wait()`
3. `java.lang.Object.notifyAll()`
4. `java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.getWaitQueue()`
5. `java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)`

 + From response, we get: ['java.util.concurrent.locks.ReentrantLock.getLock()', 'java.lang.Object.wait()', 'java.lang.Object.notifyAll()', 'java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.getWaitQueue()', 'java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)']
------------------------------------------------------
Is the IllegalMonitorStateException handled or caught for java.lang.Object.wait() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the InterruptedException handled or caught for java.lang.Object.wait() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalMonitorStateException handled or caught for java.lang.Object.notifyAll() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.util.concurrent.locks.ReentrantLock.getLock()`
2. `java.lang.Thread.currentThread()`
3. `java.util.concurrent.locks.AbstractQueuedSynchronizer.getExclusiveOwnerThread()`
4. `java.lang.Thread.interrupted()`
5. `java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.getWaitQueue()`
6. `java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)`

 + From response, we get: ['java.util.concurrent.locks.ReentrantLock.getLock()', 'java.lang.Thread.currentThread()', 'java.util.concurrent.locks.AbstractQueuedSynchronizer.getExclusiveOwnerThread()', 'java.lang.Thread.interrupted()', 'java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.getWaitQueue()', 'java.util.concurrent.locks.AbstractQueuedSynchronizer.addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node)']
------------------------------------------------------
