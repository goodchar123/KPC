
Here is the updated Java method that checks for null and invalid URIs:

```java
import java.net.URI;
import java.net.URISyntaxException;

public class URITest {
    public static void main(String[] args) {
        String baseURI = "http://example.com/path/";
        String relativeURI = "../file.txt";
        URI resolvedURI = resolveURI(baseURI, relativeURI);
        System.out.println(resolvedURI);
    }

    public static URI resolveURI(String baseURI, String relativeURI) {
        if (baseURI == null || relativeURI == null) {
            throw new NullPointerException("URI cannot be null");
        }
        try {
            URI base = new URI(baseURI);
            URI resolved = base.resolve(relativeURI);
            return resolved;
        } catch (URISyntaxException e) {
            throw new IllegalArgumentException("Invalid URI", e);
        }
    }
}
```

In this updated example, the `resolveURI` method first checks if either the base URI or the relative URI is null. If either is null, it throws a `NullPointerException` with a message indicating that the URI cannot be null.

Next, the method creates a new `URI` object from the base URI and uses the `resolve` method to resolve the relative URI against the base URI. If the relative URI violates RFC 2396, the `URI` constructor will throw a `URISyntaxException`. In this case, the method catches the exception and throws an `IllegalArgumentException` with a message indicating that the URI is invalid, along with the original exception as the cause.
------------------------------------------------------
