{"loop_id": 0, "unhandled_api_list": ["java.util.List.remove(java.lang.Object)", "java.util.List.remove(java.lang.Object)", "java.util.List.remove(java.lang.Object)", "java.lang.Object.wait(long,int)", "java.lang.Object.wait(long,int)", "java.lang.Object.wait(long,int)", "java.lang.Object.wait(long)", "java.lang.Object.wait(long)", "java.lang.Object.wait(long)", "java.lang.Object.wait()", "java.lang.Object.wait()", "java.lang.Object.notifyAll()", "java.lang.Object.notify()"], "num_of_unhandled_api": 13, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the remove operation         is not supported by this list for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if timeoutMillis is negative,         or if the value of nanos is out of range for java.lang.Object.wait(long,int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the current thread is not         the owner of the object's monitor for java.lang.Object.wait(long,int) in the code snippet you provided, otherwise throw IllegalMonitorStateException.", "Please check if any thread interrupted the current thread before or         while the current thread was waiting. The interrupted status of the         current thread is cleared when this exception is thrown. for java.lang.Object.wait(long,int) in the code snippet you provided, otherwise throw InterruptedException.", "Please check if timeoutMillis is negative for java.lang.Object.wait(long) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the current thread is not         the owner of the object's monitor for java.lang.Object.wait(long) in the code snippet you provided, otherwise throw IllegalMonitorStateException.", "Please check if any thread interrupted the current thread before or         while the current thread was waiting. The interrupted status of the         current thread is cleared when this exception is thrown. for java.lang.Object.wait(long) in the code snippet you provided, otherwise throw InterruptedException.", "Please check if the current thread is not         the owner of the object's monitor for java.lang.Object.wait() in the code snippet you provided, otherwise throw IllegalMonitorStateException.", "Please check if any thread interrupted the current thread before or         while the current thread was waiting. The interrupted status of the         current thread is cleared when this exception is thrown. for java.lang.Object.wait() in the code snippet you provided, otherwise throw InterruptedException.", "Please check if the current thread is not               the owner of this object's monitor. for java.lang.Object.notifyAll() in the code snippet you provided, otherwise throw IllegalMonitorStateException.", "Please check if the current thread is not               the owner of this object's monitor. for java.lang.Object.notify() in the code snippet you provided, otherwise throw IllegalMonitorStateException."], "num_of_unhandled_exception": 13}
{"loop_id": 1, "unhandled_api_list": ["java.util.List.contains(java.lang.Object)", "java.util.List.contains(java.lang.Object)", "java.util.List.remove(java.lang.Object)", "java.lang.Object.wait(long,int)", "java.lang.Object.wait(long,int)", "java.lang.Object.notifyAll()", "java.lang.Object.notify()"], "num_of_unhandled_api": 7, "unhandled_exception_list": ["Please check if the type of the specified element         is incompatible with this list (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.contains(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the specified element is null and this         list does not permit null elements (optional) for java.util.List.remove(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if timeoutMillis is negative,         or if the value of nanos is out of range for java.lang.Object.wait(long,int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the current thread is not         the owner of the object's monitor for java.lang.Object.wait(long,int) in the code snippet you provided, otherwise throw IllegalMonitorStateException.", "Please check if the current thread is not               the owner of this object's monitor. for java.lang.Object.notifyAll() in the code snippet you provided, otherwise throw IllegalMonitorStateException.", "Please check if the current thread is not               the owner of this object's monitor. for java.lang.Object.notify() in the code snippet you provided, otherwise throw IllegalMonitorStateException."], "num_of_unhandled_exception": 7}
{"loop_id": 2, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
