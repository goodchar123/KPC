
Sure, here's the updated code snippet that includes the error handling you requested:

```java
public String getColumnName(int columnNumber) throws SQLException {
    String columnName = null;
    try {
        ResultSetMetaData metaData = resultSet.getMetaData();
        int columnCount = metaData.getColumnCount();
        if (columnNumber > 0 && columnNumber <= columnCount) {
            columnName = metaData.getColumnName(columnNumber);
        } else {
            throw new SQLException("Invalid column number");
        }
    } catch (SQLException e) {
        throw new SQLException("Error retrieving column name: " + e.getMessage());
    }
    if (columnName == null) {
        throw new SQLException("Error retrieving column name");
    }
    return columnName;
}
```

In this updated code, we added a try-catch block to handle any `SQLException` that may occur when calling `getColumnName()`. If an exception occurs, we throw a new `SQLException` with an appropriate error message.

We also check if the `columnName` variable is still `null` after attempting to retrieve the column name. If it is `null`, we throw a `SQLException` with an appropriate error message indicating that there was an error retrieving the column name.
------------------------------------------------------
