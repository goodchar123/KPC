List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `org.w3c.dom.Element.getElementsByTagName("*")`
2. `org.w3c.dom.Element.getLocalName()`
3. `org.w3c.dom.Element.getNamespaceURI()`
4. `java.util.List.add(E)`
5. `java.util.List.size()`

 + From response, we get: ['org.w3c.dom.Element.getElementsByTagName("*")', 'org.w3c.dom.Element.getLocalName()', 'org.w3c.dom.Element.getNamespaceURI()', 'java.util.List.add(E)', 'java.util.List.size()']
------------------------------------------------------
Is the UnsupportedOperationException handled or caught for java.util.List.add(E) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the ClassCastException handled or caught for java.util.List.add(E) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NullPointerException handled or caught for java.util.List.add(E) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalArgumentException handled or caught for java.util.List.add(E) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `element.getElementsByTagName("*")` - `getElementsByTagName(java.lang.String)`
2. `descendants.item(i)` - `item(int)`
3. `descendant.getLocalName()` - `getLocalName()`
4. `descendant.getNamespaceURI()` - `getNamespaceURI()`
5. `matchingElements.get(index)` - `get(int)`
6. `matchingElements.size()` - `size()`
7. `matchingElements.set(index, e)` - `set(int, E)`
8. `matchingElements.add(index, e)` - `add(int, E)`
9. `throw new ClassCastException("The class of the specified element prevents it from being added to this list")` - `ClassCastException`
10. `throw new NullPointerException("This list does not permit null elements")` - `NullPointerException`
11. `throw new IllegalArgumentException("Some property of this element prevents it from being added to this list")` - `IllegalArgumentException`
12. `throw new UnsupportedOperationException("setNamedItem() is not supported by this list")` - `UnsupportedOperationException`
13. `throw new UnsupportedOperationException("removeNamedItem() is not supported by this list")` - `UnsupportedOperationException`

 + From response, we get: ['element.getElementsByTagName("*")', 'descendants.item(i)', 'descendant.getLocalName()', 'descendant.getNamespaceURI()', 'matchingElements.get(index)', 'matchingElements.size()', 'matchingElements.set(index,e)', 'matchingElements.add(index,e)', 'thrownewClassCastException("Theclassofthespecifiedelementpreventsitfrombeingaddedtothislist")', 'thrownewNullPointerException("Thislistdoesnotpermitnullelements")', 'thrownewIllegalArgumentException("Somepropertyofthiselementpreventsitfrombeingaddedtothislist")', 'thrownewUnsupportedOperationException("setNamedItem()isnotsupportedbythislist")', 'thrownewUnsupportedOperationException("removeNamedItem()isnotsupportedbythislist")']
------------------------------------------------------
