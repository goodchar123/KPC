
Sure, here's the updated code snippet that checks for database access errors and closed result sets:

```java
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;

public class MyClass {
    public static String getClassName(ResultSet rs, int column) throws SQLException {
        if (rs.isClosed()) {
            throw new SQLException("Result set is closed");
        }
        ResultSetMetaData metaData = rs.getMetaData();
        if (metaData == null) {
            throw new SQLException("Result set metadata is null");
        }
        try {
            String className = metaData.getColumnClassName(column);
            return className;
        } catch (SQLException e) {
            throw new SQLException("Error getting column class name", e);
        }
    }
}
```

This updated method first checks if the result set is closed, and throws a `SQLException` if it is. It also checks if the result set metadata is null, and throws a `SQLException` if it is. Finally, it catches any `SQLException` thrown by `getColumnClassName` and re-throws it with a more informative error message.
------------------------------------------------------
