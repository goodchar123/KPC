
Sure, here's an updated version of the Java method that includes the requested checks:

```java
import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.InvalidAttributesException;
import javax.naming.NamingException;

public class BindObject {

    public static void bindObject(String name, Object obj, String attribute) throws NamingException {
        Context context = new InitialContext();
        
        // Check if object supplied all mandatory attributes
        if (obj instanceof javax.naming.spi.DirObjectFactory) {
            javax.naming.spi.DirObjectFactory factory = (javax.naming.spi.DirObjectFactory) obj;
            javax.naming.directory.Attributes mandatoryAttrs = factory.getAttributes(obj, null);
            if (mandatoryAttrs != null && !mandatoryAttrs.isEmpty()) {
                throw new InvalidAttributesException("Object did not supply all mandatory attributes");
            }
        }
        
        try {
            context.rebind(name, obj);
        } catch (NamingException e) {
            // Throw NamingException if encountered
            throw new NamingException("Error rebinding object to name: " + name, e);
        }
        
        try {
            context.addToEnvironment(name, attribute);
        } catch (NamingException e) {
            // Throw NamingException if encountered
            throw new NamingException("Error adding attribute to binding: " + attribute, e);
        }
    }
}
```

This updated method first checks if the object supplied all mandatory attributes by checking if it implements the `javax.naming.spi.DirObjectFactory` interface. If it does, it calls the `getAttributes` method to retrieve the mandatory attributes and throws an `InvalidAttributesException` if any are missing.

Next, it tries to rebind the object to the specified name using the `rebind` method. If a `NamingException` is encountered, it throws a new `NamingException` with a more descriptive error message.

Finally, it tries to add the specified attribute to the binding using the `addToEnvironment` method. If a `NamingException` is encountered, it throws a new `NamingException` with a more descriptive error message.

I hope this updated version meets your requirements!
------------------------------------------------------
