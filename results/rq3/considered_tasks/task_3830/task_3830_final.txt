
Sure, here's the updated Java method that checks for the specified conditions and throws the appropriate exceptions:

```java
import javax.xml.xpath.XPathFactory;
import javax.xml.xpath.XPathFactoryConfigurationException;

public class XPathFactoryHelper {
    public static XPathFactory getXPathFactory(String factoryClassName) throws XPathFactoryConfigurationException, NullPointerException, IllegalArgumentException {
        if (factoryClassName == null) {
            throw new NullPointerException("Factory class name cannot be null");
        }
        if (factoryClassName.length() == 0) {
            throw new IllegalArgumentException("Factory class name cannot be empty");
        }
        XPathFactory factory = null;
        try {
            factory = XPathFactory.newInstance(factoryClassName);
        } catch (XPathFactoryConfigurationException e) {
            throw e;
        } catch (Exception e) {
            throw new XPathFactoryConfigurationException("Error creating XPathFactory", e);
        }
        return factory;
    }
}
```

This updated method first checks if the `factoryClassName` parameter is `null` and throws a `NullPointerException` if it is. It then checks if the `factoryClassName` parameter is an empty string and throws an `IllegalArgumentException` if it is.

Next, it attempts to create a new instance of the `XPathFactory` using the specified factory class name. If the factory creation fails due to a `XPathFactoryConfigurationException`, it re-throws the exception. If any other exception occurs during the creation of the factory, it wraps the exception in a `XPathFactoryConfigurationException` and throws it.

If the factory is successfully created, it returns the newly created `XPathFactory` instance.
------------------------------------------------------
