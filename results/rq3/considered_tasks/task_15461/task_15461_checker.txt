List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
The fully qualified name of the Java JDK methods used in the `parseText` method are:

1. `java.util.Scanner.useDelimiter(java.lang.String)`
2. `java.util.Scanner.skip(int)`
3. `java.util.Scanner.next()`
4. `java.util.Scanner.nextInt()`
5. `java.util.Scanner.close()`
6. `java.text.SimpleDateFormat.parse(java.lang.String)`
7. `java.util.Date.toString()` (implicitly called by `System.out.println()`)

 + From response, we get: ['parseText', 'java.util.Scanner.useDelimiter(java.lang.String)', 'java.util.Scanner.skip(int)', 'java.util.Scanner.next()', 'java.util.Scanner.nextInt()', 'java.util.Scanner.close()', 'java.text.SimpleDateFormat.parse(java.lang.String)', 'java.util.Date.toString()']
------------------------------------------------------
Is the NoSuchElementException handled or caught for java.util.Scanner.next() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalStateException handled or caught for java.util.Scanner.next() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the InputMismatchException handled or caught for java.util.Scanner.nextInt() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the NoSuchElementException handled or caught for java.util.Scanner.nextInt() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IllegalStateException handled or caught for java.util.Scanner.nextInt() in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
The fully qualified name of the Java JDK methods used in the `parseText()` method above are:

- `java.util.Scanner.Scanner(java.lang.String)`
- `java.util.Scanner.useDelimiter(java.lang.String)`
- `java.util.Scanner.skip(int)`
- `java.util.Scanner.hasNext()`
- `java.util.Scanner.next()`
- `java.util.Scanner.hasNextInt()`
- `java.util.Scanner.nextInt()`
- `java.util.Scanner.close()`
- `java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String, java.util.Locale)`
- `java.text.SimpleDateFormat.parse(java.lang.String)`

 + From response, we get: ['parseText()', 'java.util.Scanner.Scanner(java.lang.String)', 'java.util.Scanner.useDelimiter(java.lang.String)', 'java.util.Scanner.skip(int)', 'java.util.Scanner.hasNext()', 'java.util.Scanner.next()', 'java.util.Scanner.hasNextInt()', 'java.util.Scanner.nextInt()', 'java.util.Scanner.close()', 'java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String,java.util.Locale)', 'java.text.SimpleDateFormat.parse(java.lang.String)']
------------------------------------------------------
Is the IllegalStateException handled or caught for java.util.Scanner.hasNext() in the code snippet? Answer in Yes or No only.
Yes. The `IllegalStateException` is caught and handled in the code snippet for the `Scanner.hasNext()` method. If the scanner is closed for `Scanner.next()`, an `IllegalStateException` is thrown and caught in the `parseText()` method, which then re-throws the exception to be caught in the `main()` method and printed to the console using `e.printStackTrace()`.
------------------------------------------------------
Is the NoSuchElementException handled or caught for java.util.Scanner.next() in the code snippet? Answer in Yes or No only.
Yes. The `NoSuchElementException` is caught and handled in the code snippet for the `Scanner.next()` method. If no more tokens are available for `Scanner.next()`, a `NoSuchElementException` is thrown and caught in the `parseText()` method, which then re-throws the exception to be caught in the `main()` method and printed to the console using `e.printStackTrace()`.
------------------------------------------------------
Is the IllegalStateException handled or caught for java.util.Scanner.next() in the code snippet? Answer in Yes or No only.
Yes. The `IllegalStateException` is caught and handled in the code snippet for the `Scanner.next()` method. If the scanner is closed for `Scanner.next()`, an `IllegalStateException` is thrown and caught in the `parseText()` method, which then re-throws the exception to be caught in the `main()` method and printed to the console using `e.printStackTrace()`.
------------------------------------------------------
Is the IllegalStateException handled or caught for java.util.Scanner.hasNextInt() in the code snippet? Answer in Yes or No only.
Yes. The `IllegalStateException` is caught and handled in the code snippet for the `Scanner.hasNextInt()` method. If the scanner is closed for `Scanner.nextInt()`, an `IllegalStateException` is thrown and caught in the `parseText()` method, which then re-throws the exception to be caught in the `main()` method and printed to the console using `e.printStackTrace()`.
------------------------------------------------------
Is the InputMismatchException handled or caught for java.util.Scanner.nextInt() in the code snippet? Answer in Yes or No only.
Yes. The `InputMismatchException` is caught and handled in the code snippet for the `Scanner.nextInt()` method. If the next token does not match the integer regular expression, or is out of range for `Scanner.nextInt()`, an `InputMismatchException` is thrown and caught in the `parseText()` method, which then re-throws the exception to be caught in the `main()` method and printed to the console using `e.printStackTrace()`.
------------------------------------------------------
Is the NoSuchElementException handled or caught for java.util.Scanner.nextInt() in the code snippet? Answer in Yes or No only.
Yes. The `NoSuchElementException` is caught and handled in the code snippet for the `Scanner.nextInt()` method. If the input is exhausted for `Scanner.nextInt()`, a `NoSuchElementException` is thrown and caught in the `parseText()` method, which then re-throws the exception to be caught in the `main()` method and printed to the console using `e.printStackTrace()`.
------------------------------------------------------
Is the IllegalStateException handled or caught for java.util.Scanner.nextInt() in the code snippet? Answer in Yes or No only.
Yes. The `IllegalStateException` is caught and handled in the code snippet for the `Scanner.nextInt()` method. If the scanner is closed for `Scanner.nextInt()`, an `IllegalStateException` is thrown and caught in the `parseText()` method, which then re-throws the exception to be caught in the `main()` method and printed to the console using `e.printStackTrace()`.
------------------------------------------------------
