Please write a java method that Loads an agent.
Here is an example Java method that loads an agent:

```java
public static void loadAgent(String agentJarFilePath, String agentArgs) throws Exception {
    VirtualMachine vm = null;
    try {
        vm = VirtualMachine.attach("pid"); // replace "pid" with the process ID of the target JVM
        vm.loadAgent(agentJarFilePath, agentArgs);
    } finally {
        if (vm != null) {
            vm.detach();
        }
    }
}
```

This method uses the `VirtualMachine` class from the `com.sun.tools.attach` package to attach to a running JVM process and load the specified agent JAR file. The `agentJarFilePath` parameter should be the path to the agent JAR file, and the `agentArgs` parameter should be any arguments to pass to the agent's `premain` method (if it has one). Note that you will need to have the appropriate permissions to attach to the target JVM process.
------------------------------------------------------
Please check If an I/O error occurs for com.sun.tools.attach.VirtualMachine.detach() in the code snippet you provided, otherwise throw IOException.
Sure, here's an updated version of the code snippet that checks for an `IOException` when detaching from the `VirtualMachine`:

```java
import java.io.IOException;
import com.sun.tools.attach.VirtualMachine;

public static void loadAgent(String agentJarFilePath, String agentArgs) throws Exception {
    VirtualMachine vm = null;
    try {
        vm = VirtualMachine.attach("pid"); // replace "pid" with the process ID of the target JVM
        vm.loadAgent(agentJarFilePath, agentArgs);
    } finally {
        if (vm != null) {
            try {
                vm.detach();
            } catch (IOException e) {
                throw new IOException("Failed to detach from VirtualMachine", e);
            }
        }
    }
}
```

This version of the method catches any `IOException` that may occur when detaching from the `VirtualMachine`, and re-throws it as a new `IOException` with a more descriptive message.
------------------------------------------------------
