Please write a java method that Sets the type of Window decorations (such as borders, widgets for closing a Window, title ...) the JRootPane should provide.
Here's a Java method that sets the type of window decorations for a JRootPane:

```java
public void setWindowDecorations(JRootPane rootPane, int decorationStyle) {
    switch (decorationStyle) {
        case JRootPane.NONE:
            rootPane.setWindowDecorationStyle(JRootPane.NONE);
            break;
        case JRootPane.FRAME:
            rootPane.setWindowDecorationStyle(JRootPane.FRAME);
            break;
        case JRootPane.PLAIN_DIALOG:
            rootPane.setWindowDecorationStyle(JRootPane.PLAIN_DIALOG);
            break;
        case JRootPane.INFORMATION_DIALOG:
            rootPane.setWindowDecorationStyle(JRootPane.INFORMATION_DIALOG);
            break;
        case JRootPane.ERROR_DIALOG:
            rootPane.setWindowDecorationStyle(JRootPane.ERROR_DIALOG);
            break;
        case JRootPane.COLOR_CHOOSER_DIALOG:
            rootPane.setWindowDecorationStyle(JRootPane.COLOR_CHOOSER_DIALOG);
            break;
        case JRootPane.FILE_CHOOSER_DIALOG:
            rootPane.setWindowDecorationStyle(JRootPane.FILE_CHOOSER_DIALOG);
            break;
        case JRootPane.QUESTION_DIALOG:
            rootPane.setWindowDecorationStyle(JRootPane.QUESTION_DIALOG);
            break;
        case JRootPane.WARNING_DIALOG:
            rootPane.setWindowDecorationStyle(JRootPane.WARNING_DIALOG);
            break;
        default:
            throw new IllegalArgumentException("Invalid decoration style: " + decorationStyle);
    }
}
```

This method takes two parameters: a JRootPane object and an integer representing the desired decoration style. The method uses a switch statement to set the window decoration style based on the integer value passed in. If an invalid decoration style is passed in, the method throws an IllegalArgumentException.
------------------------------------------------------
Please check if style is        not one of: NONE, FRAME,        PLAIN_DIALOG, INFORMATION_DIALOG,        ERROR_DIALOG, COLOR_CHOOSER_DIALOG,        FILE_CHOOSER_DIALOG, QUESTION_DIALOG, or        WARNING_DIALOG. for javax.swing.JRootPane.setWindowDecorationStyle(int) in the code snippet you provided, otherwise throw IllegalArgumentException.
Sure, here's the updated code snippet that checks if the decoration style is valid or not:

```java
public void setWindowDecorations(JRootPane rootPane, int decorationStyle) {
    if (decorationStyle != JRootPane.NONE &&
        decorationStyle != JRootPane.FRAME &&
        decorationStyle != JRootPane.PLAIN_DIALOG &&
        decorationStyle != JRootPane.INFORMATION_DIALOG &&
        decorationStyle != JRootPane.ERROR_DIALOG &&
        decorationStyle != JRootPane.COLOR_CHOOSER_DIALOG &&
        decorationStyle != JRootPane.FILE_CHOOSER_DIALOG &&
        decorationStyle != JRootPane.QUESTION_DIALOG &&
        decorationStyle != JRootPane.WARNING_DIALOG) {
        throw new IllegalArgumentException("Invalid decoration style: " + decorationStyle);
    }
    rootPane.setWindowDecorationStyle(decorationStyle);
}
```

This method first checks if the decoration style is not one of the valid options using a series of if statements. If the decoration style is invalid, the method throws an IllegalArgumentException with an appropriate error message. If the decoration style is valid, the method sets the window decoration style using the setWindowDecorationStyle() method of the JRootPane object.
------------------------------------------------------
