List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. `java.net.InetAddress.getByName(java.lang.String)`
2. `java.net.Socket.Socket(java.net.InetAddress, int)`
3. `java.net.Socket.close()`
4. `java.io.IOException.printStackTrace()`

 + From response, we get: ['java.net.InetAddress.getByName(java.lang.String)', 'java.net.Socket.Socket(java.net.InetAddress,int)', 'java.net.Socket.close()', 'java.io.IOException.printStackTrace()']
------------------------------------------------------
Is the UnknownHostException handled or caught for java.net.InetAddress.getByName(java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the SecurityException handled or caught for java.net.InetAddress.getByName(java.lang.String) in the code snippet? Answer in Yes or No only.
No.
------------------------------------------------------
Is the IOException handled or caught for java.net.Socket.close() in the code snippet? Answer in Yes or No only.
Yes.
------------------------------------------------------
List the fully qualified name of the Java JDK methods used in the method above. Provide only name with parameters, no other text. Parameters must be fully qualified. Display in a list.
1. java.net.InetAddress.getByName(String host)
2. java.net.InetAddress instanceof java.net.Inet6Address
3. java.net.InetAddress.getScopeId()
4. java.lang.System.getSecurityManager()
5. java.lang.SecurityManager.checkConnect(String host, int port)
6. java.net.Socket.Socket(java.net.InetAddress address, int port)
7. java.net.Socket.close()

 + From response, we get: []
------------------------------------------------------
