
Sure, here's the updated code snippet that checks for the conditions you mentioned and throws an `IndexOutOfBoundsException` if any of them are true:

```
public String getFontProperty(String cssRule) {
    String fontProperty = "";
    int fontIndex = cssRule.indexOf("font:");
    if (fontIndex != -1) {
        int semicolonIndex = cssRule.indexOf(";", fontIndex);
        if (semicolonIndex != -1) {
            try {
                fontProperty = cssRule.substring(fontIndex, semicolonIndex + 1);
            } catch (IndexOutOfBoundsException e) {
                throw new IndexOutOfBoundsException("Invalid indices for substring: " + e.getMessage());
            }
        } else {
            try {
                fontProperty = cssRule.substring(fontIndex);
            } catch (IndexOutOfBoundsException e) {
                throw new IndexOutOfBoundsException("Invalid indices for substring: " + e.getMessage());
            }
        }
    }
    return fontProperty;
}
```

This updated method uses a `try-catch` block to catch any `IndexOutOfBoundsException` that may occur when calling the `substring()` method. If an exception is caught, it throws a new `IndexOutOfBoundsException` with a custom error message that includes the original exception's message. This way, the caller of the method can be informed of the specific error that occurred.
------------------------------------------------------
