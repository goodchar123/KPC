
Sure, here's the updated code snippet that checks for SQLExceptions when calling `getParameterCount()` and `getParameterTypeName()`:

```java
public void getCommandParameters(RowSet rowSet) throws SQLException {
    // Get the parameters for the RowSet's command
    ParameterMetaData paramMetaData = rowSet.getMetaData().getParameterMetaData();
    int numParams;
    try {
        numParams = paramMetaData.getParameterCount();
    } catch (SQLException e) {
        throw new SQLException("Error getting parameter count: " + e.getMessage());
    }
    
    // Print out the parameter names and values
    for (int i = 1; i <= numParams; i++) {
        String paramName;
        Object paramValue;
        try {
            paramName = paramMetaData.getParameterTypeName(i);
            paramValue = rowSet.getObject(i);
        } catch (SQLException e) {
            throw new SQLException("Error getting parameter " + i + ": " + e.getMessage());
        }
        System.out.println("Parameter " + i + ": " + paramName + " = " + paramValue);
    }
}
```

This updated method now includes try-catch blocks around the calls to `getParameterCount()` and `getParameterTypeName()`. If a SQLException is caught, it is re-thrown with a more descriptive error message.
------------------------------------------------------
