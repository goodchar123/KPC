{"loop_id": 0, "unhandled_api_list": ["java.util.List.clear()", "java.lang.Object.notifyAll()"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if the clear operation         is not supported by this list for java.util.List.clear() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the current thread is not               the owner of this object's monitor. for java.lang.Object.notifyAll() in the code snippet you provided, otherwise throw IllegalMonitorStateException."], "num_of_unhandled_exception": 2}
{"loop_id": 1, "unhandled_api_list": ["java.util.List.clear()", "java.lang.Object.notifyAll()", "java.lang.Thread.holdsLock(java.lang.Object)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if the clear operation         is not supported by this list for java.util.List.clear() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the current thread is not               the owner of this object's monitor. for java.lang.Object.notifyAll() in the code snippet you provided, otherwise throw IllegalMonitorStateException.", "Please check if obj is null for java.lang.Thread.holdsLock(java.lang.Object) in the code snippet you provided, otherwise throw NullPointerException."], "num_of_unhandled_exception": 3}
{"loop_id": 2, "unhandled_api_list": ["java.util.List.add(E)"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if the add operation         is not supported by this list for java.util.List.add(E) in the code snippet you provided, otherwise throw UnsupportedOperationException."], "num_of_unhandled_exception": 1}
{"loop_id": 3, "unhandled_api_list": ["java.lang.Object.wait()"], "num_of_unhandled_api": 1, "unhandled_exception_list": ["Please check if the current thread is not         the owner of the object's monitor for java.lang.Object.wait() in the code snippet you provided, otherwise throw IllegalMonitorStateException."], "num_of_unhandled_exception": 1}
{"loop_id": 4, "unhandled_api_list": ["java.util.List.clear()", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.get(long,java.util.concurrent.TimeUnit)", "java.util.concurrent.Future.get(long,java.util.concurrent.TimeUnit)", "java.lang.Object.wait(long)"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check if the clear operation         is not supported by this list for java.util.List.clear() in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the computation was cancelled for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw CancellationException.", "Please check if the computation threw an exception for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw ExecutionException.", "Please check if the computation was cancelled for java.util.concurrent.Future.get(long,java.util.concurrent.TimeUnit) in the code snippet you provided, otherwise throw CancellationException.", "Please check if the computation threw an exception for java.util.concurrent.Future.get(long,java.util.concurrent.TimeUnit) in the code snippet you provided, otherwise throw ExecutionException.", "Please check if timeoutMillis is negative for java.lang.Object.wait(long) in the code snippet you provided, otherwise throw IllegalArgumentException."], "num_of_unhandled_exception": 6}
{"loop_id": 5, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
