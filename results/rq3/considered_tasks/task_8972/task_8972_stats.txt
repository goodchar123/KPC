{"loop_id": 0, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)", "java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)", "java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.get()", "java.util.concurrent.ExecutorService.shutdown()"], "num_of_unhandled_api": 6, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the task cannot be         scheduled for execution for java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable) in the code snippet you provided, otherwise throw RejectedExecutionException.", "Please check if the task is null for java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the computation was cancelled for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw CancellationException.", "Please check if the current thread was interrupted while waiting for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw InterruptedException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdown() in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 6}
{"loop_id": 1, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)", "java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the task cannot be         scheduled for execution for java.util.concurrent.ExecutorService.submit(java.util.concurrent.Callable) in the code snippet you provided, otherwise throw RejectedExecutionException."], "num_of_unhandled_exception": 2}
{"loop_id": 2, "unhandled_api_list": ["java.util.concurrent.Executors.newFixedThreadPool(int)", "java.util.List.add(E)", "java.util.List.add(E)", "java.util.List.add(E)", "java.util.List.add(E)", "java.util.concurrent.Future.get()", "java.util.concurrent.Future.get()", "java.util.concurrent.ExecutorService.shutdown()"], "num_of_unhandled_api": 8, "unhandled_exception_list": ["Please check if nThreads <= 0 for java.util.concurrent.Executors.newFixedThreadPool(int) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the add operation         is not supported by this list for java.util.List.add(E) in the code snippet you provided, otherwise throw UnsupportedOperationException.", "Please check if the class of the specified element         prevents it from being added to this list for java.util.List.add(E) in the code snippet you provided, otherwise throw ClassCastException.", "Please check if the specified element is null and this         list does not permit null elements for java.util.List.add(E) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if some property of this element         prevents it from being added to this list for java.util.List.add(E) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the computation was cancelled for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw CancellationException.", "Please check if the current thread was interrupted while waiting for java.util.concurrent.Future.get() in the code snippet you provided, otherwise throw InterruptedException.", "Please check if a security manager exists and         shutting down this ExecutorService may manipulate         threads that the caller is not permitted to modify         because it does not hold RuntimePermission(\"modifyThread\"),         or the security manager's checkAccess method         denies access. for java.util.concurrent.ExecutorService.shutdown() in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 8}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
