
Here's the updated Java method that checks for the conditions you mentioned:

```java
public LocalDateTime addTime(LocalDateTime dateTime, long amount, TemporalUnit unit) {
    try {
        return dateTime.plus(amount, unit);
    } catch (DateTimeException e) {
        System.out.println("Cannot add time: " + e.getMessage());
    } catch (UnsupportedTemporalTypeException e) {
        System.out.println("Unsupported unit: " + e.getMessage());
    } catch (ArithmeticException e) {
        System.out.println("Numeric overflow: " + e.getMessage());
    }
    return null;
}
```

This method takes in three parameters:

1. `dateTime`: The date-time to which the specified amount needs to be added.
2. `amount`: The amount to be added to the date-time.
3. `unit`: The unit of time in which the amount is specified.

The `plus()` method of the `LocalDateTime` class is used to add the specified amount to the given date-time. This method throws `DateTimeException`, `UnsupportedTemporalTypeException`, and `ArithmeticException` under certain conditions. These exceptions are caught in the method and appropriate error messages are printed. If any of these exceptions occur, the method returns `null`.

You can modify the error messages or the return value as per your requirements.
------------------------------------------------------
