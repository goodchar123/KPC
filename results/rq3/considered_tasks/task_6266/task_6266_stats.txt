{"loop_id": 0, "unhandled_api_list": ["java.time.ZonedDateTime.of(int,int,int,int,int,int,int,java.time.ZoneId)", "java.time.ZonedDateTime.withDayOfMonth(int)"], "num_of_unhandled_api": 2, "unhandled_exception_list": ["Please check if the value of any field is out of range, or  if the day of month is invalid for the month year for java.time.ZonedDateTime.of(int,int,int,int,int,int,int,java.time.ZoneId) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the day of month value is invalid,  or if the day of month is invalid for the month year for java.time.ZonedDateTime.withDayOfMonth(int) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 2}
{"loop_id": 1, "unhandled_api_list": ["java.time.ZonedDateTime.withDayOfMonth(int)", "java.time.YearMonth.of(int,int)", "java.time.ZonedDateTime.of(int,int,int,int,int,int,int,java.time.ZoneId)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if the day of month value is invalid,  or if the day of month is invalid for the month year for java.time.ZonedDateTime.withDayOfMonth(int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if either field value is invalid for java.time.YearMonth.of(int,int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the value of any field is out of range, or  if the day of month is invalid for the month year for java.time.ZonedDateTime.of(int,int,int,int,int,int,int,java.time.ZoneId) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 3}
{"loop_id": 2, "unhandled_api_list": ["java.time.YearMonth.of(int,int)", "java.time.ZonedDateTime.withDayOfMonth(int)", "java.time.ZonedDateTime.of(int,int,int,int,int,int,int,java.time.ZoneId)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if either field value is invalid for java.time.YearMonth.of(int,int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the day of month value is invalid,  or if the day of month is invalid for the month year for java.time.ZonedDateTime.withDayOfMonth(int) in the code snippet you provided, otherwise throw DateTimeException.", "Please check if the value of any field is out of range, or  if the day of month is invalid for the month year for java.time.ZonedDateTime.of(int,int,int,int,int,int,int,java.time.ZoneId) in the code snippet you provided, otherwise throw DateTimeException."], "num_of_unhandled_exception": 3}
{"loop_id": 3, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
