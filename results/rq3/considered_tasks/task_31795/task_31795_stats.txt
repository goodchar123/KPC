{"loop_id": 0, "unhandled_api_list": ["javax.sound.sampled.AudioSystem.getLine(javax.sound.sampled.Line.Info)", "javax.sound.sampled.AudioSystem.getLine(javax.sound.sampled.Line.Info)", "javax.sound.sampled.AudioSystem.getLine(javax.sound.sampled.Line.Info)", "javax.sound.sampled.SourceDataLine.open(javax.sound.sampled.AudioFormat)", "javax.sound.sampled.SourceDataLine.open(javax.sound.sampled.AudioFormat)", "javax.sound.sampled.SourceDataLine.open(javax.sound.sampled.AudioFormat)", "javax.sound.sampled.SourceDataLine.open(javax.sound.sampled.AudioFormat)"], "num_of_unhandled_api": 7, "unhandled_exception_list": ["Please check if a matching line is not available due         to resource restrictions for javax.sound.sampled.AudioSystem.getLine(javax.sound.sampled.Line.Info) in the code snippet you provided, otherwise throw LineUnavailableException.", "Please check if a matching line is not available due to         security restrictions for javax.sound.sampled.AudioSystem.getLine(javax.sound.sampled.Line.Info) in the code snippet you provided, otherwise throw SecurityException.", "Please check if the system does not support at least         one line matching the specified Line.Info object through         any installed mixer for javax.sound.sampled.AudioSystem.getLine(javax.sound.sampled.Line.Info) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the line cannot be opened due to         resource restrictions for javax.sound.sampled.SourceDataLine.open(javax.sound.sampled.AudioFormat) in the code snippet you provided, otherwise throw LineUnavailableException.", "Please check if format is not fully specified         or invalid for javax.sound.sampled.SourceDataLine.open(javax.sound.sampled.AudioFormat) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the line is already open for javax.sound.sampled.SourceDataLine.open(javax.sound.sampled.AudioFormat) in the code snippet you provided, otherwise throw IllegalStateException.", "Please check if the line cannot be opened due to security         restrictions for javax.sound.sampled.SourceDataLine.open(javax.sound.sampled.AudioFormat) in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 7}
{"loop_id": 1, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
