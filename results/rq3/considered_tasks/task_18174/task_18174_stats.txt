{"loop_id": 0, "unhandled_api_list": ["javax.script.ScriptEngineManager.getEngineByName(java.lang.String)", "javax.script.ScriptEngineManager.getEngineByName(java.lang.String)", "javax.script.Compilable.compile(java.lang.String)", "javax.script.ScriptEngine.get(java.lang.String)", "javax.script.ScriptEngine.get(java.lang.String)", "java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)", "java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)", "java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)", "java.lang.Class.getClassLoader()"], "num_of_unhandled_api": 9, "unhandled_exception_list": ["Please check if shortName is null. for javax.script.ScriptEngineManager.getEngineByName(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if shortName is null. for javax.script.ScriptEngineManager.getEngineByName(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the argument is null. for javax.script.Compilable.compile(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if key is null. for javax.script.ScriptEngine.get(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if key is empty. for javax.script.ScriptEngine.get(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if any of the           restrictions on the parameters are violated for java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if a security manager, s, is present          and any of the following conditions is met:           the given loader is null and               the caller's class loader is not null and the               invocation of s.checkPermission with               RuntimePermission(\"getClassLoader\") permission               denies access; for each proxy interface, intf,               the caller's class loader is not the same as or an               ancestor of the class loader for intf and               invocation of s.checkPackageAccess() denies access to intf; any of the given proxy interfaces is non public and the               caller class is not in the same runtime package               as the non public interface and the invocation of               s.checkPermission with               ReflectPermission(\"newProxyInPackage.{package name}\")               permission denies access. for java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) in the code snippet you provided, otherwise throw SecurityException.", "Please check if the interfaces array          argument or any of its elements are null, or          if the invocation handler, h, is          null for java.lang.reflect.Proxy.newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if a security manager is present, and the caller's class loader          is not null and is not the same as or an ancestor of the          class loader for the class whose class loader is requested,          and the caller does not have the          RuntimePermission(\"getClassLoader\") for java.lang.Class.getClassLoader() in the code snippet you provided, otherwise throw SecurityException."], "num_of_unhandled_exception": 9}
{"loop_id": 1, "unhandled_api_list": ["javax.script.ScriptEngineManager.getEngineByName(java.lang.String)", "javax.script.ScriptEngine.get(java.lang.String)", "javax.script.ScriptEngine.get(java.lang.String)", "javax.script.Compilable.compile(java.lang.String)", "javax.script.Compilable.compile(java.lang.String)", "javax.script.CompiledScript.eval()", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...)", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...)", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...)", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...)", "java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...)", "java.lang.ClassLoader.loadClass(java.lang.String)"], "num_of_unhandled_api": 12, "unhandled_exception_list": ["Please check if shortName is null. for javax.script.ScriptEngineManager.getEngineByName(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if key is null. for javax.script.ScriptEngine.get(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if key is empty. for javax.script.ScriptEngine.get(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if compilation fails. for javax.script.Compilable.compile(java.lang.String) in the code snippet you provided, otherwise throw ScriptException.", "Please check if the argument is null. for javax.script.Compilable.compile(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if an error occurs. for javax.script.CompiledScript.eval() in the code snippet you provided, otherwise throw ScriptException.", "Please check if this Method object              is enforcing Java language access control and the underlying              method is inaccessible. for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet you provided, otherwise throw IllegalAccessException.", "Please check if the method is an              instance method and the specified object argument              is not an instance of the class or interface              declaring the underlying method (or of a subclass              or implementor thereof); if the number of actual              and formal parameters differ; if an unwrapping              conversion for primitive arguments fails; or if,              after possible unwrapping, a parameter value              cannot be converted to the corresponding formal              parameter type by a method invocation conversion. for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check if the underlying method              throws an exception. for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet you provided, otherwise throw InvocationTargetException.", "Please check if the specified object is null              and the method is an instance method. for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if the initialization provoked by this method fails. for java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object...) in the code snippet you provided, otherwise throw ExceptionInInitializerError.", "Please check If the class was not found for java.lang.ClassLoader.loadClass(java.lang.String) in the code snippet you provided, otherwise throw ClassNotFoundException."], "num_of_unhandled_exception": 12}
{"loop_id": 2, "unhandled_api_list": ["javax.script.ScriptEngineManager.getEngineByName(java.lang.String)", "javax.script.ScriptEngine.get(java.lang.String)", "java.lang.ClassLoader.loadClass(java.lang.String)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if shortName is null. for javax.script.ScriptEngineManager.getEngineByName(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if key is empty. for javax.script.ScriptEngine.get(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check If the class was not found for java.lang.ClassLoader.loadClass(java.lang.String) in the code snippet you provided, otherwise throw ClassNotFoundException."], "num_of_unhandled_exception": 3}
{"loop_id": 3, "unhandled_api_list": ["javax.script.ScriptEngineManager.getEngineByName(java.lang.String)", "javax.script.ScriptEngine.get(java.lang.String)", "java.lang.ClassLoader.loadClass(java.lang.String)"], "num_of_unhandled_api": 3, "unhandled_exception_list": ["Please check if shortName is null. for javax.script.ScriptEngineManager.getEngineByName(java.lang.String) in the code snippet you provided, otherwise throw NullPointerException.", "Please check if key is empty. for javax.script.ScriptEngine.get(java.lang.String) in the code snippet you provided, otherwise throw IllegalArgumentException.", "Please check If the class was not found for java.lang.ClassLoader.loadClass(java.lang.String) in the code snippet you provided, otherwise throw ClassNotFoundException."], "num_of_unhandled_exception": 3}
{"loop_id": 4, "unhandled_api_list": [], "num_of_unhandled_api": 0, "unhandled_exception_list": [], "num_of_unhandled_exception": 0}
