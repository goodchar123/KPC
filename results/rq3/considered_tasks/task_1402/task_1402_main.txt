Please write a java method that Description copied from interface:Â NotificationBroadcaster
Here is an example of a Java method that implements the NotificationBroadcaster interface:

```
public class MyNotificationBroadcaster implements NotificationBroadcaster {

    private NotificationBroadcasterSupport broadcasterSupport = new NotificationBroadcasterSupport();

    @Override
    public void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback) throws IllegalArgumentException {
        broadcasterSupport.addNotificationListener(listener, filter, handback);
    }

    @Override
    public void removeNotificationListener(NotificationListener listener) throws ListenerNotFoundException {
        broadcasterSupport.removeNotificationListener(listener);
    }

    @Override
    public MBeanNotificationInfo[] getNotificationInfo() {
        return broadcasterSupport.getNotificationInfo();
    }

    public void sendNotification(Notification notification) {
        broadcasterSupport.sendNotification(notification);
    }
}
```

This class implements the NotificationBroadcaster interface and provides implementations for the three required methods: `addNotificationListener()`, `removeNotificationListener()`, and `getNotificationInfo()`. Additionally, it provides a custom method `sendNotification()` that can be used to send notifications to any registered listeners.
------------------------------------------------------
Please check thrown if the listener is null. for javax.management.NotificationBroadcasterSupport.addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object) in the code snippet you provided, otherwise throw IllegalArgumentException.
Please check The listener is not registered with the MBean. for javax.management.NotificationBroadcasterSupport.removeNotificationListener(javax.management.NotificationListener) in the code snippet you provided, otherwise throw ListenerNotFoundException.
Here is the updated code snippet that includes the requested checks:

```
public class MyNotificationBroadcaster implements NotificationBroadcaster {

    private NotificationBroadcasterSupport broadcasterSupport = new NotificationBroadcasterSupport();

    @Override
    public void addNotificationListener(NotificationListener listener, NotificationFilter filter, Object handback) throws IllegalArgumentException {
        if (listener == null) {
            throw new IllegalArgumentException("Listener cannot be null");
        }
        broadcasterSupport.addNotificationListener(listener, filter, handback);
    }

    @Override
    public void removeNotificationListener(NotificationListener listener) throws ListenerNotFoundException {
        if (!broadcasterSupport.getNotificationListeners().contains(listener)) {
            throw new ListenerNotFoundException("Listener is not registered with the MBean");
        }
        broadcasterSupport.removeNotificationListener(listener);
    }

    @Override
    public MBeanNotificationInfo[] getNotificationInfo() {
        return broadcasterSupport.getNotificationInfo();
    }

    public void sendNotification(Notification notification) {
        broadcasterSupport.sendNotification(notification);
    }
}
```

In the `addNotificationListener()` method, we check if the listener is null and throw an `IllegalArgumentException` if it is. In the `removeNotificationListener()` method, we check if the listener is registered with the MBean and throw a `ListenerNotFoundException` if it is not.
------------------------------------------------------
